%!PS-Adobe-3.1 EPSF-3.0
%ADO_DSC_Encoding: MacOS Roman
%%Title: UoE_Centred Logo_black.eps
%%Creator: Adobe Illustrator(R) 18.0
%%For: Marc Wright
%%CreationDate: 02/12/2014
%%BoundingBox: 0 0 192 155
%%HiResBoundingBox: 0 0 191.9625 154.0862
%%CropBox: 0 0 191.9625 154.0862
%%LanguageLevel: 2
%%DocumentData: Clean7Bit
%ADOBeginClientInjection: DocumentHeader "AI11EPS"
%%AI8_CreatorVersion: 18.0.0%AI9_PrintingDataBegin%ADO_BuildNumber: Adobe Illustrator(R) 18.0.0 x18 R agm 4.7713 ct 5.3840%ADO_ContainsXMP: MainFirst
%ADOEndClientInjection: DocumentHeader "AI11EPS"
%%Pages: 1
%%DocumentNeededResources: 
%%DocumentSuppliedResources: procset Adobe_AGM_Image 1.0 0
%%+ procset Adobe_CoolType_Utility_T42 1.0 0
%%+ procset Adobe_CoolType_Utility_MAKEOCF 1.23 0
%%+ procset Adobe_CoolType_Core 2.31 0
%%+ procset Adobe_AGM_Core 2.0 0
%%+ procset Adobe_AGM_Utils 1.0 0
%%DocumentFonts: 
%%DocumentNeededFonts: 
%%DocumentNeededFeatures: 
%%DocumentSuppliedFeatures: 
%%DocumentProcessColors:  Black
%%DocumentCustomColors: 
%%CMYKCustomColor: 
%%RGBCustomColor: 
%%EndComments
                                                                                                                                                                                                                                                  
                                                                                                                                                                                                                                                         
                                                                                                                                                                                                                                                         
                                                                                                                                                                                                                                                         
                                                                                                                                                                                                                                                         
                                                                                                                                                                                                                                                         
%%BeginDefaults
%%ViewingOrientation: 1 0 0 1
%%EndDefaults
%%BeginProlog
%%BeginResource: procset Adobe_AGM_Utils 1.0 0
%%Version: 1.0 0
%%Copyright: Copyright(C)2000-2006 Adobe Systems, Inc. All Rights Reserved.
systemdict/setpacking known
{currentpacking	true setpacking}if
userdict/Adobe_AGM_Utils 75 dict dup begin put
/bdf
{bind def}bind def
/nd{null def}bdf
/xdf
{exch def}bdf
/ldf 
{load def}bdf
/ddf
{put}bdf	
/xddf
{3 -1 roll put}bdf	
/xpt
{exch put}bdf
/ndf
{
	exch dup where{
		pop pop pop
	}{
		xdf
	}ifelse
}def
/cdndf
{
	exch dup currentdict exch known{
		pop pop
	}{
		exch def
	}ifelse
}def
/gx
{get exec}bdf
/ps_level
	/languagelevel where{
		pop systemdict/languagelevel gx
	}{
		1
	}ifelse
def
/level2 
	ps_level 2 ge
def
/level3 
	ps_level 3 ge
def
/ps_version
	{version cvr}stopped{-1}if
def
/set_gvm
{currentglobal exch setglobal}bdf
/reset_gvm
{setglobal}bdf
/makereadonlyarray
{
	/packedarray where{pop packedarray
	}{
		array astore readonly}ifelse
}bdf
/map_reserved_ink_name
{
	dup type/stringtype eq{
		dup/Red eq{
			pop(_Red_)
		}{
			dup/Green eq{
				pop(_Green_)
			}{
				dup/Blue eq{
					pop(_Blue_)
				}{
					dup()cvn eq{
						pop(Process)
					}if
				}ifelse
			}ifelse
		}ifelse
	}if
}bdf
/AGMUTIL_GSTATE 22 dict def
/get_gstate
{
	AGMUTIL_GSTATE begin
	/AGMUTIL_GSTATE_clr_spc currentcolorspace def
	/AGMUTIL_GSTATE_clr_indx 0 def
	/AGMUTIL_GSTATE_clr_comps 12 array def
	mark currentcolor counttomark
		{AGMUTIL_GSTATE_clr_comps AGMUTIL_GSTATE_clr_indx 3 -1 roll put
		/AGMUTIL_GSTATE_clr_indx AGMUTIL_GSTATE_clr_indx 1 add def}repeat pop
	/AGMUTIL_GSTATE_fnt rootfont def
	/AGMUTIL_GSTATE_lw currentlinewidth def
	/AGMUTIL_GSTATE_lc currentlinecap def
	/AGMUTIL_GSTATE_lj currentlinejoin def
	/AGMUTIL_GSTATE_ml currentmiterlimit def
	currentdash/AGMUTIL_GSTATE_do xdf/AGMUTIL_GSTATE_da xdf
	/AGMUTIL_GSTATE_sa currentstrokeadjust def
	/AGMUTIL_GSTATE_clr_rnd currentcolorrendering def
	/AGMUTIL_GSTATE_op currentoverprint def
	/AGMUTIL_GSTATE_bg currentblackgeneration cvlit def
	/AGMUTIL_GSTATE_ucr currentundercolorremoval cvlit def
	currentcolortransfer cvlit/AGMUTIL_GSTATE_gy_xfer xdf cvlit/AGMUTIL_GSTATE_b_xfer xdf
		cvlit/AGMUTIL_GSTATE_g_xfer xdf cvlit/AGMUTIL_GSTATE_r_xfer xdf
	/AGMUTIL_GSTATE_ht currenthalftone def
	/AGMUTIL_GSTATE_flt currentflat def
	end
}def
/set_gstate
{
	AGMUTIL_GSTATE begin
	AGMUTIL_GSTATE_clr_spc setcolorspace
	AGMUTIL_GSTATE_clr_indx{AGMUTIL_GSTATE_clr_comps AGMUTIL_GSTATE_clr_indx 1 sub get
	/AGMUTIL_GSTATE_clr_indx AGMUTIL_GSTATE_clr_indx 1 sub def}repeat setcolor
	AGMUTIL_GSTATE_fnt setfont
	AGMUTIL_GSTATE_lw setlinewidth
	AGMUTIL_GSTATE_lc setlinecap
	AGMUTIL_GSTATE_lj setlinejoin
	AGMUTIL_GSTATE_ml setmiterlimit
	AGMUTIL_GSTATE_da AGMUTIL_GSTATE_do setdash
	AGMUTIL_GSTATE_sa setstrokeadjust
	AGMUTIL_GSTATE_clr_rnd setcolorrendering
	AGMUTIL_GSTATE_op setoverprint
	AGMUTIL_GSTATE_bg cvx setblackgeneration
	AGMUTIL_GSTATE_ucr cvx setundercolorremoval
	AGMUTIL_GSTATE_r_xfer cvx AGMUTIL_GSTATE_g_xfer cvx AGMUTIL_GSTATE_b_xfer cvx
		AGMUTIL_GSTATE_gy_xfer cvx setcolortransfer
	AGMUTIL_GSTATE_ht/HalftoneType get dup 9 eq exch 100 eq or
		{
		currenthalftone/HalftoneType get AGMUTIL_GSTATE_ht/HalftoneType get ne
			{
			 mark AGMUTIL_GSTATE_ht{sethalftone}stopped cleartomark
			}if
		}{
		AGMUTIL_GSTATE_ht sethalftone
		}ifelse
	AGMUTIL_GSTATE_flt setflat
	end
}def
/get_gstate_and_matrix
{
	AGMUTIL_GSTATE begin
	/AGMUTIL_GSTATE_ctm matrix currentmatrix def
	end
	get_gstate
}def
/set_gstate_and_matrix
{
	set_gstate
	AGMUTIL_GSTATE begin
	AGMUTIL_GSTATE_ctm setmatrix
	end
}def
/AGMUTIL_str256 256 string def
/AGMUTIL_src256 256 string def
/AGMUTIL_dst64 64 string def
/AGMUTIL_srcLen nd
/AGMUTIL_ndx nd
/AGMUTIL_cpd nd
/capture_cpd{
	//Adobe_AGM_Utils/AGMUTIL_cpd currentpagedevice ddf
}def
/thold_halftone
{
	level3
		{sethalftone currenthalftone}
		{
			dup/HalftoneType get 3 eq
			{
				sethalftone currenthalftone
			}{
				begin
				Width Height mul{
					Thresholds read{pop}if
				}repeat
				end
				currenthalftone
			}ifelse
		}ifelse
}def 
/rdcmntline
{
	currentfile AGMUTIL_str256 readline pop
	(%)anchorsearch{pop}if
}bdf
/filter_cmyk
{	
	dup type/filetype ne{
		exch()/SubFileDecode filter
	}{
		exch pop
	}
	ifelse
	[
	exch
	{
		AGMUTIL_src256 readstring pop
		dup length/AGMUTIL_srcLen exch def
		/AGMUTIL_ndx 0 def
		AGMCORE_plate_ndx 4 AGMUTIL_srcLen 1 sub{
			1 index exch get
			AGMUTIL_dst64 AGMUTIL_ndx 3 -1 roll put
			/AGMUTIL_ndx AGMUTIL_ndx 1 add def
		}for
		pop
		AGMUTIL_dst64 0 AGMUTIL_ndx getinterval
	}
	bind
	/exec cvx
	]cvx
}bdf
/filter_indexed_devn
{
	cvi Names length mul names_index add Lookup exch get
}bdf
/filter_devn
{	
	4 dict begin
	/srcStr xdf
	/dstStr xdf
	dup type/filetype ne{
		0()/SubFileDecode filter
	}if
	[
	exch
		[
			/devicen_colorspace_dict/AGMCORE_gget cvx/begin cvx
			currentdict/srcStr get/readstring cvx/pop cvx
			/dup cvx/length cvx 0/gt cvx[
				Adobe_AGM_Utils/AGMUTIL_ndx 0/ddf cvx
				names_index Names length currentdict/srcStr get length 1 sub{
					1/index cvx/exch cvx/get cvx
					currentdict/dstStr get/AGMUTIL_ndx/load cvx 3 -1/roll cvx/put cvx
					Adobe_AGM_Utils/AGMUTIL_ndx/AGMUTIL_ndx/load cvx 1/add cvx/ddf cvx
				}for
				currentdict/dstStr get 0/AGMUTIL_ndx/load cvx/getinterval cvx
			]cvx/if cvx
			/end cvx
		]cvx
		bind
		/exec cvx
	]cvx
	end
}bdf
/AGMUTIL_imagefile nd
/read_image_file
{
	AGMUTIL_imagefile 0 setfileposition
	10 dict begin
	/imageDict xdf
	/imbufLen Width BitsPerComponent mul 7 add 8 idiv def
	/imbufIdx 0 def
	/origDataSource imageDict/DataSource get def
	/origMultipleDataSources imageDict/MultipleDataSources get def
	/origDecode imageDict/Decode get def
	/dstDataStr imageDict/Width get colorSpaceElemCnt mul string def
	imageDict/MultipleDataSources known{MultipleDataSources}{false}ifelse
	{
		/imbufCnt imageDict/DataSource get length def
		/imbufs imbufCnt array def
		0 1 imbufCnt 1 sub{
			/imbufIdx xdf
			imbufs imbufIdx imbufLen string put
			imageDict/DataSource get imbufIdx[AGMUTIL_imagefile imbufs imbufIdx get/readstring cvx/pop cvx]cvx put
		}for
		DeviceN_PS2{
			imageDict begin
		 	/DataSource[DataSource/devn_sep_datasource cvx]cvx def
			/MultipleDataSources false def
			/Decode[0 1]def
			end
		}if
	}{
		/imbuf imbufLen string def
		Indexed_DeviceN level3 not and DeviceN_NoneName or{
			/srcDataStrs[imageDict begin
				currentdict/MultipleDataSources known{MultipleDataSources{DataSource length}{1}ifelse}{1}ifelse
				{
					Width Decode length 2 div mul cvi string
				}repeat
				end]def		
			imageDict begin
		 	/DataSource[AGMUTIL_imagefile Decode BitsPerComponent false 1/filter_indexed_devn load dstDataStr srcDataStrs devn_alt_datasource/exec cvx]cvx def
			/Decode[0 1]def
			end
		}{
			imageDict/DataSource[1 string dup 0 AGMUTIL_imagefile Decode length 2 idiv string/readstring cvx/pop cvx names_index/get cvx/put cvx]cvx put
			imageDict/Decode[0 1]put
		}ifelse
	}ifelse
	imageDict exch
	load exec
	imageDict/DataSource origDataSource put
	imageDict/MultipleDataSources origMultipleDataSources put
	imageDict/Decode origDecode put	
	end
}bdf
/write_image_file
{
	begin
	{(AGMUTIL_imagefile)(w+)file}stopped{
		false
	}{
		Adobe_AGM_Utils/AGMUTIL_imagefile xddf 
		2 dict begin
		/imbufLen Width BitsPerComponent mul 7 add 8 idiv def
		MultipleDataSources{DataSource 0 get}{DataSource}ifelse type/filetype eq{
			/imbuf imbufLen string def
		}if
		1 1 Height MultipleDataSources not{Decode length 2 idiv mul}if{
			pop
			MultipleDataSources{
			 	0 1 DataSource length 1 sub{
					DataSource type dup
					/arraytype eq{
						pop DataSource exch gx
					}{
						/filetype eq{
							DataSource exch get imbuf readstring pop
						}{
							DataSource exch get
						}ifelse
					}ifelse
					AGMUTIL_imagefile exch writestring
				}for
			}{
				DataSource type dup
				/arraytype eq{
					pop DataSource exec
				}{
					/filetype eq{
						DataSource imbuf readstring pop
					}{
						DataSource
					}ifelse
				}ifelse
				AGMUTIL_imagefile exch writestring
			}ifelse
		}for
		end
		true
	}ifelse
	end
}bdf
/close_image_file
{
	AGMUTIL_imagefile closefile(AGMUTIL_imagefile)deletefile
}def
statusdict/product known userdict/AGMP_current_show known not and{
	/pstr statusdict/product get def
	pstr(HP LaserJet 2200)eq 	
	pstr(HP LaserJet 4000 Series)eq or
	pstr(HP LaserJet 4050 Series )eq or
	pstr(HP LaserJet 8000 Series)eq or
	pstr(HP LaserJet 8100 Series)eq or
	pstr(HP LaserJet 8150 Series)eq or
	pstr(HP LaserJet 5000 Series)eq or
	pstr(HP LaserJet 5100 Series)eq or
	pstr(HP Color LaserJet 4500)eq or
	pstr(HP Color LaserJet 4600)eq or
	pstr(HP LaserJet 5Si)eq or
	pstr(HP LaserJet 1200 Series)eq or
	pstr(HP LaserJet 1300 Series)eq or
	pstr(HP LaserJet 4100 Series)eq or 
	{
 		userdict/AGMP_current_show/show load put
		userdict/show{
		 currentcolorspace 0 get
		 /Pattern eq
		 {false charpath f}
		 {AGMP_current_show}ifelse
		}put
	}if
	currentdict/pstr undef
}if
/consumeimagedata
{
	begin
	AGMIMG_init_common
	currentdict/MultipleDataSources known not
		{/MultipleDataSources false def}if
	MultipleDataSources
		{
		DataSource 0 get type
		dup/filetype eq
			{
			1 dict begin
			/flushbuffer Width cvi string def
			1 1 Height cvi
				{
				pop
				0 1 DataSource length 1 sub
					{
					DataSource exch get
					flushbuffer readstring pop pop
					}for
				}for
			end
			}if
		dup/arraytype eq exch/packedarraytype eq or DataSource 0 get xcheck and
			{
			Width Height mul cvi
				{
				0 1 DataSource length 1 sub
					{dup DataSource exch gx length exch 0 ne{pop}if}for
				dup 0 eq
					{pop exit}if
				sub dup 0 le
					{exit}if
				}loop
			pop
			}if		
		}
		{
		/DataSource load type 
		dup/filetype eq
			{
			1 dict begin
			/flushbuffer Width Decode length 2 idiv mul cvi string def
			1 1 Height{pop DataSource flushbuffer readstring pop pop}for
			end
			}if
		dup/arraytype eq exch/packedarraytype eq or/DataSource load xcheck and
			{
				Height Width BitsPerComponent mul 8 BitsPerComponent sub add 8 idiv Decode length 2 idiv mul mul
					{
					DataSource length dup 0 eq
						{pop exit}if
					sub dup 0 le
						{exit}if
					}loop
				pop
			}if
		}ifelse
	end
}bdf
/addprocs
{
	 2{/exec load}repeat
	 3 1 roll
	 [5 1 roll]bind cvx
}def
/modify_halftone_xfer
{
	currenthalftone dup length dict copy begin
	 currentdict 2 index known{
	 	1 index load dup length dict copy begin
		currentdict/TransferFunction known{
			/TransferFunction load
		}{
			currenttransfer
		}ifelse
		 addprocs/TransferFunction xdf 
		 currentdict end def
		currentdict end sethalftone
	}{
		currentdict/TransferFunction known{
			/TransferFunction load 
		}{
			currenttransfer
		}ifelse
		addprocs/TransferFunction xdf
		currentdict end sethalftone		
		pop
	}ifelse
}def
/clonearray
{
	dup xcheck exch
	dup length array exch
	Adobe_AGM_Core/AGMCORE_tmp -1 ddf 
	{
	Adobe_AGM_Core/AGMCORE_tmp 2 copy get 1 add ddf 
	dup type/dicttype eq
		{
			Adobe_AGM_Core/AGMCORE_tmp get
			exch
			clonedict
			Adobe_AGM_Core/AGMCORE_tmp 4 -1 roll ddf 
		}if
	dup type/arraytype eq
		{
			Adobe_AGM_Core/AGMCORE_tmp get exch
			clonearray
			Adobe_AGM_Core/AGMCORE_tmp 4 -1 roll ddf 
		}if
	exch dup
	Adobe_AGM_Core/AGMCORE_tmp get 4 -1 roll put
	}forall
	exch{cvx}if
}bdf
/clonedict
{
	dup length dict
	begin
	{
		dup type/dicttype eq
			{clonedict}if
		dup type/arraytype eq
			{clonearray}if
		def
	}forall
	currentdict
	end
}bdf
/DeviceN_PS2
{
	/currentcolorspace AGMCORE_gget 0 get/DeviceN eq level3 not and
}bdf
/Indexed_DeviceN
{
	/indexed_colorspace_dict AGMCORE_gget dup null ne{
		dup/CSDBase known{
			/CSDBase get/CSD get_res/Names known 
		}{
			pop false
		}ifelse
	}{
		pop false
	}ifelse
}bdf
/DeviceN_NoneName
{	
	/Names where{
		pop
		false Names
		{
			(None)eq or
		}forall
	}{
		false
	}ifelse
}bdf
/DeviceN_PS2_inRip_seps
{
	/AGMCORE_in_rip_sep where
	{
		pop dup type dup/arraytype eq exch/packedarraytype eq or
		{
			dup 0 get/DeviceN eq level3 not and AGMCORE_in_rip_sep and
			{
				/currentcolorspace exch AGMCORE_gput
				false
			}{
				true
			}ifelse
		}{
			true
		}ifelse
	}{
		true
	}ifelse
}bdf
/base_colorspace_type
{
	dup type/arraytype eq{0 get}if
}bdf
/currentdistillerparams where{pop currentdistillerparams/CoreDistVersion get 5000 lt}{true}ifelse
{
	/pdfmark_5{cleartomark}bind def
}{
	/pdfmark_5{pdfmark}bind def
}ifelse
/ReadBypdfmark_5
{
	currentfile exch 0 exch/SubFileDecode filter
	/currentdistillerparams where 
	{pop currentdistillerparams/CoreDistVersion get 5000 lt}{true}ifelse
	{flushfile cleartomark}
	{/PUT pdfmark}ifelse 	
}bdf
/ReadBypdfmark_5_string
{
	2 dict begin
	/makerString exch def string/tmpString exch def
	{
		currentfile tmpString readline not{pop exit}if
		makerString anchorsearch
		{
			pop pop cleartomark exit
		}{
			3 copy/PUT pdfmark_5 pop 2 copy(\n)/PUT pdfmark_5
		}ifelse
	}loop
	end
}bdf
/xpdfm
{
	{
		dup 0 get/Label eq
		{
			aload length[exch 1 add 1 roll/PAGELABEL
		}{
			aload pop
			[{ThisPage}<<5 -2 roll>>/PUT
		}ifelse
		pdfmark_5
	}forall
}bdf
/lmt{
	dup 2 index le{exch}if pop dup 2 index ge{exch}if pop
}bdf
/int{
	dup 2 index sub 3 index 5 index sub div 6 -2 roll sub mul exch pop add exch pop
}bdf
/ds{
	Adobe_AGM_Utils begin
}bdf
/dt{
	currentdict Adobe_AGM_Utils eq{
		end
	}if
}bdf
systemdict/setpacking known
{setpacking}if
%%EndResource
%%BeginResource: procset Adobe_AGM_Core 2.0 0
%%Version: 2.0 0
%%Copyright: Copyright(C)1997-2007 Adobe Systems, Inc. All Rights Reserved.
systemdict/setpacking known
{
	currentpacking
	true setpacking
}if
userdict/Adobe_AGM_Core 209 dict dup begin put
/Adobe_AGM_Core_Id/Adobe_AGM_Core_2.0_0 def
/AGMCORE_str256 256 string def
/AGMCORE_save nd
/AGMCORE_graphicsave nd
/AGMCORE_c 0 def
/AGMCORE_m 0 def
/AGMCORE_y 0 def
/AGMCORE_k 0 def
/AGMCORE_cmykbuf 4 array def
/AGMCORE_screen[currentscreen]cvx def
/AGMCORE_tmp 0 def
/AGMCORE_&setgray nd
/AGMCORE_&setcolor nd
/AGMCORE_&setcolorspace nd
/AGMCORE_&setcmykcolor nd
/AGMCORE_cyan_plate nd
/AGMCORE_magenta_plate nd
/AGMCORE_yellow_plate nd
/AGMCORE_black_plate nd
/AGMCORE_plate_ndx nd
/AGMCORE_get_ink_data nd
/AGMCORE_is_cmyk_sep nd
/AGMCORE_host_sep nd
/AGMCORE_avoid_L2_sep_space nd
/AGMCORE_distilling nd
/AGMCORE_composite_job nd
/AGMCORE_producing_seps nd
/AGMCORE_ps_level -1 def
/AGMCORE_ps_version -1 def
/AGMCORE_environ_ok nd
/AGMCORE_CSD_cache 0 dict def
/AGMCORE_currentoverprint false def
/AGMCORE_deltaX nd
/AGMCORE_deltaY nd
/AGMCORE_name nd
/AGMCORE_sep_special nd
/AGMCORE_err_strings 4 dict def
/AGMCORE_cur_err nd
/AGMCORE_current_spot_alias false def
/AGMCORE_inverting false def
/AGMCORE_feature_dictCount nd
/AGMCORE_feature_opCount nd
/AGMCORE_feature_ctm nd
/AGMCORE_ConvertToProcess false def
/AGMCORE_Default_CTM matrix def
/AGMCORE_Default_PageSize nd
/AGMCORE_Default_flatness nd
/AGMCORE_currentbg nd
/AGMCORE_currentucr nd
/AGMCORE_pattern_paint_type 0 def
/knockout_unitsq nd
currentglobal true setglobal
[/CSA/Gradient/Procedure]
{
	/Generic/Category findresource dup length dict copy/Category defineresource pop
}forall
setglobal
/AGMCORE_key_known
{
	where{
		/Adobe_AGM_Core_Id known
	}{
		false
	}ifelse
}ndf
/flushinput
{
	save
	2 dict begin
	/CompareBuffer 3 -1 roll def
	/readbuffer 256 string def
	mark
	{
	currentfile readbuffer{readline}stopped
		{cleartomark mark}
		{
		not
			{pop exit}
		if
		CompareBuffer eq
			{exit}
		if
		}ifelse
	}loop
	cleartomark
	end
	restore
}bdf
/getspotfunction
{
	AGMCORE_screen exch pop exch pop
	dup type/dicttype eq{
		dup/HalftoneType get 1 eq{
			/SpotFunction get
		}{
			dup/HalftoneType get 2 eq{
				/GraySpotFunction get
			}{
				pop
				{
					abs exch abs 2 copy add 1 gt{
						1 sub dup mul exch 1 sub dup mul add 1 sub
					}{
						dup mul exch dup mul add 1 exch sub
					}ifelse
				}bind
			}ifelse
		}ifelse
	}if
}def
/np
{newpath}bdf
/clp_npth
{clip np}def
/eoclp_npth
{eoclip np}def
/npth_clp
{np clip}def
/graphic_setup
{
	/AGMCORE_graphicsave save store
	concat
	0 setgray
	0 setlinecap
	0 setlinejoin
	1 setlinewidth
	[]0 setdash
	10 setmiterlimit
	np
	false setoverprint
	false setstrokeadjust
	//Adobe_AGM_Core/spot_alias gx
	/Adobe_AGM_Image where{
		pop
		Adobe_AGM_Image/spot_alias 2 copy known{
			gx
		}{
			pop pop
		}ifelse
	}if
	/sep_colorspace_dict null AGMCORE_gput
	100 dict begin
	/dictstackcount countdictstack def
	/showpage{}def
	mark
}def
/graphic_cleanup
{
	cleartomark
	dictstackcount 1 countdictstack 1 sub{end}for
	end
	AGMCORE_graphicsave restore
}def
/compose_error_msg
{
	grestoreall initgraphics	
	/Helvetica findfont 10 scalefont setfont
	/AGMCORE_deltaY 100 def
	/AGMCORE_deltaX 310 def
	clippath pathbbox np pop pop 36 add exch 36 add exch moveto
	0 AGMCORE_deltaY rlineto AGMCORE_deltaX 0 rlineto
	0 AGMCORE_deltaY neg rlineto AGMCORE_deltaX neg 0 rlineto closepath
	0 AGMCORE_&setgray
	gsave 1 AGMCORE_&setgray fill grestore 
	1 setlinewidth gsave stroke grestore
	currentpoint AGMCORE_deltaY 15 sub add exch 8 add exch moveto
	/AGMCORE_deltaY 12 def
	/AGMCORE_tmp 0 def
	AGMCORE_err_strings exch get
		{
		dup 32 eq
			{
			pop
			AGMCORE_str256 0 AGMCORE_tmp getinterval
			stringwidth pop currentpoint pop add AGMCORE_deltaX 28 add gt
				{
				currentpoint AGMCORE_deltaY sub exch pop
				clippath pathbbox pop pop pop 44 add exch moveto
				}if
			AGMCORE_str256 0 AGMCORE_tmp getinterval show( )show
			0 1 AGMCORE_str256 length 1 sub
				{
				AGMCORE_str256 exch 0 put
				}for
			/AGMCORE_tmp 0 def
			}{
				AGMCORE_str256 exch AGMCORE_tmp xpt
				/AGMCORE_tmp AGMCORE_tmp 1 add def
			}ifelse
		}forall
}bdf
/AGMCORE_CMYKDeviceNColorspaces[
	[/Separation/None/DeviceCMYK{0 0 0}]
	[/Separation(Black)/DeviceCMYK{0 0 0 4 -1 roll}bind]
	[/Separation(Yellow)/DeviceCMYK{0 0 3 -1 roll 0}bind]
	[/DeviceN[(Yellow)(Black)]/DeviceCMYK{0 0 4 2 roll}bind]
	[/Separation(Magenta)/DeviceCMYK{0 exch 0 0}bind]
	[/DeviceN[(Magenta)(Black)]/DeviceCMYK{0 3 1 roll 0 exch}bind]
	[/DeviceN[(Magenta)(Yellow)]/DeviceCMYK{0 3 1 roll 0}bind]
	[/DeviceN[(Magenta)(Yellow)(Black)]/DeviceCMYK{0 4 1 roll}bind]
	[/Separation(Cyan)/DeviceCMYK{0 0 0}]
	[/DeviceN[(Cyan)(Black)]/DeviceCMYK{0 0 3 -1 roll}bind]
	[/DeviceN[(Cyan)(Yellow)]/DeviceCMYK{0 exch 0}bind]
	[/DeviceN[(Cyan)(Yellow)(Black)]/DeviceCMYK{0 3 1 roll}bind]
	[/DeviceN[(Cyan)(Magenta)]/DeviceCMYK{0 0}]
	[/DeviceN[(Cyan)(Magenta)(Black)]/DeviceCMYK{0 exch}bind]
	[/DeviceN[(Cyan)(Magenta)(Yellow)]/DeviceCMYK{0}]
	[/DeviceCMYK]
]def
/ds{
	Adobe_AGM_Core begin
	/currentdistillerparams where
		{
		pop currentdistillerparams/CoreDistVersion get 5000 lt
			{<</DetectBlends false>>setdistillerparams}if
		}if	
	/AGMCORE_ps_version xdf
	/AGMCORE_ps_level xdf
	errordict/AGM_handleerror known not{
		errordict/AGM_handleerror errordict/handleerror get put
		errordict/handleerror{
			Adobe_AGM_Core begin
			$error/newerror get AGMCORE_cur_err null ne and{
				$error/newerror false put
				AGMCORE_cur_err compose_error_msg
			}if
			$error/newerror true put
			end
			errordict/AGM_handleerror get exec
			}bind put
		}if
	/AGMCORE_environ_ok 
		ps_level AGMCORE_ps_level ge
		ps_version AGMCORE_ps_version ge and 
		AGMCORE_ps_level -1 eq or
	def
	AGMCORE_environ_ok not
		{/AGMCORE_cur_err/AGMCORE_bad_environ def}if
	/AGMCORE_&setgray systemdict/setgray get def
	level2{
		/AGMCORE_&setcolor systemdict/setcolor get def
		/AGMCORE_&setcolorspace systemdict/setcolorspace get def
	}if
	/AGMCORE_currentbg currentblackgeneration def
	/AGMCORE_currentucr currentundercolorremoval def
	/AGMCORE_Default_flatness currentflat def
	/AGMCORE_distilling
		/product where{
			pop systemdict/setdistillerparams known product(Adobe PostScript Parser)ne and
		}{
			false
		}ifelse
	def
	/AGMCORE_GSTATE AGMCORE_key_known not{
		/AGMCORE_GSTATE 21 dict def
		/AGMCORE_tmpmatrix matrix def
		/AGMCORE_gstack 64 array def
		/AGMCORE_gstackptr 0 def
		/AGMCORE_gstacksaveptr 0 def
		/AGMCORE_gstackframekeys 14 def
		/AGMCORE_&gsave/gsave ldf
		/AGMCORE_&grestore/grestore ldf
		/AGMCORE_&grestoreall/grestoreall ldf
		/AGMCORE_&save/save ldf
		/AGMCORE_&setoverprint/setoverprint ldf
		/AGMCORE_gdictcopy{
			begin
			{def}forall
			end
		}def
		/AGMCORE_gput{
			AGMCORE_gstack AGMCORE_gstackptr get
			3 1 roll
			put
		}def
		/AGMCORE_gget{
			AGMCORE_gstack AGMCORE_gstackptr get
			exch
			get
		}def
		/gsave{
			AGMCORE_&gsave
			AGMCORE_gstack AGMCORE_gstackptr get
			AGMCORE_gstackptr 1 add
			dup 64 ge{limitcheck}if
			/AGMCORE_gstackptr exch store
			AGMCORE_gstack AGMCORE_gstackptr get
			AGMCORE_gdictcopy
		}def
		/grestore{
			AGMCORE_&grestore
			AGMCORE_gstackptr 1 sub
			dup AGMCORE_gstacksaveptr lt{1 add}if
			dup AGMCORE_gstack exch get dup/AGMCORE_currentoverprint known
				{/AGMCORE_currentoverprint get setoverprint}{pop}ifelse
			/AGMCORE_gstackptr exch store
		}def
		/grestoreall{
			AGMCORE_&grestoreall
			/AGMCORE_gstackptr AGMCORE_gstacksaveptr store 
		}def
		/save{
			AGMCORE_&save
			AGMCORE_gstack AGMCORE_gstackptr get
			AGMCORE_gstackptr 1 add
			dup 64 ge{limitcheck}if
			/AGMCORE_gstackptr exch store
			/AGMCORE_gstacksaveptr AGMCORE_gstackptr store
			AGMCORE_gstack AGMCORE_gstackptr get
			AGMCORE_gdictcopy
		}def
		/setoverprint{
			dup/AGMCORE_currentoverprint exch AGMCORE_gput AGMCORE_&setoverprint
		}def	
		0 1 AGMCORE_gstack length 1 sub{
				AGMCORE_gstack exch AGMCORE_gstackframekeys dict put
		}for
	}if
	level3/AGMCORE_&sysshfill AGMCORE_key_known not and
	{
		/AGMCORE_&sysshfill systemdict/shfill get def
		/AGMCORE_&sysmakepattern systemdict/makepattern get def
		/AGMCORE_&usrmakepattern/makepattern load def
	}if
	/currentcmykcolor[0 0 0 0]AGMCORE_gput
	/currentstrokeadjust false AGMCORE_gput
	/currentcolorspace[/DeviceGray]AGMCORE_gput
	/sep_tint 0 AGMCORE_gput
	/devicen_tints[0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0]AGMCORE_gput
	/sep_colorspace_dict null AGMCORE_gput
	/devicen_colorspace_dict null AGMCORE_gput
	/indexed_colorspace_dict null AGMCORE_gput
	/currentcolor_intent()AGMCORE_gput
	/customcolor_tint 1 AGMCORE_gput
	/absolute_colorimetric_crd null AGMCORE_gput
	/relative_colorimetric_crd null AGMCORE_gput
	/saturation_crd null AGMCORE_gput
	/perceptual_crd null AGMCORE_gput
	currentcolortransfer cvlit/AGMCore_gray_xfer xdf cvlit/AGMCore_b_xfer xdf
		 cvlit/AGMCore_g_xfer xdf cvlit/AGMCore_r_xfer xdf
	<<
	/MaxPatternItem currentsystemparams/MaxPatternCache get
	>>
	setuserparams
	end
}def
/ps
{
	/setcmykcolor where{
		pop
		Adobe_AGM_Core/AGMCORE_&setcmykcolor/setcmykcolor load put
	}if
	Adobe_AGM_Core begin
	/setcmykcolor
	{
		4 copy AGMCORE_cmykbuf astore/currentcmykcolor exch AGMCORE_gput
		1 sub 4 1 roll
		3{
			3 index add neg dup 0 lt{
				pop 0
			}if
			3 1 roll
		}repeat
		setrgbcolor pop
	}ndf
	/currentcmykcolor
	{
		/currentcmykcolor AGMCORE_gget aload pop
	}ndf
	/setoverprint
	{pop}ndf
	/currentoverprint
	{false}ndf
	/AGMCORE_cyan_plate 1 0 0 0 test_cmyk_color_plate def
	/AGMCORE_magenta_plate 0 1 0 0 test_cmyk_color_plate def
	/AGMCORE_yellow_plate 0 0 1 0 test_cmyk_color_plate def
	/AGMCORE_black_plate 0 0 0 1 test_cmyk_color_plate def
	/AGMCORE_plate_ndx 
		AGMCORE_cyan_plate{
			0
		}{
			AGMCORE_magenta_plate{
				1
			}{
				AGMCORE_yellow_plate{
					2
				}{
					AGMCORE_black_plate{
						3
					}{
						4
					}ifelse
				}ifelse
			}ifelse
		}ifelse
		def
	/AGMCORE_have_reported_unsupported_color_space false def
	/AGMCORE_report_unsupported_color_space
	{
		AGMCORE_have_reported_unsupported_color_space false eq
		{
			(Warning: Job contains content that cannot be separated with on-host methods. This content appears on the black plate, and knocks out all other plates.)==
			Adobe_AGM_Core/AGMCORE_have_reported_unsupported_color_space true ddf
		}if
	}def
	/AGMCORE_composite_job
		AGMCORE_cyan_plate AGMCORE_magenta_plate and AGMCORE_yellow_plate and AGMCORE_black_plate and def
	/AGMCORE_in_rip_sep
		/AGMCORE_in_rip_sep where{
			pop AGMCORE_in_rip_sep
		}{
			AGMCORE_distilling 
			{
				false
			}{
				userdict/Adobe_AGM_OnHost_Seps known{
					false
				}{
					level2{
						currentpagedevice/Separations 2 copy known{
							get
						}{
							pop pop false
						}ifelse
					}{
						false
					}ifelse
				}ifelse
			}ifelse
		}ifelse
	def
	/AGMCORE_producing_seps AGMCORE_composite_job not AGMCORE_in_rip_sep or def
	/AGMCORE_host_sep AGMCORE_producing_seps AGMCORE_in_rip_sep not and def
	/AGM_preserve_spots 
		/AGM_preserve_spots where{
			pop AGM_preserve_spots
		}{
			AGMCORE_distilling AGMCORE_producing_seps or
		}ifelse
	def
	/AGM_is_distiller_preserving_spotimages
	{
		currentdistillerparams/PreserveOverprintSettings known
		{
			currentdistillerparams/PreserveOverprintSettings get
				{
					currentdistillerparams/ColorConversionStrategy known
					{
						currentdistillerparams/ColorConversionStrategy get
						/sRGB ne
					}{
						true
					}ifelse
				}{
					false
				}ifelse
		}{
			false
		}ifelse
	}def
	/convert_spot_to_process where{pop}{
		/convert_spot_to_process
		{
			//Adobe_AGM_Core begin
			dup map_alias{
				/Name get exch pop
			}if
			dup dup(None)eq exch(All)eq or
				{
				pop false
				}{
				AGMCORE_host_sep
				{
					gsave
					1 0 0 0 setcmykcolor currentgray 1 exch sub
					0 1 0 0 setcmykcolor currentgray 1 exch sub
					0 0 1 0 setcmykcolor currentgray 1 exch sub
					0 0 0 1 setcmykcolor currentgray 1 exch sub
					add add add 0 eq
					{
						pop false
					}{
						false setoverprint
						current_spot_alias false set_spot_alias
						1 1 1 1 6 -1 roll findcmykcustomcolor 1 setcustomcolor
						set_spot_alias
						currentgray 1 ne
					}ifelse
					grestore
				}{
					AGMCORE_distilling
					{
						pop AGM_is_distiller_preserving_spotimages not
					}{
						//Adobe_AGM_Core/AGMCORE_name xddf
						false
						//Adobe_AGM_Core/AGMCORE_pattern_paint_type get 0 eq
						AGMUTIL_cpd/OverrideSeparations known and
						{
							AGMUTIL_cpd/OverrideSeparations get
							{
								/HqnSpots/ProcSet resourcestatus
								{
									pop pop pop true
								}if
							}if
						}if					
						{
							AGMCORE_name/HqnSpots/ProcSet findresource/TestSpot gx not
						}{
							gsave
							[/Separation AGMCORE_name/DeviceGray{}]AGMCORE_&setcolorspace
							false
							AGMUTIL_cpd/SeparationColorNames 2 copy known
							{
								get
								{AGMCORE_name eq or}forall
								not
							}{
								pop pop pop true
							}ifelse
							grestore
						}ifelse
					}ifelse
				}ifelse
			}ifelse
			end
		}def
	}ifelse
	/convert_to_process where{pop}{
		/convert_to_process
		{
			dup length 0 eq
				{
				pop false
				}{
				AGMCORE_host_sep
				{
				dup true exch
					{
					dup(Cyan)eq exch
					dup(Magenta)eq 3 -1 roll or exch
					dup(Yellow)eq 3 -1 roll or exch
					dup(Black)eq 3 -1 roll or
						{pop}
						{convert_spot_to_process and}ifelse
					}
				forall
					{
					true exch
						{
						dup(Cyan)eq exch
						dup(Magenta)eq 3 -1 roll or exch
						dup(Yellow)eq 3 -1 roll or exch
						(Black)eq or and
						}forall
						not
					}{pop false}ifelse
				}{
				false exch
					{
					/PhotoshopDuotoneList where{pop false}{true}ifelse
						{
						dup(Cyan)eq exch
						dup(Magenta)eq 3 -1 roll or exch
						dup(Yellow)eq 3 -1 roll or exch
						dup(Black)eq 3 -1 roll or
						{pop}
						{convert_spot_to_process or}ifelse
						}
						{
						convert_spot_to_process or
						}
					ifelse
					}
				forall
				}ifelse
			}ifelse
		}def
	}ifelse	
	/AGMCORE_avoid_L2_sep_space 
		version cvr 2012 lt 
		level2 and 
		AGMCORE_producing_seps not and
	def
	/AGMCORE_is_cmyk_sep
		AGMCORE_cyan_plate AGMCORE_magenta_plate or AGMCORE_yellow_plate or AGMCORE_black_plate or
	def
	/AGM_avoid_0_cmyk where{
		pop AGM_avoid_0_cmyk
	}{
		AGM_preserve_spots 
		userdict/Adobe_AGM_OnHost_Seps known 
		userdict/Adobe_AGM_InRip_Seps known or
		not and
	}ifelse
	{
		/setcmykcolor[
			{
				4 copy add add add 0 eq currentoverprint and{
					pop 0.0005
				}if
			}/exec cvx
			/AGMCORE_&setcmykcolor load dup type/operatortype ne{
				/exec cvx
			}if
		]cvx def
	}if
	/AGMCORE_IsSeparationAProcessColor
		{
		dup(Cyan)eq exch dup(Magenta)eq exch dup(Yellow)eq exch(Black)eq or or or
		}def
	AGMCORE_host_sep{
		/setcolortransfer
		{
			AGMCORE_cyan_plate{
				pop pop pop
			}{
			 	AGMCORE_magenta_plate{
			 		4 3 roll pop pop pop
			 	}{
			 		AGMCORE_yellow_plate{
			 			4 2 roll pop pop pop
			 		}{
			 			4 1 roll pop pop pop
			 		}ifelse
			 	}ifelse
			}ifelse
			settransfer 
		}	
		def
		/AGMCORE_get_ink_data
			AGMCORE_cyan_plate{
				{pop pop pop}
			}{
			 	AGMCORE_magenta_plate{
			 		{4 3 roll pop pop pop}
			 	}{
			 		AGMCORE_yellow_plate{
			 			{4 2 roll pop pop pop}
			 		}{
			 			{4 1 roll pop pop pop}
			 		}ifelse
			 	}ifelse
			}ifelse
		def
		/AGMCORE_RemoveProcessColorNames
			{
			1 dict begin
			/filtername
				{
				dup/Cyan eq 1 index(Cyan)eq or
					{pop(_cyan_)}if
				dup/Magenta eq 1 index(Magenta)eq or
					{pop(_magenta_)}if
				dup/Yellow eq 1 index(Yellow)eq or
					{pop(_yellow_)}if
				dup/Black eq 1 index(Black)eq or
					{pop(_black_)}if
				}def
			dup type/arraytype eq
				{[exch{filtername}forall]}
				{filtername}ifelse
			end
			}def
		level3{
			/AGMCORE_IsCurrentColor
				{
				dup AGMCORE_IsSeparationAProcessColor
					{
					AGMCORE_plate_ndx 0 eq
						{dup(Cyan)eq exch/Cyan eq or}if
					AGMCORE_plate_ndx 1 eq
						{dup(Magenta)eq exch/Magenta eq or}if
					AGMCORE_plate_ndx 2 eq
						{dup(Yellow)eq exch/Yellow eq or}if
					AGMCORE_plate_ndx 3 eq
						{dup(Black)eq exch/Black eq or}if
					AGMCORE_plate_ndx 4 eq
						{pop false}if
					}{
					gsave
					false setoverprint
					current_spot_alias false set_spot_alias
					1 1 1 1 6 -1 roll findcmykcustomcolor 1 setcustomcolor
					set_spot_alias
					currentgray 1 ne
					grestore
					}ifelse
				}def
			/AGMCORE_filter_functiondatasource
				{	
				5 dict begin
				/data_in xdf
				data_in type/stringtype eq
					{
					/ncomp xdf
					/comp xdf
					/string_out data_in length ncomp idiv string def
					0 ncomp data_in length 1 sub
						{
						string_out exch dup ncomp idiv exch data_in exch ncomp getinterval comp get 255 exch sub put
						}for
					string_out
					}{
					string/string_in xdf
					/string_out 1 string def
					/component xdf
					[
					data_in string_in/readstring cvx
						[component/get cvx 255/exch cvx/sub cvx string_out/exch cvx 0/exch cvx/put cvx string_out]cvx
						[/pop cvx()]cvx/ifelse cvx
					]cvx/ReusableStreamDecode filter
				}ifelse
				end
				}def
			/AGMCORE_separateShadingFunction
				{
				2 dict begin
				/paint? xdf
				/channel xdf
				dup type/dicttype eq
					{
					begin
					FunctionType 0 eq
						{
						/DataSource channel Range length 2 idiv DataSource AGMCORE_filter_functiondatasource def
						currentdict/Decode known
							{/Decode Decode channel 2 mul 2 getinterval def}if
						paint? not
							{/Decode[1 1]def}if
						}if
					FunctionType 2 eq
						{
						paint?
							{
							/C0[C0 channel get 1 exch sub]def
							/C1[C1 channel get 1 exch sub]def
							}{
							/C0[1]def
							/C1[1]def
							}ifelse			
						}if
					FunctionType 3 eq
						{
						/Functions[Functions{channel paint? AGMCORE_separateShadingFunction}forall]def			
						}if
					currentdict/Range known
						{/Range[0 1]def}if
					currentdict
					end}{
					channel get 0 paint? AGMCORE_separateShadingFunction
					}ifelse
				end
				}def
			/AGMCORE_separateShading
				{
				3 -1 roll begin
				currentdict/Function known
					{
					currentdict/Background known
						{[1 index{Background 3 index get 1 exch sub}{1}ifelse]/Background xdf}if
					Function 3 1 roll AGMCORE_separateShadingFunction/Function xdf
					/ColorSpace[/DeviceGray]def
					}{
					ColorSpace dup type/arraytype eq{0 get}if/DeviceCMYK eq
						{
						/ColorSpace[/DeviceN[/_cyan_/_magenta_/_yellow_/_black_]/DeviceCMYK{}]def
						}{
						ColorSpace dup 1 get AGMCORE_RemoveProcessColorNames 1 exch put
						}ifelse
					ColorSpace 0 get/Separation eq
						{
							{
								[1/exch cvx/sub cvx]cvx
							}{
								[/pop cvx 1]cvx
							}ifelse
							ColorSpace 3 3 -1 roll put
							pop
						}{
							{
								[exch ColorSpace 1 get length 1 sub exch sub/index cvx 1/exch cvx/sub cvx ColorSpace 1 get length 1 add 1/roll cvx ColorSpace 1 get length{/pop cvx}repeat]cvx
							}{
								pop[ColorSpace 1 get length{/pop cvx}repeat cvx 1]cvx
							}ifelse
							ColorSpace 3 3 -1 roll bind put
						}ifelse
					ColorSpace 2/DeviceGray put																		
					}ifelse
				end
				}def
			/AGMCORE_separateShadingDict
				{
				dup/ColorSpace get
				dup type/arraytype ne
					{[exch]}if
				dup 0 get/DeviceCMYK eq
					{
					exch begin 
					currentdict
					AGMCORE_cyan_plate
						{0 true}if
					AGMCORE_magenta_plate
						{1 true}if
					AGMCORE_yellow_plate
						{2 true}if
					AGMCORE_black_plate
						{3 true}if
					AGMCORE_plate_ndx 4 eq
						{0 false}if		
					dup not currentoverprint and
						{/AGMCORE_ignoreshade true def}if
					AGMCORE_separateShading
					currentdict
					end exch
					}if
				dup 0 get/Separation eq
					{
					exch begin
					ColorSpace 1 get dup/None ne exch/All ne and
						{
						ColorSpace 1 get AGMCORE_IsCurrentColor AGMCORE_plate_ndx 4 lt and ColorSpace 1 get AGMCORE_IsSeparationAProcessColor not and
							{
							ColorSpace 2 get dup type/arraytype eq{0 get}if/DeviceCMYK eq 
								{
								/ColorSpace
									[
									/Separation
									ColorSpace 1 get
									/DeviceGray
										[
										ColorSpace 3 get/exec cvx
										4 AGMCORE_plate_ndx sub -1/roll cvx
										4 1/roll cvx
										3[/pop cvx]cvx/repeat cvx
										1/exch cvx/sub cvx
										]cvx									
									]def
								}{
								AGMCORE_report_unsupported_color_space
								AGMCORE_black_plate not
									{
									currentdict 0 false AGMCORE_separateShading
									}if
								}ifelse
							}{
							currentdict ColorSpace 1 get AGMCORE_IsCurrentColor
							0 exch 
							dup not currentoverprint and
								{/AGMCORE_ignoreshade true def}if
							AGMCORE_separateShading
							}ifelse	
						}if			
					currentdict
					end exch
					}if
				dup 0 get/DeviceN eq
					{
					exch begin
					ColorSpace 1 get convert_to_process
						{
						ColorSpace 2 get dup type/arraytype eq{0 get}if/DeviceCMYK eq 
							{
							/ColorSpace
								[
								/DeviceN
								ColorSpace 1 get
								/DeviceGray
									[
									ColorSpace 3 get/exec cvx
									4 AGMCORE_plate_ndx sub -1/roll cvx
									4 1/roll cvx
									3[/pop cvx]cvx/repeat cvx
									1/exch cvx/sub cvx
									]cvx									
								]def
							}{
							AGMCORE_report_unsupported_color_space
							AGMCORE_black_plate not
								{
								currentdict 0 false AGMCORE_separateShading
								/ColorSpace[/DeviceGray]def
								}if
							}ifelse
						}{
						currentdict
						false -1 ColorSpace 1 get
							{
							AGMCORE_IsCurrentColor
								{
								1 add
								exch pop true exch exit
								}if
							1 add
							}forall
						exch 
						dup not currentoverprint and
							{/AGMCORE_ignoreshade true def}if
						AGMCORE_separateShading
						}ifelse
					currentdict
					end exch
					}if
				dup 0 get dup/DeviceCMYK eq exch dup/Separation eq exch/DeviceN eq or or not
					{
					exch begin
					ColorSpace dup type/arraytype eq
						{0 get}if
					/DeviceGray ne
						{
						AGMCORE_report_unsupported_color_space
						AGMCORE_black_plate not
							{
							ColorSpace 0 get/CIEBasedA eq
								{
								/ColorSpace[/Separation/_ciebaseda_/DeviceGray{}]def
								}if
							ColorSpace 0 get dup/CIEBasedABC eq exch dup/CIEBasedDEF eq exch/DeviceRGB eq or or
								{
								/ColorSpace[/DeviceN[/_red_/_green_/_blue_]/DeviceRGB{}]def
								}if
							ColorSpace 0 get/CIEBasedDEFG eq
								{
								/ColorSpace[/DeviceN[/_cyan_/_magenta_/_yellow_/_black_]/DeviceCMYK{}]def
								}if
							currentdict 0 false AGMCORE_separateShading
							}if
						}if
					currentdict
					end exch
					}if
				pop
				dup/AGMCORE_ignoreshade known
					{
					begin
					/ColorSpace[/Separation(None)/DeviceGray{}]def
					currentdict end
					}if
				}def
			/shfill
				{
				AGMCORE_separateShadingDict 
				dup/AGMCORE_ignoreshade known
					{pop}
					{AGMCORE_&sysshfill}ifelse
				}def
			/makepattern
				{
				exch
				dup/PatternType get 2 eq
					{
					clonedict
					begin
					/Shading Shading AGMCORE_separateShadingDict def
					Shading/AGMCORE_ignoreshade known
					currentdict end exch
					{pop<</PatternType 1/PaintProc{pop}/BBox[0 0 1 1]/XStep 1/YStep 1/PaintType 1/TilingType 3>>}if
					exch AGMCORE_&sysmakepattern
					}{
					exch AGMCORE_&usrmakepattern
					}ifelse
				}def
		}if
	}if
	AGMCORE_in_rip_sep{
		/setcustomcolor
		{
			exch aload pop
			dup 7 1 roll inRip_spot_has_ink not	{
				4{4 index mul 4 1 roll}
				repeat
				/DeviceCMYK setcolorspace
				6 -2 roll pop pop
			}{
				//Adobe_AGM_Core begin
					/AGMCORE_k xdf/AGMCORE_y xdf/AGMCORE_m xdf/AGMCORE_c xdf
				end
				[/Separation 4 -1 roll/DeviceCMYK
				{dup AGMCORE_c mul exch dup AGMCORE_m mul exch dup AGMCORE_y mul exch AGMCORE_k mul}
				]
				setcolorspace
			}ifelse
			setcolor
		}ndf
		/setseparationgray
		{
			[/Separation(All)/DeviceGray{}]setcolorspace_opt
			1 exch sub setcolor
		}ndf
	}{
		/setseparationgray
		{
			AGMCORE_&setgray
		}ndf
	}ifelse
	/findcmykcustomcolor
	{
		5 makereadonlyarray
	}ndf
	/setcustomcolor
	{
		exch aload pop pop
		4{4 index mul 4 1 roll}repeat
		setcmykcolor pop
	}ndf
	/has_color
		/colorimage where{
			AGMCORE_producing_seps{
				pop true
			}{
				systemdict eq
			}ifelse
		}{
			false
		}ifelse
	def
	/map_index
	{
		1 index mul exch getinterval{255 div}forall
	}bdf
	/map_indexed_devn
	{
		Lookup Names length 3 -1 roll cvi map_index
	}bdf
	/n_color_components
	{
		base_colorspace_type
		dup/DeviceGray eq{
			pop 1
		}{
			/DeviceCMYK eq{
				4
			}{
				3
			}ifelse
		}ifelse
	}bdf
	level2{
		/mo/moveto ldf
		/li/lineto ldf
		/cv/curveto ldf
		/knockout_unitsq
		{
			1 setgray
			0 0 1 1 rectfill
		}def
		level2/setcolorspace AGMCORE_key_known not and{
			/AGMCORE_&&&setcolorspace/setcolorspace ldf
			/AGMCORE_ReplaceMappedColor
			{
				dup type dup/arraytype eq exch/packedarraytype eq or
				{
					/AGMCORE_SpotAliasAry2 where{
						begin
						dup 0 get dup/Separation eq
						{
							pop
							dup length array copy
							dup dup 1 get
							current_spot_alias
							{
								dup map_alias
								{
									false set_spot_alias
									dup 1 exch setsepcolorspace
									true set_spot_alias
									begin
									/sep_colorspace_dict currentdict AGMCORE_gput
									pop pop	pop
									[
										/Separation Name 
										CSA map_csa
										MappedCSA 
										/sep_colorspace_proc load
									]
									dup Name
									end
								}if
							}if
							map_reserved_ink_name 1 xpt
						}{
							/DeviceN eq 
							{
								dup length array copy
								dup dup 1 get[
									exch{
										current_spot_alias{
											dup map_alias{
												/Name get exch pop
											}if
										}if
										map_reserved_ink_name
									}forall 
								]1 xpt
							}if
						}ifelse
						end
					}if
				}if
			}def
			/setcolorspace
			{
				dup type dup/arraytype eq exch/packedarraytype eq or
				{
					dup 0 get/Indexed eq
					{
						AGMCORE_distilling
						{
							/PhotoshopDuotoneList where
							{
								pop false
							}{
								true
							}ifelse
						}{
							true
						}ifelse
						{
							aload pop 3 -1 roll
							AGMCORE_ReplaceMappedColor
							3 1 roll 4 array astore
						}if
					}{
						AGMCORE_ReplaceMappedColor
					}ifelse
				}if
				DeviceN_PS2_inRip_seps{AGMCORE_&&&setcolorspace}if
			}def
		}if	
	}{
		/adj
		{
			currentstrokeadjust{
				transform
				0.25 sub round 0.25 add exch
				0.25 sub round 0.25 add exch
				itransform
			}if
		}def
		/mo{
			adj moveto
		}def
		/li{
			adj lineto
		}def
		/cv{
			6 2 roll adj
			6 2 roll adj
			6 2 roll adj curveto
		}def
		/knockout_unitsq
		{
			1 setgray
			8 8 1[8 0 0 8 0 0]{<ffffffffffffffff>}image
		}def
		/currentstrokeadjust{
			/currentstrokeadjust AGMCORE_gget
		}def
		/setstrokeadjust{
			/currentstrokeadjust exch AGMCORE_gput
		}def
		/setcolorspace
		{
			/currentcolorspace exch AGMCORE_gput
		}def
		/currentcolorspace
		{
			/currentcolorspace AGMCORE_gget
		}def
		/setcolor_devicecolor
		{
			base_colorspace_type
			dup/DeviceGray eq{
				pop setgray
			}{
				/DeviceCMYK eq{
					setcmykcolor
				}{
					setrgbcolor
				}ifelse
			}ifelse
		}def
		/setcolor
		{
			currentcolorspace 0 get
			dup/DeviceGray ne{
				dup/DeviceCMYK ne{
					dup/DeviceRGB ne{
						dup/Separation eq{
							pop
							currentcolorspace 3 gx
							currentcolorspace 2 get
						}{
							dup/Indexed eq{
								pop
								currentcolorspace 3 get dup type/stringtype eq{
									currentcolorspace 1 get n_color_components
									3 -1 roll map_index
								}{
									exec
								}ifelse
								currentcolorspace 1 get
							}{
								/AGMCORE_cur_err/AGMCORE_invalid_color_space def
								AGMCORE_invalid_color_space
							}ifelse
						}ifelse
					}if
				}if
			}if
			setcolor_devicecolor
		}def
	}ifelse
	/sop/setoverprint ldf
	/lw/setlinewidth ldf
	/lc/setlinecap ldf
	/lj/setlinejoin ldf
	/ml/setmiterlimit ldf
	/dsh/setdash ldf
	/sadj/setstrokeadjust ldf
	/gry/setgray ldf
	/rgb/setrgbcolor ldf
	/cmyk[
		/currentcolorspace[/DeviceCMYK]/AGMCORE_gput cvx
		/setcmykcolor load dup type/operatortype ne{/exec cvx}if
	]cvx bdf
	level3 AGMCORE_host_sep not and{
		/nzopmsc{
			6 dict begin
			/kk exch def
			/yy exch def
			/mm exch def
			/cc exch def
			/sum 0 def
			cc 0 ne{/sum sum 2#1000 or def cc}if
			mm 0 ne{/sum sum 2#0100 or def mm}if
			yy 0 ne{/sum sum 2#0010 or def yy}if
			kk 0 ne{/sum sum 2#0001 or def kk}if
			AGMCORE_CMYKDeviceNColorspaces sum get setcolorspace
			sum 0 eq{0}if
			end
			setcolor
		}bdf
	}{
		/nzopmsc/cmyk ldf
	}ifelse
	/sep/setsepcolor ldf
	/devn/setdevicencolor ldf
	/idx/setindexedcolor ldf
	/colr/setcolor ldf
	/csacrd/set_csa_crd ldf
	/sepcs/setsepcolorspace ldf
	/devncs/setdevicencolorspace ldf
	/idxcs/setindexedcolorspace ldf
	/cp/closepath ldf
	/clp/clp_npth ldf
	/eclp/eoclp_npth ldf
	/f/fill ldf
	/ef/eofill ldf
	/@/stroke ldf
	/nclp/npth_clp ldf
	/gset/graphic_setup ldf
	/gcln/graphic_cleanup ldf
	/ct/concat ldf
	/cf/currentfile ldf
	/fl/filter ldf
	/rs/readstring ldf
	/AGMCORE_def_ht currenthalftone def
	/clonedict Adobe_AGM_Utils begin/clonedict load end def
	/clonearray Adobe_AGM_Utils begin/clonearray load end def
	currentdict{
		dup xcheck 1 index type dup/arraytype eq exch/packedarraytype eq or and{
			bind
		}if
		def
	}forall
	/getrampcolor
	{
		/indx exch def
		0 1 NumComp 1 sub
		{
			dup
			Samples exch get
			dup type/stringtype eq{indx get}if
			exch
			Scaling exch get aload pop
			3 1 roll
			mul add
		}for
		ColorSpaceFamily/Separation eq 
		{sep}
		{
			ColorSpaceFamily/DeviceN eq
			{devn}{setcolor}ifelse
		}ifelse
	}bdf
	/sssetbackground{
		aload pop 
		ColorSpaceFamily/Separation eq 
		{sep}
		{
			ColorSpaceFamily/DeviceN eq
			{devn}{setcolor}ifelse
		}ifelse	
	}bdf
	/RadialShade
	{
		40 dict begin
		/ColorSpaceFamily xdf
		/background xdf
		/ext1 xdf
		/ext0 xdf
		/BBox xdf
		/r2 xdf
		/c2y xdf
		/c2x xdf
		/r1 xdf
		/c1y xdf
		/c1x xdf
		/rampdict xdf
		/setinkoverprint where{pop/setinkoverprint{pop}def}if
		gsave
		BBox length 0 gt
		{
			np
			BBox 0 get BBox 1 get moveto
			BBox 2 get BBox 0 get sub 0 rlineto
			0 BBox 3 get BBox 1 get sub rlineto
			BBox 2 get BBox 0 get sub neg 0 rlineto
			closepath
			clip
			np
		}if
		c1x c2x eq
		{
			c1y c2y lt{/theta 90 def}{/theta 270 def}ifelse
		}{
			/slope c2y c1y sub c2x c1x sub div def
			/theta slope 1 atan def
			c2x c1x lt c2y c1y ge and{/theta theta 180 sub def}if
			c2x c1x lt c2y c1y lt and{/theta theta 180 add def}if
		}ifelse
		gsave
		clippath
		c1x c1y translate
		theta rotate
		-90 rotate
		{pathbbox}stopped
		{0 0 0 0}if
		/yMax xdf
		/xMax xdf
		/yMin xdf
		/xMin xdf
		grestore
		xMax xMin eq yMax yMin eq or
		{
			grestore
			end
		}{
			/max{2 copy gt{pop}{exch pop}ifelse}bdf
			/min{2 copy lt{pop}{exch pop}ifelse}bdf
			rampdict begin
			40 dict begin
			background length 0 gt{background sssetbackground gsave clippath fill grestore}if
			gsave
			c1x c1y translate
			theta rotate
			-90 rotate
			/c2y c1x c2x sub dup mul c1y c2y sub dup mul add sqrt def
			/c1y 0 def
			/c1x 0 def
			/c2x 0 def
			ext0
			{
				0 getrampcolor
				c2y r2 add r1 sub 0.0001 lt
				{
					c1x c1y r1 360 0 arcn
					pathbbox
					/aymax exch def
					/axmax exch def
					/aymin exch def
					/axmin exch def
					/bxMin xMin axmin min def
					/byMin yMin aymin min def
					/bxMax xMax axmax max def
					/byMax yMax aymax max def
					bxMin byMin moveto
					bxMax byMin lineto
					bxMax byMax lineto
					bxMin byMax lineto
					bxMin byMin lineto
					eofill
				}{
					c2y r1 add r2 le
					{
						c1x c1y r1 0 360 arc
						fill
					}
					{
						c2x c2y r2 0 360 arc fill
						r1 r2 eq
						{
							/p1x r1 neg def
							/p1y c1y def
							/p2x r1 def
							/p2y c1y def
							p1x p1y moveto p2x p2y lineto p2x yMin lineto p1x yMin lineto
							fill
						}{
							/AA r2 r1 sub c2y div def
							AA -1 eq
							{/theta 89.99 def}
							{/theta AA 1 AA dup mul sub sqrt div 1 atan def}
							ifelse
							/SS1 90 theta add dup sin exch cos div def
							/p1x r1 SS1 SS1 mul SS1 SS1 mul 1 add div sqrt mul neg def
							/p1y p1x SS1 div neg def
							/SS2 90 theta sub dup sin exch cos div def
							/p2x r1 SS2 SS2 mul SS2 SS2 mul 1 add div sqrt mul def
							/p2y p2x SS2 div neg def
							r1 r2 gt
							{
								/L1maxX p1x yMin p1y sub SS1 div add def
								/L2maxX p2x yMin p2y sub SS2 div add def
							}{
								/L1maxX 0 def
								/L2maxX 0 def
							}ifelse
							p1x p1y moveto p2x p2y lineto L2maxX L2maxX p2x sub SS2 mul p2y add lineto
							L1maxX L1maxX p1x sub SS1 mul p1y add lineto
							fill
						}ifelse
					}ifelse
				}ifelse
			}if
		c1x c2x sub dup mul
		c1y c2y sub dup mul
		add 0.5 exp
		0 dtransform
		dup mul exch dup mul add 0.5 exp 72 div
		0 72 matrix defaultmatrix dtransform dup mul exch dup mul add sqrt
		72 0 matrix defaultmatrix dtransform dup mul exch dup mul add sqrt
		1 index 1 index lt{exch}if pop
		/hires xdf
		hires mul
		/numpix xdf
		/numsteps NumSamples def
		/rampIndxInc 1 def
		/subsampling false def
		numpix 0 ne
		{
			NumSamples numpix div 0.5 gt
			{
				/numsteps numpix 2 div round cvi dup 1 le{pop 2}if def
				/rampIndxInc NumSamples 1 sub numsteps div def
				/subsampling true def
			}if
		}if
		/xInc c2x c1x sub numsteps div def
		/yInc c2y c1y sub numsteps div def
		/rInc r2 r1 sub numsteps div def
		/cx c1x def
		/cy c1y def
		/radius r1 def
		np
		xInc 0 eq yInc 0 eq rInc 0 eq and and
		{
			0 getrampcolor
			cx cy radius 0 360 arc
			stroke
			NumSamples 1 sub getrampcolor
			cx cy radius 72 hires div add 0 360 arc
			0 setlinewidth
			stroke
		}{
			0
			numsteps
			{
				dup
				subsampling{round cvi}if
				getrampcolor
				cx cy radius 0 360 arc
				/cx cx xInc add def
				/cy cy yInc add def
				/radius radius rInc add def
				cx cy radius 360 0 arcn
				eofill
				rampIndxInc add
			}repeat
			pop
		}ifelse
		ext1
		{
			c2y r2 add r1 lt
			{
				c2x c2y r2 0 360 arc
				fill
			}{
				c2y r1 add r2 sub 0.0001 le
				{
					c2x c2y r2 360 0 arcn
					pathbbox
					/aymax exch def
					/axmax exch def
					/aymin exch def
					/axmin exch def
					/bxMin xMin axmin min def
					/byMin yMin aymin min def
					/bxMax xMax axmax max def
					/byMax yMax aymax max def
					bxMin byMin moveto
					bxMax byMin lineto
					bxMax byMax lineto
					bxMin byMax lineto
					bxMin byMin lineto
					eofill
				}{
					c2x c2y r2 0 360 arc fill
					r1 r2 eq
					{
						/p1x r2 neg def
						/p1y c2y def
						/p2x r2 def
						/p2y c2y def
						p1x p1y moveto p2x p2y lineto p2x yMax lineto p1x yMax lineto
						fill
					}{
						/AA r2 r1 sub c2y div def
						AA -1 eq
						{/theta 89.99 def}
						{/theta AA 1 AA dup mul sub sqrt div 1 atan def}
						ifelse
						/SS1 90 theta add dup sin exch cos div def
						/p1x r2 SS1 SS1 mul SS1 SS1 mul 1 add div sqrt mul neg def
						/p1y c2y p1x SS1 div sub def
						/SS2 90 theta sub dup sin exch cos div def
						/p2x r2 SS2 SS2 mul SS2 SS2 mul 1 add div sqrt mul def
						/p2y c2y p2x SS2 div sub def
						r1 r2 lt
						{
							/L1maxX p1x yMax p1y sub SS1 div add def
							/L2maxX p2x yMax p2y sub SS2 div add def
						}{
							/L1maxX 0 def
							/L2maxX 0 def
						}ifelse
						p1x p1y moveto p2x p2y lineto L2maxX L2maxX p2x sub SS2 mul p2y add lineto
						L1maxX L1maxX p1x sub SS1 mul p1y add lineto
						fill
					}ifelse
				}ifelse
			}ifelse
		}if
		grestore
		grestore
		end
		end
		end
		}ifelse
	}bdf
	/GenStrips
	{
		40 dict begin
		/ColorSpaceFamily xdf
		/background xdf
		/ext1 xdf
		/ext0 xdf
		/BBox xdf
		/y2 xdf
		/x2 xdf
		/y1 xdf
		/x1 xdf
		/rampdict xdf
		/setinkoverprint where{pop/setinkoverprint{pop}def}if
		gsave
		BBox length 0 gt
		{
			np
			BBox 0 get BBox 1 get moveto
			BBox 2 get BBox 0 get sub 0 rlineto
			0 BBox 3 get BBox 1 get sub rlineto
			BBox 2 get BBox 0 get sub neg 0 rlineto
			closepath
			clip
			np
		}if
		x1 x2 eq
		{
			y1 y2 lt{/theta 90 def}{/theta 270 def}ifelse
		}{
			/slope y2 y1 sub x2 x1 sub div def
			/theta slope 1 atan def
			x2 x1 lt y2 y1 ge and{/theta theta 180 sub def}if
			x2 x1 lt y2 y1 lt and{/theta theta 180 add def}if
		}
		ifelse
		gsave
		clippath
		x1 y1 translate
		theta rotate
		{pathbbox}stopped
		{0 0 0 0}if
		/yMax exch def
		/xMax exch def
		/yMin exch def
		/xMin exch def
		grestore
		xMax xMin eq yMax yMin eq or
		{
			grestore
			end
		}{
			rampdict begin
			20 dict begin
			background length 0 gt{background sssetbackground gsave clippath fill grestore}if
			gsave
			x1 y1 translate
			theta rotate
			/xStart 0 def
			/xEnd x2 x1 sub dup mul y2 y1 sub dup mul add 0.5 exp def
			/ySpan yMax yMin sub def
			/numsteps NumSamples def
			/rampIndxInc 1 def
			/subsampling false def
			xStart 0 transform
			xEnd 0 transform
			3 -1 roll
			sub dup mul
			3 1 roll
			sub dup mul
			add 0.5 exp 72 div
			0 72 matrix defaultmatrix dtransform dup mul exch dup mul add sqrt
			72 0 matrix defaultmatrix dtransform dup mul exch dup mul add sqrt
			1 index 1 index lt{exch}if pop
			mul
			/numpix xdf
			numpix 0 ne
			{
				NumSamples numpix div 0.5 gt
				{
					/numsteps numpix 2 div round cvi dup 1 le{pop 2}if def
					/rampIndxInc NumSamples 1 sub numsteps div def
					/subsampling true def
				}if
			}if
			ext0
			{
				0 getrampcolor
				xMin xStart lt
				{
					xMin yMin xMin neg ySpan rectfill
				}if
			}if
			/xInc xEnd xStart sub numsteps div def
			/x xStart def
			0
			numsteps
			{
				dup
				subsampling{round cvi}if
				getrampcolor
				x yMin xInc ySpan rectfill
				/x x xInc add def
				rampIndxInc add
			}repeat
			pop
			ext1{
				xMax xEnd gt
				{
					xEnd yMin xMax xEnd sub ySpan rectfill
				}if
			}if
			grestore
			grestore
			end
			end
			end
		}ifelse
	}bdf
}def
/pt
{
	end
}def
/dt{
}def
/pgsv{
	//Adobe_AGM_Core/AGMCORE_save save put
}def
/pgrs{
	//Adobe_AGM_Core/AGMCORE_save get restore
}def
systemdict/findcolorrendering known{
	/findcolorrendering systemdict/findcolorrendering get def
}if
systemdict/setcolorrendering known{
	/setcolorrendering systemdict/setcolorrendering get def
}if
/test_cmyk_color_plate
{
	gsave
	setcmykcolor currentgray 1 ne
	grestore
}def
/inRip_spot_has_ink
{
	dup//Adobe_AGM_Core/AGMCORE_name xddf
	convert_spot_to_process not
}def
/map255_to_range
{
	1 index sub
	3 -1 roll 255 div mul add
}def
/set_csa_crd
{
	/sep_colorspace_dict null AGMCORE_gput
	begin
		CSA get_csa_by_name setcolorspace_opt
		set_crd
	end
}
def
/map_csa
{
	currentdict/MappedCSA known{MappedCSA null ne}{false}ifelse
	{pop}{get_csa_by_name/MappedCSA xdf}ifelse
}def
/setsepcolor
{
	/sep_colorspace_dict AGMCORE_gget begin
		dup/sep_tint exch AGMCORE_gput
		TintProc
	end
}def
/setdevicencolor
{
	/devicen_colorspace_dict AGMCORE_gget begin
		Names length copy
		Names length 1 sub -1 0
		{
			/devicen_tints AGMCORE_gget 3 1 roll xpt
		}for
		TintProc
	end
}def
/sep_colorspace_proc
{
	/AGMCORE_tmp exch store
	/sep_colorspace_dict AGMCORE_gget begin
	currentdict/Components known{
		Components aload pop 
		TintMethod/Lab eq{
			2{AGMCORE_tmp mul NComponents 1 roll}repeat
			LMax sub AGMCORE_tmp mul LMax add NComponents 1 roll
		}{
			TintMethod/Subtractive eq{
				NComponents{
					AGMCORE_tmp mul NComponents 1 roll
				}repeat
			}{
				NComponents{
					1 sub AGMCORE_tmp mul 1 add NComponents 1 roll
				}repeat
			}ifelse
		}ifelse
	}{
		ColorLookup AGMCORE_tmp ColorLookup length 1 sub mul round cvi get
		aload pop
	}ifelse
	end
}def
/sep_colorspace_gray_proc
{
	/AGMCORE_tmp exch store
	/sep_colorspace_dict AGMCORE_gget begin
	GrayLookup AGMCORE_tmp GrayLookup length 1 sub mul round cvi get
	end
}def
/sep_proc_name
{
	dup 0 get 
	dup/DeviceRGB eq exch/DeviceCMYK eq or level2 not and has_color not and{
		pop[/DeviceGray]
		/sep_colorspace_gray_proc
	}{
		/sep_colorspace_proc
	}ifelse
}def
/setsepcolorspace
{
	current_spot_alias{
		dup begin
			Name map_alias{
				exch pop
			}if
		end
	}if
	dup/sep_colorspace_dict exch AGMCORE_gput
	begin
	CSA map_csa
	/AGMCORE_sep_special Name dup()eq exch(All)eq or store
	AGMCORE_avoid_L2_sep_space{
		[/Indexed MappedCSA sep_proc_name 255 exch 
			{255 div}/exec cvx 3 -1 roll[4 1 roll load/exec cvx]cvx 
		]setcolorspace_opt
		/TintProc{
			255 mul round cvi setcolor
		}bdf
	}{
		MappedCSA 0 get/DeviceCMYK eq 
		currentdict/Components known and 
		AGMCORE_sep_special not and{
			/TintProc[
				Components aload pop Name findcmykcustomcolor 
				/exch cvx/setcustomcolor cvx
			]cvx bdf
		}{
 			AGMCORE_host_sep Name(All)eq and{
 				/TintProc{
					1 exch sub setseparationgray 
				}bdf
 			}{
				AGMCORE_in_rip_sep MappedCSA 0 get/DeviceCMYK eq and 
				AGMCORE_host_sep or
				Name()eq and{
					/TintProc[
						MappedCSA sep_proc_name exch 0 get/DeviceCMYK eq{
							cvx/setcmykcolor cvx
						}{
							cvx/setgray cvx
						}ifelse
					]cvx bdf
				}{
					AGMCORE_producing_seps MappedCSA 0 get dup/DeviceCMYK eq exch/DeviceGray eq or and AGMCORE_sep_special not and{
	 					/TintProc[
							/dup cvx
							MappedCSA sep_proc_name cvx exch
							0 get/DeviceGray eq{
								1/exch cvx/sub cvx 0 0 0 4 -1/roll cvx
							}if
							/Name cvx/findcmykcustomcolor cvx/exch cvx
							AGMCORE_host_sep{
								AGMCORE_is_cmyk_sep
								/Name cvx 
								/AGMCORE_IsSeparationAProcessColor load/exec cvx
								/not cvx/and cvx 
							}{
								Name inRip_spot_has_ink not
							}ifelse
							[
		 						/pop cvx 1
							]cvx/if cvx
							/setcustomcolor cvx
						]cvx bdf
 					}{
						/TintProc{setcolor}bdf
						[/Separation Name MappedCSA sep_proc_name load]setcolorspace_opt
					}ifelse
				}ifelse
			}ifelse
		}ifelse
	}ifelse
	set_crd
	setsepcolor
	end
}def
/additive_blend
{
 	3 dict begin
 	/numarrays xdf
 	/numcolors xdf
 	0 1 numcolors 1 sub
 		{
 		/c1 xdf
 		1
 		0 1 numarrays 1 sub
 			{
			1 exch add/index cvx
 			c1/get cvx/mul cvx
 			}for
 		numarrays 1 add 1/roll cvx 
 		}for
 	numarrays[/pop cvx]cvx/repeat cvx
 	end
}def
/subtractive_blend
{
	3 dict begin
	/numarrays xdf
	/numcolors xdf
	0 1 numcolors 1 sub
		{
		/c1 xdf
		1 1
		0 1 numarrays 1 sub
			{
			1 3 3 -1 roll add/index cvx 
			c1/get cvx/sub cvx/mul cvx
			}for
		/sub cvx
		numarrays 1 add 1/roll cvx
		}for
	numarrays[/pop cvx]cvx/repeat cvx
	end
}def
/exec_tint_transform
{
	/TintProc[
		/TintTransform cvx/setcolor cvx
	]cvx bdf
	MappedCSA setcolorspace_opt
}bdf
/devn_makecustomcolor
{
	2 dict begin
	/names_index xdf
	/Names xdf
	1 1 1 1 Names names_index get findcmykcustomcolor
	/devicen_tints AGMCORE_gget names_index get setcustomcolor
	Names length{pop}repeat
	end
}bdf
/setdevicencolorspace
{
	dup/AliasedColorants known{false}{true}ifelse 
	current_spot_alias and{
		7 dict begin
		/names_index 0 def
		dup/names_len exch/Names get length def
		/new_names names_len array def
		/new_LookupTables names_len array def
		/alias_cnt 0 def
		dup/Names get
		{
			dup map_alias{
				exch pop
				dup/ColorLookup known{
					dup begin
					new_LookupTables names_index ColorLookup put
					end
				}{
					dup/Components known{
						dup begin
						new_LookupTables names_index Components put
						end
					}{
						dup begin
						new_LookupTables names_index[null null null null]put
						end
					}ifelse
				}ifelse
				new_names names_index 3 -1 roll/Name get put
				/alias_cnt alias_cnt 1 add def 
			}{
				/name xdf				
				new_names names_index name put
				dup/LookupTables known{
					dup begin
					new_LookupTables names_index LookupTables names_index get put
					end
				}{
					dup begin
					new_LookupTables names_index[null null null null]put
					end
				}ifelse
			}ifelse
			/names_index names_index 1 add def 
		}forall
		alias_cnt 0 gt{
			/AliasedColorants true def
			/lut_entry_len new_LookupTables 0 get dup length 256 ge{0 get length}{length}ifelse def
			0 1 names_len 1 sub{
				/names_index xdf
				new_LookupTables names_index get dup length 256 ge{0 get length}{length}ifelse lut_entry_len ne{
					/AliasedColorants false def
					exit
				}{
					new_LookupTables names_index get 0 get null eq{
						dup/Names get names_index get/name xdf
						name(Cyan)eq name(Magenta)eq name(Yellow)eq name(Black)eq
						or or or not{
							/AliasedColorants false def
							exit
						}if
					}if
				}ifelse
			}for
			lut_entry_len 1 eq{
				/AliasedColorants false def
			}if
			AliasedColorants{
				dup begin
				/Names new_names def
				/LookupTables new_LookupTables def
				/AliasedColorants true def
				/NComponents lut_entry_len def
				/TintMethod NComponents 4 eq{/Subtractive}{/Additive}ifelse def
				/MappedCSA TintMethod/Additive eq{/DeviceRGB}{/DeviceCMYK}ifelse def
				currentdict/TTTablesIdx known not{
					/TTTablesIdx -1 def
				}if
				end
			}if
		}if
		end
	}if
	dup/devicen_colorspace_dict exch AGMCORE_gput
	begin
	currentdict/AliasedColorants known{
		AliasedColorants
	}{
		false
	}ifelse
	dup not{
		CSA map_csa
	}if
	/TintTransform load type/nulltype eq or{
		/TintTransform[
			0 1 Names length 1 sub
				{
				/TTTablesIdx TTTablesIdx 1 add def
				dup LookupTables exch get dup 0 get null eq
					{
					1 index
					Names exch get
					dup(Cyan)eq
						{
						pop exch
						LookupTables length exch sub
						/index cvx
						0 0 0
						}
						{
						dup(Magenta)eq
							{
							pop exch
							LookupTables length exch sub
							/index cvx
							0/exch cvx 0 0
							}{
							(Yellow)eq
								{
								exch
								LookupTables length exch sub
								/index cvx
								0 0 3 -1/roll cvx 0
								}{
								exch
								LookupTables length exch sub
								/index cvx
								0 0 0 4 -1/roll cvx
								}ifelse
							}ifelse
						}ifelse
					5 -1/roll cvx/astore cvx
					}{
					dup length 1 sub
					LookupTables length 4 -1 roll sub 1 add
					/index cvx/mul cvx/round cvx/cvi cvx/get cvx
					}ifelse
					Names length TTTablesIdx add 1 add 1/roll cvx
				}for
			Names length[/pop cvx]cvx/repeat cvx
			NComponents Names length
 			TintMethod/Subtractive eq
 				{
 				subtractive_blend
 				}{
 				additive_blend
 				}ifelse
		]cvx bdf
	}if
	AGMCORE_host_sep{
		Names convert_to_process{
			exec_tint_transform
		}
		{	
			currentdict/AliasedColorants known{
				AliasedColorants not
			}{
				false
			}ifelse
			5 dict begin
			/AvoidAliasedColorants xdf
			/painted? false def
			/names_index 0 def
			/names_len Names length def
			AvoidAliasedColorants{
				/currentspotalias current_spot_alias def
				false set_spot_alias
			}if
			Names{
				AGMCORE_is_cmyk_sep{
					dup(Cyan)eq AGMCORE_cyan_plate and exch
					dup(Magenta)eq AGMCORE_magenta_plate and exch
					dup(Yellow)eq AGMCORE_yellow_plate and exch
					(Black)eq AGMCORE_black_plate and or or or{
						/devicen_colorspace_dict AGMCORE_gget/TintProc[
							Names names_index/devn_makecustomcolor cvx
						]cvx ddf
						/painted? true def
					}if
					painted?{exit}if
				}{
					0 0 0 0 5 -1 roll findcmykcustomcolor 1 setcustomcolor currentgray 0 eq{
					/devicen_colorspace_dict AGMCORE_gget/TintProc[
						Names names_index/devn_makecustomcolor cvx
					]cvx ddf
					/painted? true def
					exit
					}if
				}ifelse
				/names_index names_index 1 add def
			}forall
			AvoidAliasedColorants{
				currentspotalias set_spot_alias
			}if
			painted?{
				/devicen_colorspace_dict AGMCORE_gget/names_index names_index put
			}{
				/devicen_colorspace_dict AGMCORE_gget/TintProc[
					names_len[/pop cvx]cvx/repeat cvx 1/setseparationgray cvx
 					0 0 0 0/setcmykcolor cvx
				]cvx ddf
			}ifelse
			end
		}ifelse
	}
	{
		AGMCORE_in_rip_sep{
			Names convert_to_process not
		}{
			level3
		}ifelse
		{
			[/DeviceN Names MappedCSA/TintTransform load]setcolorspace_opt
			/TintProc level3 not AGMCORE_in_rip_sep and{
				[
					Names/length cvx[/pop cvx]cvx/repeat cvx
				]cvx bdf
			}{
				{setcolor}bdf
			}ifelse
		}{
			exec_tint_transform
		}ifelse
	}ifelse
	set_crd
	/AliasedColorants false def
	end
}def
/setindexedcolorspace
{
	dup/indexed_colorspace_dict exch AGMCORE_gput
	begin
		currentdict/CSDBase known{
			CSDBase/CSD get_res begin
			currentdict/Names known{
				currentdict devncs
			}{
				1 currentdict sepcs
			}ifelse
			AGMCORE_host_sep{
				4 dict begin
				/compCnt/Names where{pop Names length}{1}ifelse def
				/NewLookup HiVal 1 add string def
				0 1 HiVal{
					/tableIndex xdf
					Lookup dup type/stringtype eq{
						compCnt tableIndex map_index
					}{
						exec
					}ifelse
					/Names where{
						pop setdevicencolor
					}{
						setsepcolor
					}ifelse
					currentgray
					tableIndex exch
					255 mul cvi 
					NewLookup 3 1 roll put
				}for
				[/Indexed currentcolorspace HiVal NewLookup]setcolorspace_opt
				end
			}{
				level3
				{
					currentdict/Names known{
						[/Indexed[/DeviceN Names MappedCSA/TintTransform load]HiVal Lookup]setcolorspace_opt
					}{
						[/Indexed[/Separation Name MappedCSA sep_proc_name load]HiVal Lookup]setcolorspace_opt
					}ifelse
				}{
				[/Indexed MappedCSA HiVal
					[
					currentdict/Names known{
						Lookup dup type/stringtype eq
							{/exch cvx CSDBase/CSD get_res/Names get length dup/mul cvx exch/getinterval cvx{255 div}/forall cvx}
							{/exec cvx}ifelse
							/TintTransform load/exec cvx
					}{
						Lookup dup type/stringtype eq
							{/exch cvx/get cvx 255/div cvx}
							{/exec cvx}ifelse
							CSDBase/CSD get_res/MappedCSA get sep_proc_name exch pop/load cvx/exec cvx
					}ifelse
					]cvx
				]setcolorspace_opt
				}ifelse
			}ifelse
			end
			set_crd
		}
		{
			CSA map_csa
			AGMCORE_host_sep level2 not and{
				0 0 0 0 setcmykcolor
			}{
				[/Indexed MappedCSA 
				level2 not has_color not and{
					dup 0 get dup/DeviceRGB eq exch/DeviceCMYK eq or{
						pop[/DeviceGray]
					}if
					HiVal GrayLookup
				}{
					HiVal 
					currentdict/RangeArray known{
						{
							/indexed_colorspace_dict AGMCORE_gget begin
							Lookup exch 
							dup HiVal gt{
								pop HiVal
							}if
							NComponents mul NComponents getinterval{}forall
							NComponents 1 sub -1 0{
								RangeArray exch 2 mul 2 getinterval aload pop map255_to_range
								NComponents 1 roll
							}for
							end
						}bind
					}{
						Lookup
					}ifelse
				}ifelse
				]setcolorspace_opt
				set_crd
			}ifelse
		}ifelse
	end
}def
/setindexedcolor
{
	AGMCORE_host_sep{
		/indexed_colorspace_dict AGMCORE_gget
		begin
		currentdict/CSDBase known{
			CSDBase/CSD get_res begin
			currentdict/Names known{
				map_indexed_devn
				devn
			}
			{
				Lookup 1 3 -1 roll map_index
				sep
			}ifelse
			end
		}{
			Lookup MappedCSA/DeviceCMYK eq{4}{1}ifelse 3 -1 roll
			map_index
			MappedCSA/DeviceCMYK eq{setcmykcolor}{setgray}ifelse
		}ifelse
		end
	}{
		level3 not AGMCORE_in_rip_sep and/indexed_colorspace_dict AGMCORE_gget/CSDBase known and{
			/indexed_colorspace_dict AGMCORE_gget/CSDBase get/CSD get_res begin
			map_indexed_devn
			devn
			end
		}
		{
			setcolor
		}ifelse
	}ifelse
}def
/ignoreimagedata
{
	currentoverprint not{
		gsave
		dup clonedict begin
		1 setgray
		/Decode[0 1]def
		/DataSource<FF>def
		/MultipleDataSources false def
		/BitsPerComponent 8 def
		currentdict end
		systemdict/image gx
		grestore
		}if
	consumeimagedata
}def
/add_res
{
	dup/CSD eq{
		pop 
		//Adobe_AGM_Core begin
		/AGMCORE_CSD_cache load 3 1 roll put
		end
	}{
		defineresource pop
	}ifelse
}def
/del_res
{
	{
		aload pop exch
		dup/CSD eq{
			pop 
			{//Adobe_AGM_Core/AGMCORE_CSD_cache get exch undef}forall
		}{
			exch
			{1 index undefineresource}forall
			pop
		}ifelse
	}forall
}def
/get_res
{
	dup/CSD eq{
		pop
		dup type dup/nametype eq exch/stringtype eq or{
			AGMCORE_CSD_cache exch get
		}if
	}{
		findresource
	}ifelse
}def
/get_csa_by_name
{
	dup type dup/nametype eq exch/stringtype eq or{
		/CSA get_res
	}if
}def
/paintproc_buf_init
{
	/count get 0 0 put
}def
/paintproc_buf_next
{
	dup/count get dup 0 get
	dup 3 1 roll
	1 add 0 xpt
	get				
}def
/cachepaintproc_compress
{
	5 dict begin
	currentfile exch 0 exch/SubFileDecode filter/ReadFilter exch def
	/ppdict 20 dict def
	/string_size 16000 def
	/readbuffer string_size string def
	currentglobal true setglobal 
	ppdict 1 array dup 0 1 put/count xpt
	setglobal
	/LZWFilter 
	{
		exch
		dup length 0 eq{
			pop
		}{
			ppdict dup length 1 sub 3 -1 roll put
		}ifelse
		{string_size}{0}ifelse string
	}/LZWEncode filter def
	{		
		ReadFilter readbuffer readstring
		exch LZWFilter exch writestring
		not{exit}if
	}loop
	LZWFilter closefile
	ppdict				
	end
}def
/cachepaintproc
{
	2 dict begin
	currentfile exch 0 exch/SubFileDecode filter/ReadFilter exch def
	/ppdict 20 dict def
	currentglobal true setglobal 
	ppdict 1 array dup 0 1 put/count xpt
	setglobal
	{
		ReadFilter 16000 string readstring exch
		ppdict dup length 1 sub 3 -1 roll put
		not{exit}if
	}loop
	ppdict dup dup length 1 sub()put					
	end	
}def
/make_pattern
{
	exch clonedict exch
	dup matrix currentmatrix matrix concatmatrix 0 0 3 2 roll itransform
	exch 3 index/XStep get 1 index exch 2 copy div cvi mul sub sub
	exch 3 index/YStep get 1 index exch 2 copy div cvi mul sub sub
	matrix translate exch matrix concatmatrix
			 1 index begin
		BBox 0 get XStep div cvi XStep mul/xshift exch neg def
		BBox 1 get YStep div cvi YStep mul/yshift exch neg def
		BBox 0 get xshift add
		BBox 1 get yshift add
		BBox 2 get xshift add
		BBox 3 get yshift add
		4 array astore
		/BBox exch def
		[xshift yshift/translate load null/exec load]dup
		3/PaintProc load put cvx/PaintProc exch def
		end
	gsave 0 setgray
	makepattern
	grestore
}def
/set_pattern
{
	dup/PatternType get 1 eq{
		dup/PaintType get 1 eq{
			currentoverprint sop[/DeviceGray]setcolorspace 0 setgray
		}if
	}if
	setpattern
}def
/setcolorspace_opt
{
	dup currentcolorspace eq{pop}{setcolorspace}ifelse
}def
/updatecolorrendering
{
	currentcolorrendering/RenderingIntent known{
		currentcolorrendering/RenderingIntent get
	}
	{
		Intent/AbsoluteColorimetric eq 
		{
			/absolute_colorimetric_crd AGMCORE_gget dup null eq
		}
		{
			Intent/RelativeColorimetric eq
			{
				/relative_colorimetric_crd AGMCORE_gget dup null eq
			}
			{
				Intent/Saturation eq
				{
					/saturation_crd AGMCORE_gget dup null eq
				}
				{
					/perceptual_crd AGMCORE_gget dup null eq
				}ifelse
			}ifelse
		}ifelse
		{
			pop null	
		}
		{
			/RenderingIntent known{null}{Intent}ifelse
		}ifelse
	}ifelse
	Intent ne{
		Intent/ColorRendering{findresource}stopped
		{
			pop pop systemdict/findcolorrendering known
			{
 				Intent findcolorrendering
 				{
 					/ColorRendering findresource true exch
 				}
 				{
 					/ColorRendering findresource
					product(Xerox Phaser 5400)ne
					exch
 				}ifelse
				dup Intent/AbsoluteColorimetric eq 
				{
					/absolute_colorimetric_crd exch AGMCORE_gput
				}
				{
					Intent/RelativeColorimetric eq
					{
						/relative_colorimetric_crd exch AGMCORE_gput
					}
					{
						Intent/Saturation eq
						{
							/saturation_crd exch AGMCORE_gput
						}
						{
							Intent/Perceptual eq
							{
								/perceptual_crd exch AGMCORE_gput
							}
							{
								pop
							}ifelse
						}ifelse
					}ifelse
				}ifelse
				1 index{exch}{pop}ifelse
			}
			{false}ifelse
		}
		{true}ifelse
		{
			dup begin
			currentdict/TransformPQR known{
				currentdict/TransformPQR get aload pop
				3{{}eq 3 1 roll}repeat or or
			}
			{true}ifelse
			currentdict/MatrixPQR known{
				currentdict/MatrixPQR get aload pop
				1.0 eq 9 1 roll 0.0 eq 9 1 roll 0.0 eq 9 1 roll
				0.0 eq 9 1 roll 1.0 eq 9 1 roll 0.0 eq 9 1 roll
				0.0 eq 9 1 roll 0.0 eq 9 1 roll 1.0 eq
				and and and and and and and and
			}
			{true}ifelse
			end
			or
			{
				clonedict begin
				/TransformPQR[
					{4 -1 roll 3 get dup 3 1 roll sub 5 -1 roll 3 get 3 -1 roll sub div
					3 -1 roll 3 get 3 -1 roll 3 get dup 4 1 roll sub mul add}bind
					{4 -1 roll 4 get dup 3 1 roll sub 5 -1 roll 4 get 3 -1 roll sub div
					3 -1 roll 4 get 3 -1 roll 4 get dup 4 1 roll sub mul add}bind
					{4 -1 roll 5 get dup 3 1 roll sub 5 -1 roll 5 get 3 -1 roll sub div
					3 -1 roll 5 get 3 -1 roll 5 get dup 4 1 roll sub mul add}bind
				]def
				/MatrixPQR[0.8951 -0.7502 0.0389 0.2664 1.7135 -0.0685 -0.1614 0.0367 1.0296]def
				/RangePQR[-0.3227950745 2.3229645538 -1.5003771057 3.5003465881 -0.1369979095 2.136967392]def
				currentdict end
			}if
			setcolorrendering_opt
		}if		
	}if
}def
/set_crd
{
	AGMCORE_host_sep not level2 and{
		currentdict/ColorRendering known{
			ColorRendering/ColorRendering{findresource}stopped not{setcolorrendering_opt}if
		}{
			currentdict/Intent known{
				updatecolorrendering
			}if
		}ifelse
		currentcolorspace dup type/arraytype eq
			{0 get}if
		/DeviceRGB eq
			{
			currentdict/UCR known
				{/UCR}{/AGMCORE_currentucr}ifelse
			load setundercolorremoval
			currentdict/BG known 
				{/BG}{/AGMCORE_currentbg}ifelse
			load setblackgeneration
			}if
	}if
}def
/set_ucrbg
{
	dup null eq {pop /AGMCORE_currentbg load}{/Procedure get_res}ifelse
	dup currentblackgeneration eq {pop}{setblackgeneration}ifelse
	dup null eq {pop /AGMCORE_currentucr load}{/Procedure get_res}ifelse
	dup currentundercolorremoval eq {pop}{setundercolorremoval}ifelse
}def
/setcolorrendering_opt
{
	dup currentcolorrendering eq{
		pop
	}{
		product(HP Color LaserJet 2605)anchorsearch{
			pop pop pop
		}{
			pop
			clonedict
			begin
				/Intent Intent def
				currentdict
			end
			setcolorrendering
		}ifelse
	}ifelse
}def
/cpaint_gcomp
{
	convert_to_process//Adobe_AGM_Core/AGMCORE_ConvertToProcess xddf
	//Adobe_AGM_Core/AGMCORE_ConvertToProcess get not
	{
		(%end_cpaint_gcomp)flushinput
	}if
}def
/cpaint_gsep
{
	//Adobe_AGM_Core/AGMCORE_ConvertToProcess get
	{	
		(%end_cpaint_gsep)flushinput
	}if
}def
/cpaint_gend
{np}def
/T1_path
{
	currentfile token pop currentfile token pop mo
	{
		currentfile token pop dup type/stringtype eq
			{pop exit}if 
		0 exch rlineto 
		currentfile token pop dup type/stringtype eq
			{pop exit}if 
		0 rlineto
	}loop
}def
/T1_gsave
	level3
	{/clipsave}
	{/gsave}ifelse
	load def
/T1_grestore
	level3
	{/cliprestore}
	{/grestore}ifelse 
	load def
/set_spot_alias_ary
{
	dup inherit_aliases
	//Adobe_AGM_Core/AGMCORE_SpotAliasAry xddf
}def
/set_spot_normalization_ary
{
	dup inherit_aliases
	dup length
	/AGMCORE_SpotAliasAry where{pop AGMCORE_SpotAliasAry length add}if
	array
	//Adobe_AGM_Core/AGMCORE_SpotAliasAry2 xddf
	/AGMCORE_SpotAliasAry where{
		pop
		AGMCORE_SpotAliasAry2 0 AGMCORE_SpotAliasAry putinterval
		AGMCORE_SpotAliasAry length
	}{0}ifelse
	AGMCORE_SpotAliasAry2 3 1 roll exch putinterval
	true set_spot_alias
}def
/inherit_aliases
{
	{dup/Name get map_alias{/CSD put}{pop}ifelse}forall
}def
/set_spot_alias
{
	/AGMCORE_SpotAliasAry2 where{
		/AGMCORE_current_spot_alias 3 -1 roll put
	}{
		pop
	}ifelse
}def
/current_spot_alias
{
	/AGMCORE_SpotAliasAry2 where{
		/AGMCORE_current_spot_alias get
	}{
		false
	}ifelse
}def
/map_alias
{
	/AGMCORE_SpotAliasAry2 where{
		begin
			/AGMCORE_name xdf
			false	
			AGMCORE_SpotAliasAry2{
				dup/Name get AGMCORE_name eq{
					/CSD get/CSD get_res
					exch pop true
					exit
				}{
					pop
				}ifelse
			}forall
		end
	}{
		pop false
	}ifelse
}bdf
/spot_alias
{
	true set_spot_alias
	/AGMCORE_&setcustomcolor AGMCORE_key_known not{
		//Adobe_AGM_Core/AGMCORE_&setcustomcolor/setcustomcolor load put
	}if
	/customcolor_tint 1 AGMCORE_gput
	//Adobe_AGM_Core begin
	/setcustomcolor
	{
		//Adobe_AGM_Core begin
		dup/customcolor_tint exch AGMCORE_gput
		1 index aload pop pop 1 eq exch 1 eq and exch 1 eq and exch 1 eq and not
		current_spot_alias and{1 index 4 get map_alias}{false}ifelse
		{
			false set_spot_alias
			/sep_colorspace_dict AGMCORE_gget null ne
			{/sep_colorspace_dict AGMCORE_gget/ForeignContent known not}{false}ifelse
			3 1 roll 2 index{
				exch pop/sep_tint AGMCORE_gget exch
			}if
			mark 3 1 roll
			setsepcolorspace
			counttomark 0 ne{
				setsepcolor
			}if
			pop
			not{/sep_tint 1.0 AGMCORE_gput/sep_colorspace_dict AGMCORE_gget/ForeignContent true put}if
			pop
			true set_spot_alias
		}{
			AGMCORE_&setcustomcolor
		}ifelse
		end
	}bdf
	end
}def
/begin_feature
{
	Adobe_AGM_Core/AGMCORE_feature_dictCount countdictstack put
	count Adobe_AGM_Core/AGMCORE_feature_opCount 3 -1 roll put
	{Adobe_AGM_Core/AGMCORE_feature_ctm matrix currentmatrix put}if
}def
/end_feature
{
	2 dict begin
	/spd/setpagedevice load def
	/setpagedevice{get_gstate spd set_gstate}def
	stopped{$error/newerror false put}if
	end
	count Adobe_AGM_Core/AGMCORE_feature_opCount get sub dup 0 gt{{pop}repeat}{pop}ifelse
	countdictstack Adobe_AGM_Core/AGMCORE_feature_dictCount get sub dup 0 gt{{end}repeat}{pop}ifelse
	{Adobe_AGM_Core/AGMCORE_feature_ctm get setmatrix}if
}def
/set_negative
{
	//Adobe_AGM_Core begin
	/AGMCORE_inverting exch def
	level2{
		currentpagedevice/NegativePrint known AGMCORE_distilling not and{
			currentpagedevice/NegativePrint get//Adobe_AGM_Core/AGMCORE_inverting get ne{
				true begin_feature true{
						<</NegativePrint//Adobe_AGM_Core/AGMCORE_inverting get>>setpagedevice
				}end_feature
			}if
			/AGMCORE_inverting false def
		}if
	}if
	AGMCORE_inverting{
		[{1 exch sub}/exec load dup currenttransfer exch]cvx bind settransfer
 		AGMCORE_distilling{
 			erasepage
 		}{
 			gsave np clippath 1/setseparationgray where{pop setseparationgray}{setgray}ifelse
 			/AGMIRS_&fill where{pop AGMIRS_&fill}{fill}ifelse grestore
 		}ifelse
	}if
	end
}def
/lw_save_restore_override{
	/md where{
		pop
		md begin
		initializepage
		/initializepage{}def
		/pmSVsetup{}def
		/endp{}def
		/pse{}def
		/psb{}def
		/orig_showpage where
			{pop}
			{/orig_showpage/showpage load def}
		ifelse
		/showpage{orig_showpage gR}def
		end
	}if
}def
/pscript_showpage_override{
	/NTPSOct95 where
	{
		begin
		showpage
		save
		/showpage/restore load def
		/restore{exch pop}def
		end
	}if
}def
/driver_media_override
{
	/md where{
		pop
		md/initializepage known{
			md/initializepage{}put
		}if
		md/rC known{
			md/rC{4{pop}repeat}put
		}if
	}if
	/mysetup where{
		/mysetup[1 0 0 1 0 0]put
	}if
	Adobe_AGM_Core/AGMCORE_Default_CTM matrix currentmatrix put
	level2
		{Adobe_AGM_Core/AGMCORE_Default_PageSize currentpagedevice/PageSize get put}if
}def
/capture_mysetup
{
	/Pscript_Win_Data where{
		pop
		Pscript_Win_Data/mysetup known{
			Adobe_AGM_Core/save_mysetup Pscript_Win_Data/mysetup get put
		}if
	}if
}def
/restore_mysetup
{
	/Pscript_Win_Data where{
		pop
		Pscript_Win_Data/mysetup known{
			Adobe_AGM_Core/save_mysetup known{
				Pscript_Win_Data/mysetup Adobe_AGM_Core/save_mysetup get put
				Adobe_AGM_Core/save_mysetup undef
			}if
		}if
	}if
}def
/driver_check_media_override
{
 	/PrepsDict where
 		{pop}
		{
		Adobe_AGM_Core/AGMCORE_Default_CTM get matrix currentmatrix ne
		Adobe_AGM_Core/AGMCORE_Default_PageSize get type/arraytype eq
			{
			Adobe_AGM_Core/AGMCORE_Default_PageSize get 0 get currentpagedevice/PageSize get 0 get eq and
			Adobe_AGM_Core/AGMCORE_Default_PageSize get 1 get currentpagedevice/PageSize get 1 get eq and
			}if
			{
			Adobe_AGM_Core/AGMCORE_Default_CTM get setmatrix
			}if
		}ifelse
}def
AGMCORE_err_strings begin
	/AGMCORE_bad_environ(Environment not satisfactory for this job. Ensure that the PPD is correct or that the PostScript level requested is supported by this printer. )def
	/AGMCORE_color_space_onhost_seps(This job contains colors that will not separate with on-host methods. )def
	/AGMCORE_invalid_color_space(This job contains an invalid color space. )def
end
/set_def_ht
{AGMCORE_def_ht sethalftone}def
/set_def_flat
{AGMCORE_Default_flatness setflat}def
end
systemdict/setpacking known
{setpacking}if
%%EndResource
%%BeginResource: procset Adobe_CoolType_Core 2.31 0%%Copyright: Copyright 1997-2006 Adobe Systems Incorporated. All Rights Reserved.%%Version: 2.31 010 dict begin/Adobe_CoolType_Passthru currentdict def/Adobe_CoolType_Core_Defined userdict/Adobe_CoolType_Core known defAdobe_CoolType_Core_Defined	{/Adobe_CoolType_Core userdict/Adobe_CoolType_Core get def}ifuserdict/Adobe_CoolType_Core 70 dict dup begin put/Adobe_CoolType_Version 2.31 def/Level2?	systemdict/languagelevel known dup		{pop systemdict/languagelevel get 2 ge}	if defLevel2? not	{	/currentglobal false def	/setglobal/pop load def	/gcheck{pop false}bind def	/currentpacking false def	/setpacking/pop load def	/SharedFontDirectory 0 dict def	}ifcurrentpackingtrue setpackingcurrentglobal false setglobaluserdict/Adobe_CoolType_Data 2 copy known not	{2 copy 10 dict put}ifget	 begin	/@opStackCountByLevel 32 dict def	/@opStackLevel 0 def	/@dictStackCountByLevel 32 dict def	/@dictStackLevel 0 def	 endsetglobalcurrentglobal true setglobaluserdict/Adobe_CoolType_GVMFonts known not	{userdict/Adobe_CoolType_GVMFonts 10 dict put}ifsetglobalcurrentglobal false setglobaluserdict/Adobe_CoolType_LVMFonts known not	{userdict/Adobe_CoolType_LVMFonts 10 dict put}ifsetglobal/ct_VMDictPut	{	dup gcheck{Adobe_CoolType_GVMFonts}{Adobe_CoolType_LVMFonts}ifelse	3 1 roll put	}bind def/ct_VMDictUndef	{	dup Adobe_CoolType_GVMFonts exch known		{Adobe_CoolType_GVMFonts exch undef}		{			dup Adobe_CoolType_LVMFonts exch known			{Adobe_CoolType_LVMFonts exch undef}			{pop}			ifelse		}ifelse	}bind def/ct_str1 1 string def/ct_xshow{	/_ct_na exch def	/_ct_i 0 def	currentpoint	/_ct_y exch def	/_ct_x exch def	{		pop pop		ct_str1 exch 0 exch put		ct_str1 show		{_ct_na _ct_i get}stopped 		{pop pop}		{			_ct_x _ct_y moveto			0			rmoveto		}		ifelse		/_ct_i _ct_i 1 add def		currentpoint		/_ct_y exch def		/_ct_x exch def	}	exch	@cshow}bind def/ct_yshow{	/_ct_na exch def	/_ct_i 0 def	currentpoint	/_ct_y exch def	/_ct_x exch def	{		pop pop		ct_str1 exch 0 exch put		ct_str1 show		{_ct_na _ct_i get}stopped 		{pop pop}		{			_ct_x _ct_y moveto			0 exch			rmoveto		}		ifelse		/_ct_i _ct_i 1 add def		currentpoint		/_ct_y exch def		/_ct_x exch def	}	exch	@cshow}bind def/ct_xyshow{	/_ct_na exch def	/_ct_i 0 def	currentpoint	/_ct_y exch def	/_ct_x exch def	{		pop pop		ct_str1 exch 0 exch put		ct_str1 show		{_ct_na _ct_i get}stopped 		{pop pop}		{			{_ct_na _ct_i 1 add get}stopped 			{pop pop pop}			{				_ct_x _ct_y moveto				rmoveto			}			ifelse		}		ifelse		/_ct_i _ct_i 2 add def		currentpoint		/_ct_y exch def		/_ct_x exch def	}	exch	@cshow}bind def/xsh{{@xshow}stopped{Adobe_CoolType_Data begin ct_xshow end}if}bind def/ysh{{@yshow}stopped{Adobe_CoolType_Data begin ct_yshow end}if}bind def/xysh{{@xyshow}stopped{Adobe_CoolType_Data begin ct_xyshow end}if}bind defcurrentglobal true setglobal/ct_T3Defs{/BuildChar{	1 index/Encoding get exch get	1 index/BuildGlyph get exec}bind def/BuildGlyph{	exch begin	GlyphProcs exch get exec	end}bind def}bind defsetglobal/@_SaveStackLevels	{	Adobe_CoolType_Data		begin		/@vmState currentglobal def false setglobal		@opStackCountByLevel		@opStackLevel		2 copy known not			{			2 copy			3 dict dup/args			7 index			5 add array put			put get			}			{			get dup/args get dup length 3 index lt				{				dup length 5 add array exch				1 index exch 0 exch putinterval				1 index exch/args exch put				}				{pop}			ifelse			}		ifelse			begin			count 1 sub			1 index lt				{pop count}			if			dup/argCount exch def			dup 0 gt				{				args exch 0 exch getinterval 			astore pop				}				{pop}			ifelse			count			/restCount exch def			end		/@opStackLevel @opStackLevel 1 add def		countdictstack 1 sub		@dictStackCountByLevel exch @dictStackLevel exch put		/@dictStackLevel @dictStackLevel 1 add def		@vmState setglobal		end	}bind def/@_RestoreStackLevels	{	Adobe_CoolType_Data		begin		/@opStackLevel @opStackLevel 1 sub def		@opStackCountByLevel @opStackLevel get			begin			count restCount sub dup 0 gt				{{pop}repeat}				{pop}			ifelse			args 0 argCount getinterval{}forall			end		/@dictStackLevel @dictStackLevel 1 sub def		@dictStackCountByLevel @dictStackLevel get		end	countdictstack exch sub dup 0 gt		{{end}repeat}		{pop}	ifelse	}bind def/@_PopStackLevels	{	Adobe_CoolType_Data		begin		/@opStackLevel @opStackLevel 1 sub def		/@dictStackLevel @dictStackLevel 1 sub def		end	}bind def/@Raise	{	exch cvx exch errordict exch get exec	stop	}bind def/@ReRaise	{	cvx $error/errorname get errordict exch get exec	stop	}bind def/@Stopped	{	0 @#Stopped	}bind def/@#Stopped	{	@_SaveStackLevels	stopped		{@_RestoreStackLevels true}		{@_PopStackLevels false}	ifelse	}bind def/@Arg	{	Adobe_CoolType_Data		begin		@opStackCountByLevel @opStackLevel 1 sub get		begin		args exch		argCount 1 sub exch sub get		end		end	}bind defcurrentglobal true setglobal/CTHasResourceForAllBug	Level2?		{		1 dict dup				/@shouldNotDisappearDictValue true def				Adobe_CoolType_Data exch/@shouldNotDisappearDict exch put				begin				count @_SaveStackLevels					{(*){pop stop}128 string/Category resourceforall}				stopped pop				@_RestoreStackLevels				currentdict Adobe_CoolType_Data/@shouldNotDisappearDict get dup 3 1 roll ne dup 3 1 roll					{						 /@shouldNotDisappearDictValue known								{										 {												end												currentdict 1 index eq													{pop exit}												if										 }									 loop								}						 if					}					{						 pop						 end					}				ifelse		}		{false}	ifelse	deftrue setglobal/CTHasResourceStatusBug	Level2?		{		mark			{/steveamerige/Category resourcestatus}		stopped			{cleartomark true}			{cleartomark currentglobal not}		ifelse		}		{false}	ifelse	defsetglobal/CTResourceStatus		{		mark 3 1 roll		/Category findresource			begin			({ResourceStatus}stopped)0()/SubFileDecode filter cvx exec				{cleartomark false}				{{3 2 roll pop true}{cleartomark false}ifelse}			ifelse			end		}bind def/CTWorkAroundBugs	{	Level2?		{		/cid_PreLoad/ProcSet resourcestatus			{			pop pop			currentglobal			mark				{				(*)					{					dup/CMap CTHasResourceStatusBug						{CTResourceStatus}						{resourcestatus}					ifelse						{						pop dup 0 eq exch 1 eq or							{							dup/CMap findresource gcheck setglobal							/CMap undefineresource							}							{							pop CTHasResourceForAllBug								{exit}								{stop}							ifelse							}						ifelse						}						{pop}					ifelse					}				128 string/CMap resourceforall				}			stopped				{cleartomark}			stopped pop			setglobal			}		if		}	if	}bind def/ds	{	Adobe_CoolType_Core		begin		CTWorkAroundBugs		/mo/moveto load def		/nf/newencodedfont load def		/msf{makefont setfont}bind def		/uf{dup undefinefont ct_VMDictUndef}bind def		/ur/undefineresource load def		/chp/charpath load def		/awsh/awidthshow load def		/wsh/widthshow load def		/ash/ashow load def		/@xshow/xshow load def		/@yshow/yshow load def		/@xyshow/xyshow load def		/@cshow/cshow load def		/sh/show load def		/rp/repeat load def		/.n/.notdef def		end		currentglobal false setglobal	 userdict/Adobe_CoolType_Data 2 copy known not		 {2 copy 10 dict put}		if		get		begin		/AddWidths? false def		/CC 0 def		/charcode 2 string def		/@opStackCountByLevel 32 dict def		/@opStackLevel 0 def		/@dictStackCountByLevel 32 dict def		/@dictStackLevel 0 def		/InVMFontsByCMap 10 dict def		/InVMDeepCopiedFonts 10 dict def		end		setglobal	}bind def/dt	{	currentdict Adobe_CoolType_Core eq		{end}	if	}bind def/ps	{	Adobe_CoolType_Core begin	Adobe_CoolType_GVMFonts begin	Adobe_CoolType_LVMFonts begin	SharedFontDirectory begin	}bind def/pt	{	end	end	end	end	}bind def/unload	{	systemdict/languagelevel known		{		systemdict/languagelevel get 2 ge			{			userdict/Adobe_CoolType_Core 2 copy known				{undef}				{pop pop}			ifelse			}		if		}	if	}bind def/ndf	{	1 index where		{pop pop pop}		{dup xcheck{bind}if def}	ifelse	}def/findfont systemdict	begin	userdict		begin		/globaldict where{/globaldict get begin}if			dup where pop exch get		/globaldict where{pop end}if		end	endAdobe_CoolType_Core_Defined	{/systemfindfont exch def}	{	/findfont 1 index def	/systemfindfont exch def	}ifelse/undefinefont	{pop}ndf/copyfont	{	currentglobal 3 1 roll	1 index gcheck setglobal	dup null eq{0}{dup length}ifelse	2 index length add 1 add dict		begin		exch			{			1 index/FID eq				{pop pop}				{def}			ifelse			}		forall		dup null eq			{pop}			{{def}forall}		ifelse		currentdict		end	exch setglobal	}bind def/copyarray	{	currentglobal exch	dup gcheck setglobal	dup length array copy	exch setglobal	}bind def/newencodedfont	{	currentglobal		{		SharedFontDirectory 3 index known			{SharedFontDirectory 3 index get/FontReferenced known}			{false}		ifelse		}		{		FontDirectory 3 index known			{FontDirectory 3 index get/FontReferenced known}			{			SharedFontDirectory 3 index known				{SharedFontDirectory 3 index get/FontReferenced known}				{false}			ifelse			}		ifelse		}	ifelse	dup		{		3 index findfont/FontReferenced get		2 index dup type/nametype eq			{findfont}		if ne			{pop false}		if		}	if	dup		{		1 index dup type/nametype eq			{findfont}		 if		dup/CharStrings known			{			/CharStrings get length			4 index findfont/CharStrings get length			ne				{				pop false				}			if 			}			{pop}			ifelse		}	if		{		pop		1 index findfont		/Encoding get exch		0 1 255			{2 copy get 3 index 3 1 roll put}		for		pop pop pop		}		{		currentglobal	 4 1 roll		dup type/nametype eq		 {findfont}	 if	 dup gcheck setglobal		dup dup maxlength 2 add dict			begin			exch				{				1 index/FID ne				2 index/Encoding ne and					{def}					{pop pop}				ifelse				}			forall			/FontReferenced exch def			/Encoding exch dup length array copy def			/FontName 1 index dup type/stringtype eq{cvn}if def dup			currentdict			end		definefont ct_VMDictPut		setglobal		}	ifelse	}bind def/SetSubstituteStrategy	{	$SubstituteFont		begin		dup type/dicttype ne			{0 dict}		if		currentdict/$Strategies known			{			exch $Strategies exch 			2 copy known				{				get				2 copy maxlength exch maxlength add dict					begin					{def}forall					{def}forall					currentdict					dup/$Init known						{dup/$Init get exec}					if					end				/$Strategy exch def				}				{pop pop pop}			ifelse			}			{pop pop}		ifelse		end	}bind def/scff	{	$SubstituteFont		begin		dup type/stringtype eq			{dup length exch}			{null}		ifelse		/$sname exch def		/$slen exch def		/$inVMIndex			$sname null eq				{				1 index $str cvs				dup length $slen sub $slen getinterval cvn				}				{$sname}			ifelse def		end		{findfont}	@Stopped		{		dup length 8 add string exch		1 index 0(BadFont:)putinterval		1 index exch 8 exch dup length string cvs putinterval cvn			{findfont}		@Stopped			{pop/Courier findfont}		if		}	if	$SubstituteFont		begin		/$sname null def		/$slen 0 def		/$inVMIndex null def		end	}bind def/isWidthsOnlyFont	{	dup/WidthsOnly known		{pop pop true}		{		dup/FDepVector known			{/FDepVector get{isWidthsOnlyFont dup{exit}if}forall}			{			dup/FDArray known				{/FDArray get{isWidthsOnlyFont dup{exit}if}forall}				{pop}			ifelse			}		ifelse		}	ifelse	}bind def/ct_StyleDicts 4 dict dup begin		 /Adobe-Japan1 4 dict dup begin					 Level2?								{								/Serif								/HeiseiMin-W3-83pv-RKSJ-H/Font resourcestatus								{pop pop/HeiseiMin-W3}								{							/CIDFont/Category resourcestatus							{								pop pop								/HeiseiMin-W3/CIDFont resourcestatus								{pop pop/HeiseiMin-W3}								{/Ryumin-Light}								ifelse							}							{/Ryumin-Light}							ifelse								}								ifelse								def								/SansSerif								/HeiseiKakuGo-W5-83pv-RKSJ-H/Font resourcestatus								{pop pop/HeiseiKakuGo-W5}								{							/CIDFont/Category resourcestatus							{								pop pop								/HeiseiKakuGo-W5/CIDFont resourcestatus								{pop pop/HeiseiKakuGo-W5}								{/GothicBBB-Medium}								ifelse							}							{/GothicBBB-Medium}							ifelse								}								ifelse								def								/HeiseiMaruGo-W4-83pv-RKSJ-H/Font resourcestatus								{pop pop/HeiseiMaruGo-W4}								{							/CIDFont/Category resourcestatus							{								pop pop								/HeiseiMaruGo-W4/CIDFont resourcestatus								{pop pop/HeiseiMaruGo-W4}								{									/Jun101-Light-RKSJ-H/Font resourcestatus									{pop pop/Jun101-Light}									{SansSerif}									ifelse								}								ifelse							}							{								/Jun101-Light-RKSJ-H/Font resourcestatus								{pop pop/Jun101-Light}								{SansSerif}								ifelse							}							ifelse								}								ifelse								/RoundSansSerif exch def								/Default Serif def								}								{								/Serif/Ryumin-Light def								/SansSerif/GothicBBB-Medium def								{								(fonts/Jun101-Light-83pv-RKSJ-H)status								}stopped								{pop}{										 {pop pop pop pop/Jun101-Light}										 {SansSerif}										 ifelse										 /RoundSansSerif exch def								}ifelse								/Default Serif def								}					 ifelse		 end		 def		 /Adobe-Korea1 4 dict dup begin					/Serif/HYSMyeongJo-Medium def					/SansSerif/HYGoThic-Medium def					/RoundSansSerif SansSerif def					/Default Serif def		 end		 def		 /Adobe-GB1 4 dict dup begin					/Serif/STSong-Light def					/SansSerif/STHeiti-Regular def					/RoundSansSerif SansSerif def					/Default Serif def		 end		 def		 /Adobe-CNS1 4 dict dup begin					/Serif/MKai-Medium def					/SansSerif/MHei-Medium def					/RoundSansSerif SansSerif def					/Default Serif def		 end		 defenddefLevel2?{currentglobal true setglobal}if/ct_BoldRomanWidthProc 	{	stringwidth 1 index 0 ne{exch .03 add exch}if setcharwidth	0 0	}bind def/ct_Type0WidthProc 	{	 dup stringwidth 0 0 moveto 	 2 index true charpath pathbbox	 0 -1 	 7 index 2 div .88 	 setcachedevice2	 pop	0 0	}bind def/ct_Type0WMode1WidthProc 	{	 dup stringwidth 	 pop 2 div neg -0.88	2 copy	moveto 	0 -1	 5 -1 roll true charpath pathbbox	 setcachedevice	}bind def/cHexEncoding[/c00/c01/c02/c03/c04/c05/c06/c07/c08/c09/c0A/c0B/c0C/c0D/c0E/c0F/c10/c11/c12/c13/c14/c15/c16/c17/c18/c19/c1A/c1B/c1C/c1D/c1E/c1F/c20/c21/c22/c23/c24/c25/c26/c27/c28/c29/c2A/c2B/c2C/c2D/c2E/c2F/c30/c31/c32/c33/c34/c35/c36/c37/c38/c39/c3A/c3B/c3C/c3D/c3E/c3F/c40/c41/c42/c43/c44/c45/c46/c47/c48/c49/c4A/c4B/c4C/c4D/c4E/c4F/c50/c51/c52/c53/c54/c55/c56/c57/c58/c59/c5A/c5B/c5C/c5D/c5E/c5F/c60/c61/c62/c63/c64/c65/c66/c67/c68/c69/c6A/c6B/c6C/c6D/c6E/c6F/c70/c71/c72/c73/c74/c75/c76/c77/c78/c79/c7A/c7B/c7C/c7D/c7E/c7F/c80/c81/c82/c83/c84/c85/c86/c87/c88/c89/c8A/c8B/c8C/c8D/c8E/c8F/c90/c91/c92/c93/c94/c95/c96/c97/c98/c99/c9A/c9B/c9C/c9D/c9E/c9F/cA0/cA1/cA2/cA3/cA4/cA5/cA6/cA7/cA8/cA9/cAA/cAB/cAC/cAD/cAE/cAF/cB0/cB1/cB2/cB3/cB4/cB5/cB6/cB7/cB8/cB9/cBA/cBB/cBC/cBD/cBE/cBF/cC0/cC1/cC2/cC3/cC4/cC5/cC6/cC7/cC8/cC9/cCA/cCB/cCC/cCD/cCE/cCF/cD0/cD1/cD2/cD3/cD4/cD5/cD6/cD7/cD8/cD9/cDA/cDB/cDC/cDD/cDE/cDF/cE0/cE1/cE2/cE3/cE4/cE5/cE6/cE7/cE8/cE9/cEA/cEB/cEC/cED/cEE/cEF/cF0/cF1/cF2/cF3/cF4/cF5/cF6/cF7/cF8/cF9/cFA/cFB/cFC/cFD/cFE/cFF]def/ct_BoldBaseFont 	 11 dict begin		/FontType 3 def		/FontMatrix[1 0 0 1 0 0]def		/FontBBox[0 0 1 1]def		/Encoding cHexEncoding def 		/_setwidthProc/ct_BoldRomanWidthProc load def		/_bcstr1 1 string def		/BuildChar		{			exch begin				_basefont setfont				_bcstr1 dup 0 4 -1 roll put				dup 				_setwidthProc				3 copy 				moveto								show				_basefonto setfont				moveto				show			end		}bind def		 currentdict	 end defsystemdict/composefont known{/ct_DefineIdentity-H{	/Identity-H/CMap resourcestatus	{		pop pop	}	{		/CIDInit/ProcSet findresource begin		 12 dict begin		 begincmap		 /CIDSystemInfo 3 dict dup begin			 /Registry(Adobe)def			 /Ordering(Identity)def			 /Supplement 0 def		 end def		 /CMapName/Identity-H def		 /CMapVersion 1.000 def		 /CMapType 1 def		 1 begincodespacerange		 <0000><FFFF>		 endcodespacerange		 1 begincidrange		 <0000><FFFF>0		 endcidrange		 endcmap		 CMapName currentdict/CMap defineresource pop		 end		 end	 }	 ifelse}def/ct_BoldBaseCIDFont 	 11 dict begin		/CIDFontType 1 def		/CIDFontName/ct_BoldBaseCIDFont def		/FontMatrix[1 0 0 1 0 0]def		/FontBBox[0 0 1 1]def		/_setwidthProc/ct_Type0WidthProc load def		/_bcstr2 2 string def		/BuildGlyph		{			exch begin		 				_basefont setfont				_bcstr2 1 2 index 256 mod put				_bcstr2 0 3 -1 roll 256 idiv put				_bcstr2 dup _setwidthProc		 				3 copy 				moveto				show				_basefonto setfont				moveto				show			end		}bind def		 currentdict	 end def}ifLevel2?{setglobal}if/ct_CopyFont{	{		1 index/FID ne 2 index/UniqueID ne and		{def}{pop pop}ifelse	}forall}bind def/ct_Type0CopyFont {	exch	dup length dict	begin	ct_CopyFont	[	exch	FDepVector 	{		 dup/FontType get 0 eq		{			1 index ct_Type0CopyFont 		/_ctType0 exch definefont		}		{		/_ctBaseFont exch		2 index exec		}		 ifelse 		 exch	}	forall 	pop	]					/FDepVector exch def	currentdict	end}bind def/ct_MakeBoldFont{	 dup/ct_SyntheticBold known	{		dup length 3 add dict begin 		ct_CopyFont 		/ct_StrokeWidth .03 0 FontMatrix idtransform pop def 		/ct_SyntheticBold true def		currentdict 		end 		definefont	}	{		dup dup length 3 add dict		begin			ct_CopyFont			/PaintType 2 def			/StrokeWidth .03 0 FontMatrix idtransform pop def			/dummybold currentdict		end		definefont		dup/FontType get dup 9 ge exch 11 le and 		{			ct_BoldBaseCIDFont			dup length 3 add dict copy begin			dup/CIDSystemInfo get/CIDSystemInfo exch def			ct_DefineIdentity-H			/_Type0Identity/Identity-H 3 -1 roll[exch]composefont			/_basefont exch def			/_Type0Identity/Identity-H 3 -1 roll[exch]composefont			/_basefonto exch def			currentdict			end			/CIDFont defineresource		}		{			ct_BoldBaseFont			dup length 3 add dict copy begin			/_basefont exch def			/_basefonto exch def			currentdict			end			definefont		}		ifelse	}	ifelse}bind def/ct_MakeBold{	1 index 	1 index	findfont	currentglobal 5 1 roll	dup gcheck setglobal		dup		 /FontType get 0 eq			{				dup/WMode known{dup/WMode get 1 eq}{false}ifelse				version length 4 ge				and					{version 0 4 getinterval cvi 2015 ge}					{true}				ifelse 					{/ct_Type0WidthProc}					{/ct_Type0WMode1WidthProc}				ifelse				ct_BoldBaseFont/_setwidthProc 3 -1 roll load put						{ct_MakeBoldFont}ct_Type0CopyFont definefont			}			{				dup/_fauxfont known not 1 index/SubstMaster known not and				{					 ct_BoldBaseFont/_setwidthProc /ct_BoldRomanWidthProc load put					 ct_MakeBoldFont 				}				{				2 index 2 index eq					{exch pop	}					{						dup length dict begin						ct_CopyFont						currentdict						end						definefont 					}				ifelse				}			ifelse			}		 ifelse		 pop pop pop		 setglobal}bind def/?str1 256 string def/?set	{	$SubstituteFont		begin		/$substituteFound false def		/$fontname 1 index def		/$doSmartSub false def		end	dup	 findfont	$SubstituteFont		begin		$substituteFound			{false}			{			dup/FontName known				{				dup/FontName get $fontname eq				1 index/DistillerFauxFont known not and				/currentdistillerparams where					{pop false 2 index isWidthsOnlyFont not and}				if				}				{false}			ifelse			}		ifelse		exch pop		/$doSmartSub true def		end		{		5 1 roll pop pop pop pop		findfont		}		{		1 index		findfont		dup/FontType get 3 eq		{			6 1 roll pop pop pop pop pop false		}		{pop true}		ifelse		{		$SubstituteFont		begin		pop pop		/$styleArray 1 index def		/$regOrdering 2 index def		pop pop		0 1 $styleArray length 1 sub		{			$styleArray exch get			ct_StyleDicts $regOrdering			2 copy known			{				get				exch 2 copy known not				{pop/Default}				if				get				dup type/nametype eq				{				?str1 cvs length dup 1 add exch				?str1 exch(-)putinterval				exch dup length exch ?str1 exch 3 index exch putinterval				add ?str1 exch 0 exch getinterval cvn				}				{				pop pop/Unknown				}				ifelse			}			{				pop pop pop pop/Unknown			}			ifelse		}		for		end		findfont 		}if		}	ifelse	currentglobal false setglobal 3 1 roll	null copyfont definefont pop	setglobal	}bind defsetpackinguserdict/$SubstituteFont 25 dict put1 dict	begin	/SubstituteFont		dup $error exch 2 copy known			{get}			{pop pop{pop/Courier}bind}		ifelse def	/currentdistillerparams where dup		{		pop pop		currentdistillerparams/CannotEmbedFontPolicy 2 copy known			{get/Error eq}			{pop pop false}		ifelse		}	if not		{		countdictstack array dictstack 0 get			begin			userdict				begin				$SubstituteFont					begin					/$str 128 string def					/$fontpat 128 string def					/$slen 0 def					/$sname null def					/$match false def					/$fontname null def					/$substituteFound false def					/$inVMIndex null def					/$doSmartSub true def					/$depth 0 def					/$fontname null def					/$italicangle 26.5 def					/$dstack null def					/$Strategies 10 dict dup						begin						/$Type3Underprint							{							currentglobal exch false setglobal							11 dict								begin								/UseFont exch									$WMode 0 ne										{										dup length dict copy										dup/WMode $WMode put										/UseFont exch definefont										}									if def								/FontName $fontname dup type/stringtype eq{cvn}if def								/FontType 3 def								/FontMatrix[.001 0 0 .001 0 0]def								/Encoding 256 array dup 0 1 255{/.notdef put dup}for pop def								/FontBBox[0 0 0 0]def								/CCInfo 7 dict dup									begin									/cc null def									/x 0 def									/y 0 def									end def								/BuildChar									{									exch										begin										CCInfo											begin											1 string dup 0 3 index put exch pop											/cc exch def											UseFont 1000 scalefont setfont											cc stringwidth/y exch def/x exch def											x y setcharwidth											$SubstituteFont/$Strategy get/$Underprint get exec											0 0 moveto cc show											x y moveto											end										end									}bind def								currentdict								end							exch setglobal							}bind def						/$GetaTint							2 dict dup								begin								/$BuildFont									{									dup/WMode known										{dup/WMode get}										{0}									ifelse									/$WMode exch def									$fontname exch									dup/FontName known										{										dup/FontName get										dup type/stringtype eq{cvn}if										}										{/unnamedfont}									ifelse									exch									Adobe_CoolType_Data/InVMDeepCopiedFonts get									1 index/FontName get known										{										pop										Adobe_CoolType_Data/InVMDeepCopiedFonts get										1 index get										null copyfont										}										{$deepcopyfont}									ifelse									exch 1 index exch/FontBasedOn exch put									dup/FontName $fontname dup type/stringtype eq{cvn}if put									definefont									Adobe_CoolType_Data/InVMDeepCopiedFonts get										begin										dup/FontBasedOn get 1 index def										end									}bind def								/$Underprint									{									gsave									x abs y abs gt										{/y 1000 def}										{/x -1000 def 500 120 translate}									ifelse									Level2?										{										[/Separation(All)/DeviceCMYK{0 0 0 1 pop}]										setcolorspace										}										{0 setgray}									ifelse									10 setlinewidth									x .8 mul									[7 3]										{										y mul 8 div 120 sub x 10 div exch moveto										0 y 4 div neg rlineto										dup 0 rlineto										0 y 4 div rlineto										closepath										gsave										Level2?											{.2 setcolor}											{.8 setgray}										ifelse										fill grestore										stroke										}									forall									pop									grestore									}bind def								end def						/$Oblique							1 dict dup								begin								/$BuildFont									{									currentglobal exch dup gcheck setglobal									null copyfont										begin										/FontBasedOn										currentdict/FontName known											{											FontName											dup type/stringtype eq{cvn}if											}											{/unnamedfont}										ifelse										def										/FontName $fontname dup type/stringtype eq{cvn}if def										/currentdistillerparams where											{pop}											{											/FontInfo currentdict/FontInfo known												{FontInfo null copyfont}												{2 dict}											ifelse											dup												begin												/ItalicAngle $italicangle def												/FontMatrix FontMatrix												[1 0 ItalicAngle dup sin exch cos div 1 0 0]												matrix concatmatrix readonly												end											4 2 roll def											def											}										ifelse										FontName currentdict										end									definefont									exch setglobal									}bind def								end def						/$None							1 dict dup								begin								/$BuildFont{}bind def								end def						end def					/$Oblique SetSubstituteStrategy					/$findfontByEnum						{						dup type/stringtype eq{cvn}if						dup/$fontname exch def						$sname null eq							{$str cvs dup length $slen sub $slen getinterval}							{pop $sname}						ifelse						$fontpat dup 0(fonts/*)putinterval exch 7 exch putinterval						/$match false def						$SubstituteFont/$dstack countdictstack array dictstack put						mark							{							$fontpat 0 $slen 7 add getinterval								{/$match exch def exit}							$str filenameforall							}						stopped							{							cleardictstack							currentdict							true							$SubstituteFont/$dstack get								{								exch									{									1 index eq										{pop false}										{true}									ifelse									}									{begin false}								ifelse								}							forall							pop							}						if						cleartomark						/$slen 0 def						$match false ne							{$match(fonts/)anchorsearch pop pop cvn}							{/Courier}						ifelse						}bind def					/$ROS 1 dict dup						begin						/Adobe 4 dict dup							begin							/Japan1 [/Ryumin-Light/HeiseiMin-W3										 /GothicBBB-Medium/HeiseiKakuGo-W5										 /HeiseiMaruGo-W4/Jun101-Light]def							/Korea1 [/HYSMyeongJo-Medium/HYGoThic-Medium]def							/GB1	 [/STSong-Light/STHeiti-Regular]def							/CNS1	[/MKai-Medium/MHei-Medium]def							end def						end def					/$cmapname null def					/$deepcopyfont						{						dup/FontType get 0 eq							{							1 dict dup/FontName/copied put copyfont								begin								/FDepVector FDepVector copyarray								0 1 2 index length 1 sub									{									2 copy get $deepcopyfont									dup/FontName/copied put									/copied exch definefont									3 copy put pop pop									}								for								def								currentdict								end							}							{$Strategies/$Type3Underprint get exec}						ifelse						}bind def					/$buildfontname						{						dup/CIDFont findresource/CIDSystemInfo get							begin							Registry length Ordering length Supplement 8 string cvs							3 copy length 2 add add add string							dup 5 1 roll dup 0 Registry putinterval							dup 4 index(-)putinterval							dup 4 index 1 add Ordering putinterval							4 2 roll add 1 add 2 copy(-)putinterval							end						1 add 2 copy 0 exch getinterval $cmapname $fontpat cvs exch						anchorsearch							{pop pop 3 2 roll putinterval cvn/$cmapname exch def}							{pop pop pop pop pop}						ifelse						length						$str 1 index(-)putinterval 1 add						$str 1 index $cmapname $fontpat cvs putinterval						$cmapname length add						$str exch 0 exch getinterval cvn						}bind def					/$findfontByROS						{						/$fontname exch def						$ROS Registry 2 copy known							{							get Ordering 2 copy known								{get}								{pop pop[]}							ifelse							}							{pop pop[]}						ifelse						false exch							{							dup/CIDFont resourcestatus								{								pop pop								save								1 index/CIDFont findresource								dup/WidthsOnly known									{dup/WidthsOnly get}									{false}								ifelse								exch pop								exch restore									{pop}									{exch pop true exit}								ifelse								}								{pop}							ifelse							}						forall							{$str cvs $buildfontname}							{							false(*)								{								save exch								dup/CIDFont findresource								dup/WidthsOnly known									{dup/WidthsOnly get not}									{true}								ifelse								exch/CIDSystemInfo get								dup/Registry get Registry eq								exch/Ordering get Ordering eq and and									{exch restore exch pop true exit}									{pop restore}								ifelse								}							$str/CIDFont resourceforall								{$buildfontname}								{$fontname $findfontByEnum}							ifelse							}						ifelse						}bind def					end				end				currentdict/$error known currentdict/languagelevel known and dup					{pop $error/SubstituteFont known}				if				dup					{$error}					{Adobe_CoolType_Core}				ifelse				begin					{					/SubstituteFont					/CMap/Category resourcestatus						{						pop pop						{						$SubstituteFont							begin							/$substituteFound true def							dup length $slen gt							$sname null ne or							$slen 0 gt and								{								$sname null eq									{dup $str cvs dup length $slen sub $slen getinterval cvn}									{$sname}								ifelse								Adobe_CoolType_Data/InVMFontsByCMap get								1 index 2 copy known									{									get									false exch										{										pop										currentglobal											{											GlobalFontDirectory 1 index known												{exch pop true exit}												{pop}											ifelse											}											{											FontDirectory 1 index known												{exch pop true exit}												{												GlobalFontDirectory 1 index known													{exch pop true exit}													{pop}												ifelse												}											ifelse											}										ifelse										}									forall									}									{pop pop false}								ifelse									{									exch pop exch pop									}									{									dup/CMap resourcestatus										{										pop pop										dup/$cmapname exch def										/CMap findresource/CIDSystemInfo get{def}forall										$findfontByROS										}										{										128 string cvs										dup(-)search											{											3 1 roll search												{												3 1 roll pop													{dup cvi}												stopped													{pop pop pop pop pop $findfontByEnum}													{													4 2 roll pop pop													exch length													exch													2 index length													2 index													sub													exch 1 sub -1 0														{														$str cvs dup length														4 index														0														4 index														4 3 roll add														getinterval														exch 1 index exch 3 index exch														putinterval														dup/CMap resourcestatus															{															pop pop															4 1 roll pop pop pop															dup/$cmapname exch def															/CMap findresource/CIDSystemInfo get{def}forall															$findfontByROS															true exit															}															{pop}														ifelse														}													for													dup type/booleantype eq														{pop}														{pop pop pop $findfontByEnum}													ifelse													}												ifelse												}												{pop pop pop $findfontByEnum}											ifelse											}											{pop pop $findfontByEnum}										ifelse										}									ifelse									}								ifelse								}								{//SubstituteFont exec}							ifelse							/$slen 0 def							end						}						}						{						{						$SubstituteFont							begin							/$substituteFound true def							dup length $slen gt							$sname null ne or							$slen 0 gt and								{$findfontByEnum}								{//SubstituteFont exec}							ifelse							end						}						}					ifelse					bind readonly def					Adobe_CoolType_Core/scfindfont/systemfindfont load put					}					{					/scfindfont						{						$SubstituteFont							begin							dup systemfindfont							dup/FontName known								{dup/FontName get dup 3 index ne}								{/noname true}							ifelse							dup								{								/$origfontnamefound 2 index def								/$origfontname 4 index def/$substituteFound true def								}							if							exch pop								{								$slen 0 gt								$sname null ne								3 index length $slen gt or and									{									pop dup $findfontByEnum findfont									dup maxlength 1 add dict										begin											{1 index/FID eq{pop pop}{def}ifelse}										forall										currentdict										end									definefont									dup/FontName known{dup/FontName get}{null}ifelse									$origfontnamefound ne										{										$origfontname $str cvs print										( substitution revised, using )print										dup/FontName known											{dup/FontName get}{(unspecified font)}										ifelse										$str cvs print(.\n)print										}									if									}									{exch pop}								ifelse								}								{exch pop}							ifelse							end						}bind def					}				ifelse				end			end		Adobe_CoolType_Core_Defined not			{			Adobe_CoolType_Core/findfont				{				$SubstituteFont					begin					$depth 0 eq						{						/$fontname 1 index dup type/stringtype ne{$str cvs}if def						/$substituteFound false def						}					if					/$depth $depth 1 add def					end				scfindfont				$SubstituteFont					begin					/$depth $depth 1 sub def					$substituteFound $depth 0 eq and						{						$inVMIndex null ne							{dup $inVMIndex $AddInVMFont}						if						$doSmartSub							{							currentdict/$Strategy known								{$Strategy/$BuildFont get exec}							if							}						if						}					if					end				}bind put			}		if		}	if	end/$AddInVMFont	{	exch/FontName 2 copy known		{		get		1 dict dup begin exch 1 index gcheck def end exch		Adobe_CoolType_Data/InVMFontsByCMap get exch		$DictAdd		}		{pop pop pop}	ifelse	}bind def/$DictAdd	{	2 copy known not		{2 copy 4 index length dict put}	if	Level2? not		{		2 copy get dup maxlength exch length 4 index length add lt		2 copy get dup length 4 index length add exch maxlength 1 index lt			{			2 mul dict				begin				2 copy get{forall}def				2 copy currentdict put				end			}			{pop}		ifelse		}	if	get		begin			{def}		forall		end	}bind defendend%%EndResourcecurrentglobal true setglobal%%BeginResource: procset Adobe_CoolType_Utility_MAKEOCF 1.23 0%%Copyright: Copyright 1987-2006 Adobe Systems Incorporated.%%Version: 1.23 0systemdict/languagelevel known dup	{currentglobal false setglobal}	{false}ifelseexchuserdict/Adobe_CoolType_Utility 2 copy known	{2 copy get dup maxlength 27 add dict copy}	{27 dict}ifelse putAdobe_CoolType_Utility	begin	/@eexecStartData		 <BAB431EA07F209EB8C4348311481D9D3F76E3D15246555577D87BC510ED54E		 118C39697FA9F6DB58128E60EB8A12FA24D7CDD2FA94D221FA9EC8DA3E5E6A1C		 4ACECC8C2D39C54E7C946031DD156C3A6B4A09AD29E1867A>def	/@recognizeCIDFont null def	/ct_Level2? exch def	/ct_Clone? 1183615869 internaldict dup			/CCRun known not			exch/eCCRun known not			ct_Level2? and or defct_Level2?	{globaldict begin currentglobal true setglobal}if	/ct_AddStdCIDMap		ct_Level2?			{{				mark				Adobe_CoolType_Utility/@recognizeCIDFont currentdict put					{					((Hex)57 StartData					 0615 1e27 2c39 1c60 d8a8 cc31 fe2b f6e0					 7aa3 e541 e21c 60d8 a8c9 c3d0 6d9e 1c60					 d8a8 c9c2 02d7 9a1c 60d8 a849 1c60 d8a8					 cc36 74f4 1144 b13b 77)0()/SubFileDecode filter cvx exec					}				stopped					{					 cleartomark					 Adobe_CoolType_Utility/@recognizeCIDFont get					 countdictstack dup array dictstack					 exch 1 sub -1 0						 {						 2 copy get 3 index eq								{1 index length exch sub 1 sub{end}repeat exit}								{pop}						 ifelse						 }					 for					 pop pop					 Adobe_CoolType_Utility/@eexecStartData get eexec					}					{cleartomark}				ifelse			}}			{{				Adobe_CoolType_Utility/@eexecStartData get eexec			}}		ifelse bind defuserdict/cid_extensions knowndup{cid_extensions/cid_UpdateDB known and}if	{	 cid_extensions	 begin	/cid_GetCIDSystemInfo		{		 1 index type/stringtype eq			{exch cvn exch}		 if		 cid_extensions			 begin			 dup load 2 index known				{				 2 copy				 cid_GetStatusInfo				 dup null ne					{					 1 index load					 3 index get					 dup null eq						 {pop pop cid_UpdateDB}						 {						 exch						 1 index/Created get eq							 {exch pop exch pop}							 {pop cid_UpdateDB}						 ifelse						 }					 ifelse					}					{pop cid_UpdateDB}				 ifelse				}				{cid_UpdateDB}			 ifelse			 end		}bind def	 end	}ifct_Level2?	{end setglobal}if	/ct_UseNativeCapability? systemdict/composefont known def	/ct_MakeOCF 35 dict def	/ct_Vars 25 dict def	/ct_GlyphDirProcs 6 dict def	/ct_BuildCharDict 15 dict dup		begin		/charcode 2 string def		/dst_string 1500 string def		/nullstring()def		/usewidths? true def		end def	ct_Level2?{setglobal}{pop}ifelse	ct_GlyphDirProcs		begin		/GetGlyphDirectory			{			systemdict/languagelevel known				{pop/CIDFont findresource/GlyphDirectory get}				{				1 index/CIDFont findresource/GlyphDirectory				get dup type/dicttype eq					{					dup dup maxlength exch length sub 2 index lt						{						dup length 2 index add dict copy 2 index						/CIDFont findresource/GlyphDirectory 2 index put						}					if					}				if				exch pop exch pop				}			ifelse			+			}def		/+			{			systemdict/languagelevel known				{				currentglobal false setglobal				3 dict begin					/vm exch def				}				{1 dict begin}			ifelse			/$ exch def			systemdict/languagelevel known				{				vm setglobal				/gvm currentglobal def				$ gcheck setglobal				}			if			?{$ begin}if			}def		/?{$ type/dicttype eq}def		/|{			userdict/Adobe_CoolType_Data known				{			Adobe_CoolType_Data/AddWidths? known				{				 currentdict Adobe_CoolType_Data					begin					 begin						AddWidths?								{								Adobe_CoolType_Data/CC 3 index put								?{def}{$ 3 1 roll put}ifelse								CC charcode exch 1 index 0 2 index 256 idiv put								1 index exch 1 exch 256 mod put								stringwidth 2 array astore								currentfont/Widths get exch CC exch put								}								{?{def}{$ 3 1 roll put}ifelse}							ifelse					end				end				}				{?{def}{$ 3 1 roll put}ifelse}	ifelse				}				{?{def}{$ 3 1 roll put}ifelse}			ifelse			}def		/!			{			?{end}if			systemdict/languagelevel known				{gvm setglobal}			if			end			}def		/:{string currentfile exch readstring pop}executeonly def		end	ct_MakeOCF		begin		/ct_cHexEncoding		[/c00/c01/c02/c03/c04/c05/c06/c07/c08/c09/c0A/c0B/c0C/c0D/c0E/c0F/c10/c11/c12		/c13/c14/c15/c16/c17/c18/c19/c1A/c1B/c1C/c1D/c1E/c1F/c20/c21/c22/c23/c24/c25		/c26/c27/c28/c29/c2A/c2B/c2C/c2D/c2E/c2F/c30/c31/c32/c33/c34/c35/c36/c37/c38		/c39/c3A/c3B/c3C/c3D/c3E/c3F/c40/c41/c42/c43/c44/c45/c46/c47/c48/c49/c4A/c4B		/c4C/c4D/c4E/c4F/c50/c51/c52/c53/c54/c55/c56/c57/c58/c59/c5A/c5B/c5C/c5D/c5E		/c5F/c60/c61/c62/c63/c64/c65/c66/c67/c68/c69/c6A/c6B/c6C/c6D/c6E/c6F/c70/c71		/c72/c73/c74/c75/c76/c77/c78/c79/c7A/c7B/c7C/c7D/c7E/c7F/c80/c81/c82/c83/c84		/c85/c86/c87/c88/c89/c8A/c8B/c8C/c8D/c8E/c8F/c90/c91/c92/c93/c94/c95/c96/c97		/c98/c99/c9A/c9B/c9C/c9D/c9E/c9F/cA0/cA1/cA2/cA3/cA4/cA5/cA6/cA7/cA8/cA9/cAA		/cAB/cAC/cAD/cAE/cAF/cB0/cB1/cB2/cB3/cB4/cB5/cB6/cB7/cB8/cB9/cBA/cBB/cBC/cBD		/cBE/cBF/cC0/cC1/cC2/cC3/cC4/cC5/cC6/cC7/cC8/cC9/cCA/cCB/cCC/cCD/cCE/cCF/cD0		/cD1/cD2/cD3/cD4/cD5/cD6/cD7/cD8/cD9/cDA/cDB/cDC/cDD/cDE/cDF/cE0/cE1/cE2/cE3		/cE4/cE5/cE6/cE7/cE8/cE9/cEA/cEB/cEC/cED/cEE/cEF/cF0/cF1/cF2/cF3/cF4/cF5/cF6		/cF7/cF8/cF9/cFA/cFB/cFC/cFD/cFE/cFF]def		/ct_CID_STR_SIZE 8000 def		/ct_mkocfStr100 100 string def		/ct_defaultFontMtx[.001 0 0 .001 0 0]def		/ct_1000Mtx[1000 0 0 1000 0 0]def		/ct_raise{exch cvx exch errordict exch get exec stop}bind def		/ct_reraise			{cvx $error/errorname get(Error: )print dup(						 )cvs print					errordict exch get exec stop			}bind def		/ct_cvnsi			{			1 index add 1 sub 1 exch 0 4 1 roll				{				2 index exch get				exch 8 bitshift				add				}			for			exch pop			}bind def		/ct_GetInterval			{			Adobe_CoolType_Utility/ct_BuildCharDict get				begin				/dst_index 0 def				dup dst_string length gt					{dup string/dst_string exch def}				if				1 index ct_CID_STR_SIZE idiv				/arrayIndex exch def				2 index arrayIndex get				2 index				arrayIndex ct_CID_STR_SIZE mul				sub					{					dup 3 index add 2 index length le						{						2 index getinterval						dst_string dst_index 2 index putinterval						length dst_index add/dst_index exch def						exit						}						{						1 index length 1 index sub						dup 4 1 roll						getinterval						dst_string dst_index 2 index putinterval						pop dup dst_index add/dst_index exch def						sub						/arrayIndex arrayIndex 1 add def						2 index dup length arrayIndex gt							 {arrayIndex get}							 {							 pop							 exit							 }						ifelse						0						}					ifelse					}				loop				pop pop pop				dst_string 0 dst_index getinterval				end			}bind def		ct_Level2?			{			/ct_resourcestatus			currentglobal mark true setglobal				{/unknowninstancename/Category resourcestatus}			stopped				{cleartomark setglobal true}				{cleartomark currentglobal not exch setglobal}			ifelse				{					{					mark 3 1 roll/Category findresource						begin						ct_Vars/vm currentglobal put						({ResourceStatus}stopped)0()/SubFileDecode filter cvx exec							{cleartomark false}							{{3 2 roll pop true}{cleartomark false}ifelse}						ifelse						ct_Vars/vm get setglobal						end					}				}				{{resourcestatus}}			ifelse bind def			/CIDFont/Category ct_resourcestatus				{pop pop}				{				currentglobal true setglobal				/Generic/Category findresource				dup length dict copy				dup/InstanceType/dicttype put				/CIDFont exch/Category defineresource pop				setglobal				}			ifelse			ct_UseNativeCapability?				{				/CIDInit/ProcSet findresource begin				12 dict begin				begincmap				/CIDSystemInfo 3 dict dup begin				 /Registry(Adobe)def				 /Ordering(Identity)def				 /Supplement 0 def				end def				/CMapName/Identity-H def				/CMapVersion 1.000 def				/CMapType 1 def				1 begincodespacerange				<0000><FFFF>				endcodespacerange				1 begincidrange				<0000><FFFF>0				endcidrange				endcmap				CMapName currentdict/CMap defineresource pop				end				end				}			if			}			{			/ct_Category 2 dict begin			/CIDFont 10 dict def			/ProcSet	2 dict def			currentdict			end			def			/defineresource				{				ct_Category 1 index 2 copy known					{					get					dup dup maxlength exch length eq						{						dup length 10 add dict copy						ct_Category 2 index 2 index put						}					if					3 index 3 index put					pop exch pop					}					{pop pop/defineresource/undefined ct_raise}				ifelse				}bind def			/findresource				{				ct_Category 1 index 2 copy known					{					get					2 index 2 copy known						{get 3 1 roll pop pop}						{pop pop/findresource/undefinedresource ct_raise}					ifelse					}					{pop pop/findresource/undefined ct_raise}				ifelse				}bind def			/resourcestatus				{				ct_Category 1 index 2 copy known					{					get					2 index known					exch pop exch pop						{						0 -1 true						}						{						false						}					ifelse					}					{pop pop/findresource/undefined ct_raise}				ifelse				}bind def			/ct_resourcestatus/resourcestatus load def			}		ifelse		/ct_CIDInit 2 dict			begin			/ct_cidfont_stream_init				{					{					dup(Binary)eq						{						pop						null						currentfile						ct_Level2?							{								{cid_BYTE_COUNT()/SubFileDecode filter}							stopped								{pop pop pop}							if							}						if						/readstring load						exit						}					if					dup(Hex)eq						{						pop						currentfile						ct_Level2?							{								{null exch/ASCIIHexDecode filter/readstring}							stopped								{pop exch pop(>)exch/readhexstring}							if							}							{(>)exch/readhexstring}						ifelse						load						exit						}					if					/StartData/typecheck ct_raise					}				loop				cid_BYTE_COUNT ct_CID_STR_SIZE le					{					2 copy cid_BYTE_COUNT string exch exec					pop					1 array dup					3 -1 roll					0 exch put					}					{					cid_BYTE_COUNT ct_CID_STR_SIZE div ceiling cvi					dup array exch 2 sub 0 exch 1 exch						{						2 copy						5 index						ct_CID_STR_SIZE						string						6 index exec						pop						put						pop						}					for					2 index					cid_BYTE_COUNT ct_CID_STR_SIZE mod string					3 index exec					pop					1 index exch					1 index length 1 sub					exch put					}				ifelse				cid_CIDFONT exch/GlyphData exch put				2 index null eq					{					pop pop pop					}					{					pop/readstring load					1 string exch						{						3 copy exec						pop						dup length 0 eq							{							pop pop pop pop pop							true exit							}						if						4 index						eq							{							pop pop pop pop							false exit							}						if						}					loop					pop					}				ifelse				}bind def			/StartData				{				mark					{					currentdict					dup/FDArray get 0 get/FontMatrix get					0 get 0.001 eq						{						dup/CDevProc known not							{							/CDevProc 1183615869 internaldict/stdCDevProc 2 copy known								{get}								{								pop pop								{pop pop pop pop pop 0 -1000 7 index 2 div 880}								}							ifelse							def							}						if						}						{						/CDevProc							{							 pop pop pop pop pop							 0							 1 cid_temp/cid_CIDFONT get							/FDArray get 0 get							/FontMatrix get 0 get div							 7 index 2 div							 1 index 0.88 mul							}def						}					ifelse					/cid_temp 15 dict def					cid_temp						begin						/cid_CIDFONT exch def						3 copy pop						dup/cid_BYTE_COUNT exch def 0 gt							{							ct_cidfont_stream_init							FDArray								{								/Private get								dup/SubrMapOffset known									{									begin									/Subrs SubrCount array def									Subrs									SubrMapOffset									SubrCount									SDBytes									ct_Level2?										{										currentdict dup/SubrMapOffset undef										dup/SubrCount undef										/SDBytes undef										}									if									end									/cid_SD_BYTES exch def									/cid_SUBR_COUNT exch def									/cid_SUBR_MAP_OFFSET exch def									/cid_SUBRS exch def									cid_SUBR_COUNT 0 gt										{										GlyphData cid_SUBR_MAP_OFFSET cid_SD_BYTES ct_GetInterval										0 cid_SD_BYTES ct_cvnsi										0 1 cid_SUBR_COUNT 1 sub											{											exch 1 index											1 add											cid_SD_BYTES mul cid_SUBR_MAP_OFFSET add											GlyphData exch cid_SD_BYTES ct_GetInterval											0 cid_SD_BYTES ct_cvnsi											cid_SUBRS 4 2 roll											GlyphData exch											4 index											1 index											sub											ct_GetInterval											dup length string copy put											}										for										pop										}									if									}									{pop}								ifelse								}							forall							}						if						cleartomark pop pop						end					CIDFontName currentdict/CIDFont defineresource pop					end end					}				stopped					{cleartomark/StartData ct_reraise}				if				}bind def			currentdict			end def		/ct_saveCIDInit			{			/CIDInit/ProcSet ct_resourcestatus				{true}				{/CIDInitC/ProcSet ct_resourcestatus}			ifelse				{				pop pop				/CIDInit/ProcSet findresource				ct_UseNativeCapability?					{pop null}					{/CIDInit ct_CIDInit/ProcSet defineresource pop}				ifelse				}				{/CIDInit ct_CIDInit/ProcSet defineresource pop null}			ifelse			ct_Vars exch/ct_oldCIDInit exch put			}bind def		/ct_restoreCIDInit			{			ct_Vars/ct_oldCIDInit get dup null ne				{/CIDInit exch/ProcSet defineresource pop}				{pop}			ifelse			}bind def		/ct_BuildCharSetUp			{			1 index				begin				CIDFont					begin					Adobe_CoolType_Utility/ct_BuildCharDict get						begin						/ct_dfCharCode exch def						/ct_dfDict exch def						CIDFirstByte ct_dfCharCode add						dup CIDCount ge							{pop 0}						if						/cid exch def							{							GlyphDirectory cid 2 copy known								{get}								{pop pop nullstring}							ifelse							dup length FDBytes sub 0 gt								{								dup								FDBytes 0 ne									{0 FDBytes ct_cvnsi}									{pop 0}								ifelse								/fdIndex exch def								dup length FDBytes sub FDBytes exch getinterval								/charstring exch def								exit								}								{								pop								cid 0 eq									{/charstring nullstring def exit}								if								/cid 0 def								}							ifelse							}						loop			}def		/ct_SetCacheDevice			{			0 0 moveto			dup stringwidth			3 -1 roll			true charpath			pathbbox			0 -1000			7 index 2 div 880			setcachedevice2			0 0 moveto			}def		/ct_CloneSetCacheProc			{			1 eq				{				stringwidth				pop -2 div -880				0 -1000 setcharwidth				moveto				}				{				usewidths?					{					currentfont/Widths get cid					2 copy known						{get exch pop aload pop}						{pop pop stringwidth}					ifelse					}					{stringwidth}				ifelse				setcharwidth				0 0 moveto				}			ifelse			}def		/ct_Type3ShowCharString			{			ct_FDDict fdIndex 2 copy known				{get}				{				currentglobal 3 1 roll				1 index gcheck setglobal				ct_Type1FontTemplate dup maxlength dict copy					begin					FDArray fdIndex get					dup/FontMatrix 2 copy known						{get}						{pop pop ct_defaultFontMtx}					ifelse					/FontMatrix exch dup length array copy def					/Private get					/Private exch def					/Widths rootfont/Widths get def					/CharStrings 1 dict dup/.notdef						<d841272cf18f54fc13>dup length string copy put def					currentdict					end				/ct_Type1Font exch definefont				dup 5 1 roll put				setglobal				}			ifelse			dup/CharStrings get 1 index/Encoding get			ct_dfCharCode get charstring put			rootfont/WMode 2 copy known				{get}				{pop pop 0}			ifelse			exch			1000 scalefont setfont			ct_str1 0 ct_dfCharCode put			ct_str1 exch ct_dfSetCacheProc			ct_SyntheticBold				{				currentpoint				ct_str1 show				newpath				moveto				ct_str1 true charpath				ct_StrokeWidth setlinewidth				stroke				}				{ct_str1 show}			ifelse			}def		/ct_Type4ShowCharString			{			ct_dfDict ct_dfCharCode charstring			FDArray fdIndex get			dup/FontMatrix get dup ct_defaultFontMtx ct_matrixeq not				{ct_1000Mtx matrix concatmatrix concat}				{pop}			ifelse			/Private get			Adobe_CoolType_Utility/ct_Level2? get not				{				ct_dfDict/Private				3 -1 roll					{put}				1183615869 internaldict/superexec get exec				}			if			1183615869 internaldict			Adobe_CoolType_Utility/ct_Level2? get				{1 index}				{3 index/Private get mark 6 1 roll}			ifelse			dup/RunInt known				{/RunInt get}				{pop/CCRun}			ifelse			get exec			Adobe_CoolType_Utility/ct_Level2? get not				{cleartomark}			if			}bind def		/ct_BuildCharIncremental			{				{				Adobe_CoolType_Utility/ct_MakeOCF get begin				ct_BuildCharSetUp				ct_ShowCharString				}			stopped				{stop}			if			end			end			end			end			}bind def		/BaseFontNameStr(BF00)def		/ct_Type1FontTemplate 14 dict			begin			/FontType 1 def			/FontMatrix [0.001 0 0 0.001 0 0]def			/FontBBox [-250 -250 1250 1250]def			/Encoding ct_cHexEncoding def			/PaintType 0 def			currentdict			end def		/BaseFontTemplate 11 dict			begin			/FontMatrix [0.001 0 0 0.001 0 0]def			/FontBBox [-250 -250 1250 1250]def			/Encoding ct_cHexEncoding def			/BuildChar/ct_BuildCharIncremental load def			ct_Clone?				{				/FontType 3 def				/ct_ShowCharString/ct_Type3ShowCharString load def				/ct_dfSetCacheProc/ct_CloneSetCacheProc load def				/ct_SyntheticBold false def				/ct_StrokeWidth 1 def				}				{				/FontType 4 def				/Private 1 dict dup/lenIV 4 put def				/CharStrings 1 dict dup/.notdef<d841272cf18f54fc13>put def				/PaintType 0 def				/ct_ShowCharString/ct_Type4ShowCharString load def				}			ifelse			/ct_str1 1 string def			currentdict			end def		/BaseFontDictSize BaseFontTemplate length 5 add def		/ct_matrixeq			{			true 0 1 5				{				dup 4 index exch get exch 3 index exch get eq and				dup not					{exit}				if				}			for			exch pop exch pop			}bind def		/ct_makeocf			{			15 dict				begin				exch/WMode exch def				exch/FontName exch def				/FontType 0 def				/FMapType 2 def			dup/FontMatrix known				{dup/FontMatrix get/FontMatrix exch def}				{/FontMatrix matrix def}			ifelse				/bfCount 1 index/CIDCount get 256 idiv 1 add					dup 256 gt{pop 256}if def				/Encoding					256 array 0 1 bfCount 1 sub{2 copy dup put pop}for					bfCount 1 255{2 copy bfCount put pop}for					def				/FDepVector bfCount dup 256 lt{1 add}if array def				BaseFontTemplate BaseFontDictSize dict copy					begin					/CIDFont exch def					CIDFont/FontBBox known						{CIDFont/FontBBox get/FontBBox exch def}					if					CIDFont/CDevProc known						{CIDFont/CDevProc get/CDevProc exch def}					if					currentdict					end				BaseFontNameStr 3(0)putinterval				0 1 bfCount dup 256 eq{1 sub}if					{					FDepVector exch					2 index BaseFontDictSize dict copy						begin						dup/CIDFirstByte exch 256 mul def						FontType 3 eq							{/ct_FDDict 2 dict def}						if						currentdict						end					1 index 16					BaseFontNameStr 2 2 getinterval cvrs pop					BaseFontNameStr exch definefont					put					}				for				ct_Clone?					{/Widths 1 index/CIDFont get/GlyphDirectory get length dict def}				if				FontName				currentdict				end			definefont			ct_Clone?				{				gsave				dup 1000 scalefont setfont				ct_BuildCharDict					begin					/usewidths? false def					currentfont/Widths get						begin						exch/CIDFont get/GlyphDirectory get							{							pop							dup charcode exch 1 index 0 2 index 256 idiv put							1 index exch 1 exch 256 mod put							stringwidth 2 array astore def							}						forall						end					/usewidths? true def					end				grestore				}				{exch pop}			ifelse			}bind def		currentglobal true setglobal		/ct_ComposeFont			{			ct_UseNativeCapability?				{								2 index/CMap ct_resourcestatus					{pop pop exch pop}					{					/CIDInit/ProcSet findresource						begin						12 dict							begin							begincmap							/CMapName 3 index def							/CMapVersion 1.000 def							/CMapType 1 def							exch/WMode exch def							/CIDSystemInfo 3 dict dup								begin								/Registry(Adobe)def								/Ordering								CMapName ct_mkocfStr100 cvs								(Adobe-)search									{									pop pop									(-)search										{										dup length string copy										exch pop exch pop										}										{pop(Identity)}									ifelse									}									{pop (Identity)}								ifelse								def								/Supplement 0 def								end def							1 begincodespacerange							<0000><FFFF>							endcodespacerange							1 begincidrange							<0000><FFFF>0							endcidrange							endcmap							CMapName currentdict/CMap defineresource pop							end						end					}				ifelse				composefont				}				{				3 2 roll pop				0 get/CIDFont findresource				ct_makeocf				}			ifelse			}bind def			setglobal		/ct_MakeIdentity			{			ct_UseNativeCapability?				{				1 index/CMap ct_resourcestatus					{pop pop}					{					/CIDInit/ProcSet findresource begin					12 dict begin					begincmap					/CMapName 2 index def					/CMapVersion 1.000 def					/CMapType 1 def					/CIDSystemInfo 3 dict dup						begin						/Registry(Adobe)def						/Ordering						CMapName ct_mkocfStr100 cvs						(Adobe-)search							{							pop pop							(-)search								{dup length string copy exch pop exch pop}								{pop(Identity)}							ifelse							}							{pop(Identity)}						ifelse						def						/Supplement 0 def						end def					1 begincodespacerange					<0000><FFFF>					endcodespacerange					1 begincidrange					<0000><FFFF>0					endcidrange					endcmap					CMapName currentdict/CMap defineresource pop					end					end					}				ifelse				composefont				}				{				exch pop				0 get/CIDFont findresource				ct_makeocf				}			ifelse			}bind def		currentdict readonly pop		end	end%%EndResourcesetglobal%%BeginResource: procset Adobe_CoolType_Utility_T42 1.0 0%%Copyright: Copyright 1987-2004 Adobe Systems Incorporated.%%Version: 1.0 0userdict/ct_T42Dict 15 dict putct_T42Dict begin/Is2015?{ version cvi 2015 ge}bind def/AllocGlyphStorage{ Is2015? {		pop } {	{string}forall }ifelse}bind def/Type42DictBegin{25 dict begin /FontName exch def /CharStrings 256 dict begin	 /.notdef 0 def	 currentdict end def /Encoding exch def /PaintType 0 def /FontType 42 def /FontMatrix[1 0 0 1 0 0]def 4 array astore cvx/FontBBox exch def /sfnts}bind def/Type42DictEnd { currentdict dup/FontName get exch definefont endct_T42Dict exchdup/FontName get exch put}bind def/RD{string currentfile exch readstring pop}executeonly def/PrepFor2015{Is2015?{		 	/GlyphDirectory 	 16	 dict def	 sfnts 0 get	 dup	 2 index	(glyx)	 putinterval	 2 index 	(locx)	 putinterval	 pop	 pop}{	 pop	 pop}ifelse			}bind def/AddT42Char{Is2015?{	/GlyphDirectory get 	begin	def	end	pop	pop}{	/sfnts get	4 index	get	3 index 2 index	putinterval	pop	pop	pop	pop}ifelse}bind def/T0AddT42Mtx2{/CIDFont findresource/Metrics2 get begin def end}bind defend%%EndResourcecurrentglobal true setglobal%%BeginFile: MMFauxFont.prc%%Copyright: Copyright 1987-2001 Adobe Systems Incorporated. %%All Rights Reserved.userdict /ct_EuroDict 10 dict putct_EuroDict begin/ct_CopyFont {    { 1 index /FID ne {def} {pop pop} ifelse} forall} def/ct_GetGlyphOutline{   gsave   initmatrix newpath   exch findfont dup    length 1 add dict    begin 		ct_CopyFont 		/Encoding Encoding dup length array copy 		dup		4 -1 roll		0 exch put   		def		currentdict   end   /ct_EuroFont exch definefont   1000 scalefont setfont   0 0 moveto   [       <00> stringwidth        <00> false charpath       pathbbox       [       {/m cvx} {/l cvx} {/c cvx} {/cp cvx} pathforall   grestore   counttomark 8 add}def/ct_MakeGlyphProc{   ] cvx   /ct_PSBuildGlyph cvx   ] cvx} def/ct_PSBuildGlyph {  	gsave 	8 -1 roll pop 	7 1 roll         6 -2 roll ct_FontMatrix transform 6 2 roll        4 -2 roll ct_FontMatrix transform 4 2 roll        ct_FontMatrix transform 	currentdict /PaintType 2 copy known {get 2 eq}{pop pop false} ifelse  	dup  9 1 roll 	{  		currentdict /StrokeWidth 2 copy known  		{   			get 2 div   			0 ct_FontMatrix dtransform pop			5 1 roll  			4 -1 roll 4 index sub   			4 1 roll   			3 -1 roll 4 index sub  			3 1 roll   			exch 4 index add exch  			4 index add  			5 -1 roll pop  		}  		{	 			pop pop 		}  		ifelse  	}           if  	setcachedevice          ct_FontMatrix concat        ct_PSPathOps begin 		exec 	end 	{  		currentdict /StrokeWidth 2 copy known  			{ get }  			{ pop pop 0 }    	    ifelse  		setlinewidth stroke  	}  	{   	    fill  	}  	ifelse      grestore} def /ct_PSPathOps 4 dict dup begin 	/m {moveto} def 	/l {lineto} def 	/c {curveto} def 	/cp {closepath} def end def /ct_matrix1000 [1000 0 0 1000 0 0] def/ct_AddGlyphProc  {   2 index findfont dup length 4 add dict    begin 	ct_CopyFont 	/CharStrings CharStrings dup length 1 add dict copy      begin         3 1 roll def           currentdict       end       def      /ct_FontMatrix ct_matrix1000 FontMatrix matrix concatmatrix def      /ct_PSBuildGlyph /ct_PSBuildGlyph load def      /ct_PSPathOps /ct_PSPathOps load def      currentdict   end   definefont pop}defsystemdict /languagelevel known{	/ct_AddGlyphToPrinterFont {		2 copy		ct_GetGlyphOutline 3 add -1 roll restore 		ct_MakeGlyphProc 		ct_AddGlyphProc	} def}{	/ct_AddGlyphToPrinterFont {	    pop pop restore		Adobe_CTFauxDict /$$$FONTNAME get		/Euro		Adobe_CTFauxDict /$$$SUBSTITUTEBASE get		ct_EuroDict exch get		ct_AddGlyphProc	} def} ifelse/AdobeSansMM { 556 0 24 -19 541 703 	{ 	541 628 m 	510 669 442 703 354 703 c 	201 703 117 607 101 444 c 	50 444 l 	25 372 l 	97 372 l 	97 301 l 	49 301 l 	24 229 l 	103 229 l 	124 67 209 -19 350 -19 c 	435 -19 501 25 509 32 c 	509 131 l 	492 105 417 60 343 60 c 	267 60 204 127 197 229 c 	406 229 l 	430 301 l 	191 301 l 	191 372 l 	455 372 l 	479 444 l 	194 444 l 	201 531 245 624 348 624 c 	433 624 484 583 509 534 c 	cp 	556 0 m 	}ct_PSBuildGlyph} def/AdobeSerifMM { 500 0 10 -12 484 692 	{ 	347 298 m 	171 298 l 	170 310 170 322 170 335 c 	170 362 l 	362 362 l 	374 403 l 	172 403 l 	184 580 244 642 308 642 c 	380 642 434 574 457 457 c 	481 462 l 	474 691 l 	449 691 l 	433 670 429 657 410 657 c 	394 657 360 692 299 692 c 	204 692 94 604 73 403 c 	22 403 l 	10 362 l 	70 362 l 	69 352 69 341 69 330 c 	69 319 69 308 70 298 c 	22 298 l 	10 257 l 	73 257 l 	97 57 216 -12 295 -12 c 	364 -12 427 25 484 123 c 	458 142 l 	425 101 384 37 316 37 c 	256 37 189 84 173 257 c 	335 257 l 	cp 	500 0 m 	} ct_PSBuildGlyph } def end		%%EndFilesetglobalAdobe_CoolType_Core begin /$Oblique SetSubstituteStrategy end%%BeginResource: procset Adobe_AGM_Image 1.0 0
%%Version: 1.0 0
%%Copyright: Copyright(C)2000-2006 Adobe Systems, Inc. All Rights Reserved.
systemdict/setpacking known
{
	currentpacking
	true setpacking
}if
userdict/Adobe_AGM_Image 71 dict dup begin put
/Adobe_AGM_Image_Id/Adobe_AGM_Image_1.0_0 def
/nd{
	null def
}bind def
/AGMIMG_&image nd
/AGMIMG_&colorimage nd
/AGMIMG_&imagemask nd
/AGMIMG_mbuf()def
/AGMIMG_ybuf()def
/AGMIMG_kbuf()def
/AGMIMG_c 0 def
/AGMIMG_m 0 def
/AGMIMG_y 0 def
/AGMIMG_k 0 def
/AGMIMG_tmp nd
/AGMIMG_imagestring0 nd
/AGMIMG_imagestring1 nd
/AGMIMG_imagestring2 nd
/AGMIMG_imagestring3 nd
/AGMIMG_imagestring4 nd
/AGMIMG_imagestring5 nd
/AGMIMG_cnt nd
/AGMIMG_fsave nd
/AGMIMG_colorAry nd
/AGMIMG_override nd
/AGMIMG_name nd
/AGMIMG_maskSource nd
/AGMIMG_flushfilters nd
/invert_image_samples nd
/knockout_image_samples	nd
/img nd
/sepimg nd
/devnimg nd
/idximg nd
/ds
{
	Adobe_AGM_Core begin
	Adobe_AGM_Image begin
	/AGMIMG_&image systemdict/image get def
	/AGMIMG_&imagemask systemdict/imagemask get def
	/colorimage where{
		pop
		/AGMIMG_&colorimage/colorimage ldf
	}if
	end
	end
}def
/ps
{
	Adobe_AGM_Image begin
	/AGMIMG_ccimage_exists{/customcolorimage where 
		{
			pop
			/Adobe_AGM_OnHost_Seps where
			{
			pop false
			}{
			/Adobe_AGM_InRip_Seps where
				{
				pop false
				}{
					true
				}ifelse
			}ifelse
			}{
			false
		}ifelse 
	}bdf
	level2{
		/invert_image_samples
		{
			Adobe_AGM_Image/AGMIMG_tmp Decode length ddf
			/Decode[Decode 1 get Decode 0 get]def
		}def
		/knockout_image_samples
		{
			Operator/imagemask ne{
				/Decode[1 1]def
			}if
		}def
	}{	
		/invert_image_samples
		{
			{1 exch sub}currenttransfer addprocs settransfer
		}def
		/knockout_image_samples
		{
			{pop 1}currenttransfer addprocs settransfer
		}def
	}ifelse
	/img/imageormask ldf
	/sepimg/sep_imageormask ldf
	/devnimg/devn_imageormask ldf
	/idximg/indexed_imageormask ldf
	/_ctype 7 def
	currentdict{
		dup xcheck 1 index type dup/arraytype eq exch/packedarraytype eq or and{
			bind
		}if
		def
	}forall
}def
/pt
{
	end
}def
/dt
{
}def
/AGMIMG_flushfilters
{
	dup type/arraytype ne
		{1 array astore}if
	dup 0 get currentfile ne
		{dup 0 get flushfile}if
		{
		dup type/filetype eq
			{
			dup status 1 index currentfile ne and
				{closefile}
				{pop}
			ifelse
			}{pop}ifelse
		}forall
}def
/AGMIMG_init_common
{
	currentdict/T known{/ImageType/T ldf currentdict/T undef}if
	currentdict/W known{/Width/W ldf currentdict/W undef}if
	currentdict/H known{/Height/H ldf currentdict/H undef}if
	currentdict/M known{/ImageMatrix/M ldf currentdict/M undef}if
	currentdict/BC known{/BitsPerComponent/BC ldf currentdict/BC undef}if
	currentdict/D known{/Decode/D ldf currentdict/D undef}if
	currentdict/DS known{/DataSource/DS ldf currentdict/DS undef}if
	currentdict/O known{
		/Operator/O load 1 eq{
			/imagemask
		}{
			/O load 2 eq{
				/image 
			}{
				/colorimage
			}ifelse
		}ifelse
		def
		currentdict/O undef
	}if
	currentdict/HSCI known{/HostSepColorImage/HSCI ldf currentdict/HSCI undef}if
	currentdict/MD known{/MultipleDataSources/MD ldf currentdict/MD undef}if
	currentdict/I known{/Interpolate/I ldf currentdict/I undef}if
	currentdict/SI known{/SkipImageProc/SI ldf currentdict/SI undef}if
	/DataSource load xcheck not{
		DataSource type/arraytype eq{
			DataSource 0 get type/filetype eq{
				/_Filters DataSource def
				currentdict/MultipleDataSources known not{
					/DataSource DataSource dup length 1 sub get def 
				}if
			}if
		}if
		currentdict/MultipleDataSources known not{
			/MultipleDataSources DataSource type/arraytype eq{
				DataSource length 1 gt
			}
			{false}ifelse def
		}if
	}if
	/NComponents Decode length 2 div def
	currentdict/SkipImageProc known not{/SkipImageProc{false}def}if
}bdf
/imageormask_sys
{
	begin
		AGMIMG_init_common
		save mark
		level2{
			currentdict
			Operator/imagemask eq{
				AGMIMG_&imagemask
			}{
				use_mask{
					process_mask AGMIMG_&image
				}{
					AGMIMG_&image
				}ifelse
			}ifelse
		}{
			Width Height
			Operator/imagemask eq{
				Decode 0 get 1 eq Decode 1 get 0 eq	and
				ImageMatrix/DataSource load
				AGMIMG_&imagemask
			}{
				BitsPerComponent ImageMatrix/DataSource load
				AGMIMG_&image
			}ifelse
		}ifelse
		currentdict/_Filters known{_Filters AGMIMG_flushfilters}if
		cleartomark restore
	end
}def
/overprint_plate
{
	currentoverprint{
		0 get dup type/nametype eq{
			dup/DeviceGray eq{
				pop AGMCORE_black_plate not
			}{
				/DeviceCMYK eq{
					AGMCORE_is_cmyk_sep not
				}if
			}ifelse
		}{
			false exch
			{
				 AGMOHS_sepink eq or
			}forall
			not
		}ifelse
	}{
		pop false
	}ifelse
}def
/process_mask
{
	level3{
		dup begin
		/ImageType 1 def
		end
		4 dict begin
			/DataDict exch def
			/ImageType 3 def
			/InterleaveType 3 def
			/MaskDict 9 dict begin
				/ImageType 1 def
				/Width DataDict dup/MaskWidth known{/MaskWidth}{/Width}ifelse get def
				/Height DataDict dup/MaskHeight known{/MaskHeight}{/Height}ifelse get def
				/ImageMatrix[Width 0 0 Height neg 0 Height]def
				/NComponents 1 def
				/BitsPerComponent 1 def
				/Decode DataDict dup/MaskD known{/MaskD}{[1 0]}ifelse get def
				/DataSource Adobe_AGM_Core/AGMIMG_maskSource get def
			currentdict end def
		currentdict end
	}if
}def
/use_mask
{
	dup/Mask known	{dup/Mask get}{false}ifelse
}def
/imageormask
{
	begin
		AGMIMG_init_common
		SkipImageProc{
			currentdict consumeimagedata
		}
		{
			save mark
			level2 AGMCORE_host_sep not and{
				currentdict
				Operator/imagemask eq DeviceN_PS2 not and{
					imagemask
				}{
					AGMCORE_in_rip_sep currentoverprint and currentcolorspace 0 get/DeviceGray eq and{
						[/Separation/Black/DeviceGray{}]setcolorspace
						/Decode[Decode 1 get Decode 0 get]def
					}if
					use_mask{
						process_mask image
					}{
						DeviceN_NoneName DeviceN_PS2 Indexed_DeviceN level3 not and or or AGMCORE_in_rip_sep and 
						{
							Names convert_to_process not{
								2 dict begin
								/imageDict xdf
								/names_index 0 def
								gsave
								imageDict write_image_file{
									Names{
										dup(None)ne{
											[/Separation 3 -1 roll/DeviceGray{1 exch sub}]setcolorspace
											Operator imageDict read_image_file
											names_index 0 eq{true setoverprint}if
											/names_index names_index 1 add def
										}{
											pop
										}ifelse
									}forall
									close_image_file
								}if
								grestore
								end
							}{
								Operator/imagemask eq{
									imagemask
								}{
									image
								}ifelse
							}ifelse
						}{
							Operator/imagemask eq{
								imagemask
							}{
								image
							}ifelse
						}ifelse
					}ifelse
				}ifelse
			}{
				Width Height
				Operator/imagemask eq{
					Decode 0 get 1 eq Decode 1 get 0 eq	and
					ImageMatrix/DataSource load
					/Adobe_AGM_OnHost_Seps where{
						pop imagemask
					}{
						currentgray 1 ne{
							currentdict imageormask_sys
						}{
							currentoverprint not{
								1 AGMCORE_&setgray
								currentdict imageormask_sys
							}{
								currentdict ignoreimagedata
							}ifelse				 		
						}ifelse
					}ifelse
				}{
					BitsPerComponent ImageMatrix 
					MultipleDataSources{
						0 1 NComponents 1 sub{
							DataSource exch get
						}for
					}{
						/DataSource load
					}ifelse
					Operator/colorimage eq{
						AGMCORE_host_sep{
							MultipleDataSources level2 or NComponents 4 eq and{
								AGMCORE_is_cmyk_sep{
									MultipleDataSources{
										/DataSource DataSource 0 get xcheck
											{
											[
											DataSource 0 get/exec cvx
											DataSource 1 get/exec cvx
											DataSource 2 get/exec cvx
											DataSource 3 get/exec cvx
											/AGMCORE_get_ink_data cvx
											]cvx
											}{
											DataSource aload pop AGMCORE_get_ink_data
											}ifelse def
									}{
										/DataSource 
										Width BitsPerComponent mul 7 add 8 idiv Height mul 4 mul 
										/DataSource load
										filter_cmyk 0()/SubFileDecode filter def
									}ifelse
									/Decode[Decode 0 get Decode 1 get]def
									/MultipleDataSources false def
									/NComponents 1 def
									/Operator/image def
									invert_image_samples
						 			1 AGMCORE_&setgray
									currentdict imageormask_sys
								}{
									currentoverprint not Operator/imagemask eq and{
 			 							1 AGMCORE_&setgray
 			 							currentdict imageormask_sys
 			 						}{
 			 							currentdict ignoreimagedata
 			 						}ifelse
								}ifelse
							}{	
								MultipleDataSources NComponents AGMIMG_&colorimage						
							}ifelse
						}{
							true NComponents colorimage
						}ifelse
					}{
						Operator/image eq{
							AGMCORE_host_sep{
								/DoImage true def
								currentdict/HostSepColorImage known{HostSepColorImage not}{false}ifelse
								{
									AGMCORE_black_plate not Operator/imagemask ne and{
										/DoImage false def
										currentdict ignoreimagedata
					 				}if
								}if
						 		1 AGMCORE_&setgray
								DoImage
									{currentdict imageormask_sys}if
							}{
								use_mask{
									process_mask image
								}{
									image
								}ifelse
							}ifelse
						}{
							Operator/knockout eq{
								pop pop pop pop pop
								currentcolorspace overprint_plate not{
									knockout_unitsq
								}if
							}if
						}ifelse
					}ifelse
				}ifelse
			}ifelse
			cleartomark restore
		}ifelse
		currentdict/_Filters known{_Filters AGMIMG_flushfilters}if
	end
}def
/sep_imageormask
{
 	/sep_colorspace_dict AGMCORE_gget begin
	CSA map_csa
	begin
	AGMIMG_init_common
	SkipImageProc{
		currentdict consumeimagedata
	}{
		save mark 
		AGMCORE_avoid_L2_sep_space{
			/Decode[Decode 0 get 255 mul Decode 1 get 255 mul]def
		}if
 		AGMIMG_ccimage_exists 
		MappedCSA 0 get/DeviceCMYK eq and
		currentdict/Components known and 
		Name()ne and 
		Name(All)ne and 
		Operator/image eq and
		AGMCORE_producing_seps not and
		level2 not and
		{
			Width Height BitsPerComponent ImageMatrix 
			[
			/DataSource load/exec cvx
			{
				0 1 2 index length 1 sub{
					1 index exch
					2 copy get 255 xor put
				}for
			}/exec cvx
			]cvx bind
			MappedCSA 0 get/DeviceCMYK eq{
				Components aload pop
			}{
				0 0 0 Components aload pop 1 exch sub
			}ifelse
			Name findcmykcustomcolor
			customcolorimage
		}{
			AGMCORE_producing_seps not{
				level2{
 					//Adobe_AGM_Core/AGMCORE_pattern_paint_type get 2 ne AGMCORE_avoid_L2_sep_space not and currentcolorspace 0 get/Separation ne and{
						[/Separation Name MappedCSA sep_proc_name exch dup 0 get 15 string cvs(/Device)anchorsearch{pop pop 0 get}{pop}ifelse exch load]setcolorspace_opt
						/sep_tint AGMCORE_gget setcolor
					}if
					currentdict imageormask
				}{
					currentdict
					Operator/imagemask eq{
						imageormask
					}{
						sep_imageormask_lev1
					}ifelse
				}ifelse
 			}{
				AGMCORE_host_sep{
					Operator/knockout eq{
						currentdict/ImageMatrix get concat
						knockout_unitsq
					}{
						currentgray 1 ne{
 							AGMCORE_is_cmyk_sep Name(All)ne and{
 								level2{
 									Name AGMCORE_IsSeparationAProcessColor 
 									{
 										Operator/imagemask eq{
 											//Adobe_AGM_Core/AGMCORE_pattern_paint_type get 2 ne{
 												/sep_tint AGMCORE_gget 1 exch sub AGMCORE_&setcolor
 											}if
 										}{
											invert_image_samples
 										}ifelse
	 								}{
	 									//Adobe_AGM_Core/AGMCORE_pattern_paint_type get 2 ne{
	 										[/Separation Name[/DeviceGray]
	 										{
	 											sep_colorspace_proc AGMCORE_get_ink_data
												1 exch sub
	 										}bind
											]AGMCORE_&setcolorspace
											/sep_tint AGMCORE_gget AGMCORE_&setcolor
										}if
 									}ifelse
 									currentdict imageormask_sys
	 							}{
	 								currentdict
									Operator/imagemask eq{
										imageormask_sys
									}{
										sep_image_lev1_sep
									}ifelse
	 							}ifelse
 							}{
 								Operator/imagemask ne{
									invert_image_samples
 								}if
		 						currentdict imageormask_sys
 							}ifelse
 						}{
 							currentoverprint not Name(All)eq or Operator/imagemask eq and{
								currentdict imageormask_sys 
								}{
								currentoverprint not
									{
 									gsave 
 									knockout_unitsq
 									grestore
									}if
								currentdict consumeimagedata 
		 					}ifelse
 						}ifelse
		 			}ifelse
 				}{
					//Adobe_AGM_Core/AGMCORE_pattern_paint_type get 2 ne{
						currentcolorspace 0 get/Separation ne{
							[/Separation Name MappedCSA sep_proc_name exch 0 get exch load]setcolorspace_opt
							/sep_tint AGMCORE_gget setcolor
						}if
					}if
					currentoverprint 
					MappedCSA 0 get/DeviceCMYK eq and 
					Name AGMCORE_IsSeparationAProcessColor not and
					//Adobe_AGM_Core/AGMCORE_pattern_paint_type get 2 ne{Name inRip_spot_has_ink not and}{false}ifelse 
					Name(All)ne and{
						imageormask_l2_overprint
					}{
						currentdict imageormask
 					}ifelse
				}ifelse
			}ifelse
		}ifelse
		cleartomark restore
	}ifelse
	currentdict/_Filters known{_Filters AGMIMG_flushfilters}if
	end
	end
}def
/colorSpaceElemCnt
{
	mark currentcolor counttomark dup 2 add 1 roll cleartomark
}bdf
/devn_sep_datasource
{
	1 dict begin
	/dataSource xdf
	[
		0 1 dataSource length 1 sub{
			dup currentdict/dataSource get/exch cvx/get cvx/exec cvx
			/exch cvx names_index/ne cvx[/pop cvx]cvx/if cvx
		}for
	]cvx bind
	end
}bdf		
/devn_alt_datasource
{
	11 dict begin
	/convProc xdf
	/origcolorSpaceElemCnt xdf
	/origMultipleDataSources xdf
	/origBitsPerComponent xdf
	/origDecode xdf
	/origDataSource xdf
	/dsCnt origMultipleDataSources{origDataSource length}{1}ifelse def
	/DataSource origMultipleDataSources
		{
			[
			BitsPerComponent 8 idiv origDecode length 2 idiv mul string
			0 1 origDecode length 2 idiv 1 sub
				{
				dup 7 mul 1 add index exch dup BitsPerComponent 8 idiv mul exch
				origDataSource exch get 0()/SubFileDecode filter
				BitsPerComponent 8 idiv string/readstring cvx/pop cvx/putinterval cvx
				}for 
			]bind cvx
		}{origDataSource}ifelse 0()/SubFileDecode filter def		
	[
		origcolorSpaceElemCnt string
		0 2 origDecode length 2 sub
			{
			dup origDecode exch get dup 3 -1 roll 1 add origDecode exch get exch sub 2 BitsPerComponent exp 1 sub div
			1 BitsPerComponent 8 idiv{DataSource/read cvx/not cvx{0}/if cvx/mul cvx}repeat/mul cvx/add cvx
			}for
		/convProc load/exec cvx
		origcolorSpaceElemCnt 1 sub -1 0
			{
			/dup cvx 2/add cvx/index cvx
			3 1/roll cvx/exch cvx 255/mul cvx/cvi cvx/put cvx
			}for
	]bind cvx 0()/SubFileDecode filter
	end
}bdf
/devn_imageormask
{
 	/devicen_colorspace_dict AGMCORE_gget begin
	CSA map_csa
	2 dict begin
	dup
	/srcDataStrs[3 -1 roll begin
		AGMIMG_init_common
		currentdict/MultipleDataSources known{MultipleDataSources{DataSource length}{1}ifelse}{1}ifelse
		{
			Width Decode length 2 div mul cvi
			{
				dup 65535 gt{1 add 2 div cvi}{exit}ifelse
			}loop
			string
		}repeat
		end]def
	/dstDataStr srcDataStrs 0 get length string def
	begin
	AGMIMG_init_common
	SkipImageProc{
		currentdict consumeimagedata
	}{
		save mark 
		AGMCORE_producing_seps not{
			level3 not{
				Operator/imagemask ne{
					/DataSource[[
						DataSource Decode BitsPerComponent currentdict/MultipleDataSources known{MultipleDataSources}{false}ifelse
						colorSpaceElemCnt/devicen_colorspace_dict AGMCORE_gget/TintTransform get 
						devn_alt_datasource 1/string cvx/readstring cvx/pop cvx]cvx colorSpaceElemCnt 1 sub{dup}repeat]def				
					/MultipleDataSources true def
					/Decode colorSpaceElemCnt[exch{0 1}repeat]def
				}if
			}if
			currentdict imageormask
 		}{
			AGMCORE_host_sep{
				Names convert_to_process{
					CSA get_csa_by_name 0 get/DeviceCMYK eq{
						/DataSource
							Width BitsPerComponent mul 7 add 8 idiv Height mul 4 mul 
							DataSource Decode BitsPerComponent currentdict/MultipleDataSources known{MultipleDataSources}{false}ifelse
							4/devicen_colorspace_dict AGMCORE_gget/TintTransform get 
							devn_alt_datasource
						filter_cmyk 0()/SubFileDecode filter def
						/MultipleDataSources false def
						/Decode[1 0]def
						/DeviceGray setcolorspace
			 			currentdict imageormask_sys
 					}{
						AGMCORE_report_unsupported_color_space
						AGMCORE_black_plate{
							/DataSource
								DataSource Decode BitsPerComponent currentdict/MultipleDataSources known{MultipleDataSources}{false}ifelse
								CSA get_csa_by_name 0 get/DeviceRGB eq{3}{1}ifelse/devicen_colorspace_dict AGMCORE_gget/TintTransform get
								devn_alt_datasource
							/MultipleDataSources false def
							/Decode colorSpaceElemCnt[exch{0 1}repeat]def
				 			currentdict imageormask_sys
				 		}{
	 						gsave 
	 						knockout_unitsq
	 						grestore
							currentdict consumeimagedata 
						}ifelse
 					}ifelse
				}
				{	
					/devicen_colorspace_dict AGMCORE_gget/names_index known{
	 					Operator/imagemask ne{
	 						MultipleDataSources{
		 						/DataSource[DataSource devn_sep_datasource/exec cvx]cvx def
								/MultipleDataSources false def
	 						}{
								/DataSource/DataSource load dstDataStr srcDataStrs 0 get filter_devn def
	 						}ifelse
							invert_image_samples
	 					}if
			 			currentdict imageormask_sys
	 				}{
	 					currentoverprint not Operator/imagemask eq and{
							currentdict imageormask_sys 
							}{
							currentoverprint not
								{
	 							gsave 
	 							knockout_unitsq
	 							grestore
								}if
							currentdict consumeimagedata 
			 			}ifelse
	 				}ifelse
	 			}ifelse
 			}{
				currentdict imageormask
			}ifelse
		}ifelse
		cleartomark restore
	}ifelse
	currentdict/_Filters known{_Filters AGMIMG_flushfilters}if
	end
	end
	end
}def
/imageormask_l2_overprint
{
	currentdict
	currentcmykcolor add add add 0 eq{
		currentdict consumeimagedata
	}{
		level3{			
			currentcmykcolor 
			/AGMIMG_k xdf 
			/AGMIMG_y xdf 
			/AGMIMG_m xdf 
			/AGMIMG_c xdf
			Operator/imagemask eq{
				[/DeviceN[
				AGMIMG_c 0 ne{/Cyan}if
				AGMIMG_m 0 ne{/Magenta}if
				AGMIMG_y 0 ne{/Yellow}if
				AGMIMG_k 0 ne{/Black}if
				]/DeviceCMYK{}]setcolorspace
				AGMIMG_c 0 ne{AGMIMG_c}if
				AGMIMG_m 0 ne{AGMIMG_m}if
				AGMIMG_y 0 ne{AGMIMG_y}if
				AGMIMG_k 0 ne{AGMIMG_k}if
				setcolor			
			}{	
				/Decode[Decode 0 get 255 mul Decode 1 get 255 mul]def
				[/Indexed 				
					[
						/DeviceN[
							AGMIMG_c 0 ne{/Cyan}if
							AGMIMG_m 0 ne{/Magenta}if
							AGMIMG_y 0 ne{/Yellow}if
							AGMIMG_k 0 ne{/Black}if
						]
						/DeviceCMYK{
							AGMIMG_k 0 eq{0}if
							AGMIMG_y 0 eq{0 exch}if
							AGMIMG_m 0 eq{0 3 1 roll}if
							AGMIMG_c 0 eq{0 4 1 roll}if						
						}
					]
					255
					{
						255 div 
						mark exch
						dup	dup dup
						AGMIMG_k 0 ne{
							/sep_tint AGMCORE_gget mul MappedCSA sep_proc_name exch pop load exec 4 1 roll pop pop pop		
							counttomark 1 roll
						}{
							pop
						}ifelse
						AGMIMG_y 0 ne{
							/sep_tint AGMCORE_gget mul MappedCSA sep_proc_name exch pop load exec 4 2 roll pop pop pop		
							counttomark 1 roll
						}{
							pop
						}ifelse
						AGMIMG_m 0 ne{
							/sep_tint AGMCORE_gget mul MappedCSA sep_proc_name exch pop load exec 4 3 roll pop pop pop		
							counttomark 1 roll
						}{
							pop
						}ifelse
						AGMIMG_c 0 ne{
							/sep_tint AGMCORE_gget mul MappedCSA sep_proc_name exch pop load exec pop pop pop		
							counttomark 1 roll
						}{
							pop
						}ifelse
						counttomark 1 add -1 roll pop
					}
				]setcolorspace
			}ifelse
			imageormask_sys
		}{
	write_image_file{
		currentcmykcolor
		0 ne{
			[/Separation/Black/DeviceGray{}]setcolorspace
			gsave
			/Black
			[{1 exch sub/sep_tint AGMCORE_gget mul}/exec cvx MappedCSA sep_proc_name cvx exch pop{4 1 roll pop pop pop 1 exch sub}/exec cvx]
			cvx modify_halftone_xfer
			Operator currentdict read_image_file
			grestore
		}if
		0 ne{
			[/Separation/Yellow/DeviceGray{}]setcolorspace
			gsave
			/Yellow
			[{1 exch sub/sep_tint AGMCORE_gget mul}/exec cvx MappedCSA sep_proc_name cvx exch pop{4 2 roll pop pop pop 1 exch sub}/exec cvx]
			cvx modify_halftone_xfer
			Operator currentdict read_image_file
			grestore
		}if
		0 ne{
			[/Separation/Magenta/DeviceGray{}]setcolorspace
			gsave
			/Magenta
			[{1 exch sub/sep_tint AGMCORE_gget mul}/exec cvx MappedCSA sep_proc_name cvx exch pop{4 3 roll pop pop pop 1 exch sub}/exec cvx]
			cvx modify_halftone_xfer
			Operator currentdict read_image_file
			grestore
		}if
		0 ne{
			[/Separation/Cyan/DeviceGray{}]setcolorspace
			gsave
			/Cyan 
			[{1 exch sub/sep_tint AGMCORE_gget mul}/exec cvx MappedCSA sep_proc_name cvx exch pop{pop pop pop 1 exch sub}/exec cvx]
			cvx modify_halftone_xfer
			Operator currentdict read_image_file
			grestore
		}if
				close_image_file
			}{
				imageormask
			}ifelse
		}ifelse
	}ifelse
}def
/indexed_imageormask
{
	begin
		AGMIMG_init_common
		save mark 
 		currentdict
 		AGMCORE_host_sep{
			Operator/knockout eq{
				/indexed_colorspace_dict AGMCORE_gget dup/CSA known{
					/CSA get get_csa_by_name
				}{
					/Names get
				}ifelse
				overprint_plate not{
					knockout_unitsq
				}if
			}{
				Indexed_DeviceN{
					/devicen_colorspace_dict AGMCORE_gget dup/names_index known exch/Names get convert_to_process or{
			 			indexed_image_lev2_sep
					}{
						currentoverprint not{
							knockout_unitsq
			 			}if
			 			currentdict consumeimagedata
					}ifelse
				}{
		 			AGMCORE_is_cmyk_sep{
						Operator/imagemask eq{
							imageormask_sys
						}{
							level2{
								indexed_image_lev2_sep
							}{
								indexed_image_lev1_sep
							}ifelse
						}ifelse
					}{
						currentoverprint not{
							knockout_unitsq
			 			}if
			 			currentdict consumeimagedata
					}ifelse
				}ifelse
			}ifelse
 		}{
			level2{
				Indexed_DeviceN{
					/indexed_colorspace_dict AGMCORE_gget begin
				}{
					/indexed_colorspace_dict AGMCORE_gget dup null ne
					{
						begin
						currentdict/CSDBase known{CSDBase/CSD get_res/MappedCSA get}{CSA}ifelse
						get_csa_by_name 0 get/DeviceCMYK eq ps_level 3 ge and ps_version 3015.007 lt and
						AGMCORE_in_rip_sep and{
							[/Indexed[/DeviceN[/Cyan/Magenta/Yellow/Black]/DeviceCMYK{}]HiVal Lookup]
							setcolorspace
						}if
						end
					}
					{pop}ifelse
				}ifelse
				imageormask
				Indexed_DeviceN{
					end
				}if
			}{
				Operator/imagemask eq{
					imageormask
				}{
					indexed_imageormask_lev1
				}ifelse
			}ifelse
 		}ifelse
		cleartomark restore
	currentdict/_Filters known{_Filters AGMIMG_flushfilters}if
	end
}def
/indexed_image_lev2_sep
{
	/indexed_colorspace_dict AGMCORE_gget begin
	begin
		Indexed_DeviceN not{
			currentcolorspace 
			dup 1/DeviceGray put
			dup 3
			currentcolorspace 2 get 1 add string
			0 1 2 3 AGMCORE_get_ink_data 4 currentcolorspace 3 get length 1 sub
			{
			dup 4 idiv exch currentcolorspace 3 get exch get 255 exch sub 2 index 3 1 roll put
			}for 
			put	setcolorspace
		}if
		currentdict 
		Operator/imagemask eq{
			AGMIMG_&imagemask
		}{
			use_mask{
				process_mask AGMIMG_&image
			}{
				AGMIMG_&image
			}ifelse
		}ifelse
	end end
}def
 /OPIimage
 {
 	dup type/dicttype ne{
 		10 dict begin
 			/DataSource xdf
 			/ImageMatrix xdf
 			/BitsPerComponent xdf
 			/Height xdf
 			/Width xdf
 			/ImageType 1 def
 			/Decode[0 1 def]
 			currentdict
 		end
 	}if
 	dup begin
 		/NComponents 1 cdndf
 		/MultipleDataSources false cdndf
 		/SkipImageProc{false}cdndf
 		/Decode[
 				0 
 				currentcolorspace 0 get/Indexed eq{
 					2 BitsPerComponent exp 1 sub
 				}{
 					1
 				}ifelse
 		]cdndf
 		/Operator/image cdndf
 	end
 	/sep_colorspace_dict AGMCORE_gget null eq{
 		imageormask
 	}{
 		gsave
 		dup begin invert_image_samples end
 		sep_imageormask
 		grestore
 	}ifelse
 }def
/cachemask_level2
{
	3 dict begin
	/LZWEncode filter/WriteFilter xdf
	/readBuffer 256 string def
	/ReadFilter
		currentfile
		0(%EndMask)/SubFileDecode filter
		/ASCII85Decode filter
		/RunLengthDecode filter
	def
	{
		ReadFilter readBuffer readstring exch
		WriteFilter exch writestring
		not{exit}if
	}loop
	WriteFilter closefile
	end
}def
/spot_alias
{
	/mapto_sep_imageormask 
	{
		dup type/dicttype ne{
			12 dict begin
				/ImageType 1 def
				/DataSource xdf
				/ImageMatrix xdf
				/BitsPerComponent xdf
				/Height xdf
				/Width xdf
				/MultipleDataSources false def
		}{
			begin
		}ifelse
				/Decode[/customcolor_tint AGMCORE_gget 0]def
				/Operator/image def
				/SkipImageProc{false}def
				currentdict 
			end
		sep_imageormask
	}bdf
	/customcolorimage
	{
		Adobe_AGM_Image/AGMIMG_colorAry xddf
		/customcolor_tint AGMCORE_gget
		<<
			/Name AGMIMG_colorAry 4 get
			/CSA[/DeviceCMYK]
			/TintMethod/Subtractive
			/TintProc null
			/MappedCSA null
			/NComponents 4 
			/Components[AGMIMG_colorAry aload pop pop]
		>>
		setsepcolorspace
		mapto_sep_imageormask
	}ndf
	Adobe_AGM_Image/AGMIMG_&customcolorimage/customcolorimage load put
	/customcolorimage
	{
		Adobe_AGM_Image/AGMIMG_override false put
		current_spot_alias{dup 4 get map_alias}{false}ifelse
		{
			false set_spot_alias
			/customcolor_tint AGMCORE_gget exch setsepcolorspace
			pop
			mapto_sep_imageormask
			true set_spot_alias
		}{
			//Adobe_AGM_Image/AGMIMG_&customcolorimage get exec
		}ifelse			
	}bdf
}def
/snap_to_device
{
	6 dict begin
	matrix currentmatrix
	dup 0 get 0 eq 1 index 3 get 0 eq and
	1 index 1 get 0 eq 2 index 2 get 0 eq and or exch pop
	{
		1 1 dtransform 0 gt exch 0 gt/AGMIMG_xSign? exch def/AGMIMG_ySign? exch def
		0 0 transform
		AGMIMG_ySign?{floor 0.1 sub}{ceiling 0.1 add}ifelse exch
		AGMIMG_xSign?{floor 0.1 sub}{ceiling 0.1 add}ifelse exch
		itransform/AGMIMG_llY exch def/AGMIMG_llX exch def
		1 1 transform
		AGMIMG_ySign?{ceiling 0.1 add}{floor 0.1 sub}ifelse exch
		AGMIMG_xSign?{ceiling 0.1 add}{floor 0.1 sub}ifelse exch
		itransform/AGMIMG_urY exch def/AGMIMG_urX exch def			
		[AGMIMG_urX AGMIMG_llX sub 0 0 AGMIMG_urY AGMIMG_llY sub AGMIMG_llX AGMIMG_llY]concat
	}{
	}ifelse
	end
}def
level2 not{
	/colorbuf
	{
		0 1 2 index length 1 sub{
			dup 2 index exch get 
			255 exch sub 
			2 index 
			3 1 roll 
			put
		}for
	}def
	/tint_image_to_color
	{
		begin
			Width Height BitsPerComponent ImageMatrix 
			/DataSource load
		end
		Adobe_AGM_Image begin
			/AGMIMG_mbuf 0 string def
			/AGMIMG_ybuf 0 string def
			/AGMIMG_kbuf 0 string def
			{
				colorbuf dup length AGMIMG_mbuf length ne
					{
					dup length dup dup
					/AGMIMG_mbuf exch string def
					/AGMIMG_ybuf exch string def
					/AGMIMG_kbuf exch string def
					}if
				dup AGMIMG_mbuf copy AGMIMG_ybuf copy AGMIMG_kbuf copy pop
			}
			addprocs
			{AGMIMG_mbuf}{AGMIMG_ybuf}{AGMIMG_kbuf}true 4 colorimage	
		end
	}def			
	/sep_imageormask_lev1
	{
		begin
			MappedCSA 0 get dup/DeviceRGB eq exch/DeviceCMYK eq or has_color not and{
				{
					255 mul round cvi GrayLookup exch get
				}currenttransfer addprocs settransfer
				currentdict imageormask
			}{
				/sep_colorspace_dict AGMCORE_gget/Components known{
					MappedCSA 0 get/DeviceCMYK eq{
						Components aload pop
					}{
						0 0 0 Components aload pop 1 exch sub
					}ifelse
					Adobe_AGM_Image/AGMIMG_k xddf 
					Adobe_AGM_Image/AGMIMG_y xddf 
					Adobe_AGM_Image/AGMIMG_m xddf 
					Adobe_AGM_Image/AGMIMG_c xddf 
					AGMIMG_y 0.0 eq AGMIMG_m 0.0 eq and AGMIMG_c 0.0 eq and{
						{AGMIMG_k mul 1 exch sub}currenttransfer addprocs settransfer
						currentdict imageormask
					}{
						currentcolortransfer
						{AGMIMG_k mul 1 exch sub}exch addprocs 4 1 roll
						{AGMIMG_y mul 1 exch sub}exch addprocs 4 1 roll
						{AGMIMG_m mul 1 exch sub}exch addprocs 4 1 roll
						{AGMIMG_c mul 1 exch sub}exch addprocs 4 1 roll
						setcolortransfer
						currentdict tint_image_to_color
					}ifelse
				}{
					MappedCSA 0 get/DeviceGray eq{
						{255 mul round cvi ColorLookup exch get 0 get}currenttransfer addprocs settransfer
						currentdict imageormask
					}{
						MappedCSA 0 get/DeviceCMYK eq{
							currentcolortransfer
							{255 mul round cvi ColorLookup exch get 3 get 1 exch sub}exch addprocs 4 1 roll
							{255 mul round cvi ColorLookup exch get 2 get 1 exch sub}exch addprocs 4 1 roll
							{255 mul round cvi ColorLookup exch get 1 get 1 exch sub}exch addprocs 4 1 roll
							{255 mul round cvi ColorLookup exch get 0 get 1 exch sub}exch addprocs 4 1 roll
							setcolortransfer 
							currentdict tint_image_to_color
						}{
							currentcolortransfer
							{pop 1}exch addprocs 4 1 roll
							{255 mul round cvi ColorLookup exch get 2 get}exch addprocs 4 1 roll
							{255 mul round cvi ColorLookup exch get 1 get}exch addprocs 4 1 roll
							{255 mul round cvi ColorLookup exch get 0 get}exch addprocs 4 1 roll
							setcolortransfer 
							currentdict tint_image_to_color
						}ifelse
					}ifelse
				}ifelse
			}ifelse
		end
	}def
	/sep_image_lev1_sep
	{
		begin
			/sep_colorspace_dict AGMCORE_gget/Components known{
				Components aload pop
				Adobe_AGM_Image/AGMIMG_k xddf 
				Adobe_AGM_Image/AGMIMG_y xddf 
				Adobe_AGM_Image/AGMIMG_m xddf 
				Adobe_AGM_Image/AGMIMG_c xddf 
				{AGMIMG_c mul 1 exch sub}
				{AGMIMG_m mul 1 exch sub}
				{AGMIMG_y mul 1 exch sub}
				{AGMIMG_k mul 1 exch sub}
			}{
				{255 mul round cvi ColorLookup exch get 0 get 1 exch sub}
				{255 mul round cvi ColorLookup exch get 1 get 1 exch sub}
				{255 mul round cvi ColorLookup exch get 2 get 1 exch sub}
				{255 mul round cvi ColorLookup exch get 3 get 1 exch sub}
			}ifelse
			AGMCORE_get_ink_data currenttransfer addprocs settransfer
			currentdict imageormask_sys
		end
	}def
	/indexed_imageormask_lev1
	{
		/indexed_colorspace_dict AGMCORE_gget begin
		begin
			currentdict
			MappedCSA 0 get dup/DeviceRGB eq exch/DeviceCMYK eq or has_color not and{
				{HiVal mul round cvi GrayLookup exch get HiVal div}currenttransfer addprocs settransfer
				imageormask
			}{
				MappedCSA 0 get/DeviceGray eq{
					{HiVal mul round cvi Lookup exch get HiVal div}currenttransfer addprocs settransfer
					imageormask
				}{
					MappedCSA 0 get/DeviceCMYK eq{
						currentcolortransfer
						{4 mul HiVal mul round cvi 3 add Lookup exch get HiVal div 1 exch sub}exch addprocs 4 1 roll
						{4 mul HiVal mul round cvi 2 add Lookup exch get HiVal div 1 exch sub}exch addprocs 4 1 roll
						{4 mul HiVal mul round cvi 1 add Lookup exch get HiVal div 1 exch sub}exch addprocs 4 1 roll
						{4 mul HiVal mul round cvi		 Lookup exch get HiVal div 1 exch sub}exch addprocs 4 1 roll
						setcolortransfer 
						tint_image_to_color
					}{
						currentcolortransfer
						{pop 1}exch addprocs 4 1 roll
						{3 mul HiVal mul round cvi 2 add Lookup exch get HiVal div}exch addprocs 4 1 roll
						{3 mul HiVal mul round cvi 1 add Lookup exch get HiVal div}exch addprocs 4 1 roll
						{3 mul HiVal mul round cvi 		Lookup exch get HiVal div}exch addprocs 4 1 roll
						setcolortransfer 
						tint_image_to_color
					}ifelse
				}ifelse
			}ifelse
		end end
	}def
	/indexed_image_lev1_sep
	{
		/indexed_colorspace_dict AGMCORE_gget begin
		begin
			{4 mul HiVal mul round cvi		 Lookup exch get HiVal div 1 exch sub}
			{4 mul HiVal mul round cvi 1 add Lookup exch get HiVal div 1 exch sub}
			{4 mul HiVal mul round cvi 2 add Lookup exch get HiVal div 1 exch sub}
			{4 mul HiVal mul round cvi 3 add Lookup exch get HiVal div 1 exch sub}
			AGMCORE_get_ink_data currenttransfer addprocs settransfer
			currentdict imageormask_sys
		end end
	}def
}if
end
systemdict/setpacking known
{setpacking}if
%%EndResource
currentdict Adobe_AGM_Utils eq {end} if
%%EndProlog
%%BeginSetup
Adobe_AGM_Utils begin
2 2010 Adobe_AGM_Core/ds gx
Adobe_CoolType_Core/ds get execAdobe_AGM_Image/ds gx
currentdict Adobe_AGM_Utils eq {end} if
%%EndSetup
%%Page: 1 1
%%EndPageComments
%%BeginPageSetup
%ADOBeginClientInjection: PageSetup Start "AI11EPS"
%AI12_RMC_Transparency: Balance=75 RasterRes=300 GradRes=150 Text=0 Stroke=1 Clip=1 OP=0
%ADOEndClientInjection: PageSetup Start "AI11EPS"
Adobe_AGM_Utils begin
Adobe_AGM_Core/ps gx
Adobe_AGM_Utils/capture_cpd gx
Adobe_CoolType_Core/ps get execAdobe_AGM_Image/ps gx
%ADOBeginClientInjection: PageSetup End "AI11EPS"
/currentdistillerparams where{pop currentdistillerparams /CoreDistVersion get 5000 lt} {true} ifelse{ userdict /AI11_PDFMark5 /cleartomark load putuserdict /AI11_ReadMetadata_PDFMark5 {flushfile cleartomark } bind put}{ userdict /AI11_PDFMark5 /pdfmark load putuserdict /AI11_ReadMetadata_PDFMark5 {/PUT pdfmark} bind put } ifelse[/NamespacePush AI11_PDFMark5[/_objdef {ai_metadata_stream_123} /type /stream /OBJ AI11_PDFMark5[{ai_metadata_stream_123}currentfile 0 (%  &&end XMP packet marker&&)/SubFileDecode filter AI11_ReadMetadata_PDFMark5<?xpacket begin="﻿" id="W5M0MpCehiHzreSzNTczkc9d"?>
<x:xmpmeta xmlns:x="adobe:ns:meta/" x:xmptk="Adobe XMP Core 5.6-c011 79.156289, 2014/03/31-23:39:12        ">
   <rdf:RDF xmlns:rdf="http://www.w3.org/1999/02/22-rdf-syntax-ns#">
      <rdf:Description rdf:about=""
            xmlns:dc="http://purl.org/dc/elements/1.1/"
            xmlns:xmp="http://ns.adobe.com/xap/1.0/"
            xmlns:xmpGImg="http://ns.adobe.com/xap/1.0/g/img/"
            xmlns:xmpMM="http://ns.adobe.com/xap/1.0/mm/"
            xmlns:stRef="http://ns.adobe.com/xap/1.0/sType/ResourceRef#"
            xmlns:stEvt="http://ns.adobe.com/xap/1.0/sType/ResourceEvent#"
            xmlns:illustrator="http://ns.adobe.com/illustrator/1.0/"
            xmlns:xmpTPg="http://ns.adobe.com/xap/1.0/t/pg/"
            xmlns:stDim="http://ns.adobe.com/xap/1.0/sType/Dimensions#"
            xmlns:xmpG="http://ns.adobe.com/xap/1.0/g/"
            xmlns:pdf="http://ns.adobe.com/pdf/1.3/">
         <dc:format>application/postscript</dc:format>
         <dc:title>
            <rdf:Alt>
               <rdf:li xml:lang="x-default">2ColUncoated</rdf:li>
            </rdf:Alt>
         </dc:title>
         <xmp:MetadataDate>2014-12-02T15:13Z</xmp:MetadataDate>
         <xmp:ModifyDate>2014-12-02T15:13Z</xmp:ModifyDate>
         <xmp:CreateDate>2014-12-02T15:13Z</xmp:CreateDate>
         <xmp:CreatorTool>Adobe Illustrator CC 2014 (Macintosh)</xmp:CreatorTool>
         <xmp:Thumbnails>
            <rdf:Alt>
               <rdf:li rdf:parseType="Resource">
                  <xmpGImg:width>256</xmpGImg:width>
                  <xmpGImg:height>208</xmpGImg:height>
                  <xmpGImg:format>JPEG</xmpGImg:format>
                  <xmpGImg:image>/9j/4AAQSkZJRgABAgEBLAEsAAD/7QAsUGhvdG9zaG9wIDMuMAA4QklNA+0AAAAAABABLAAAAAEA&#xA;AQEsAAAAAQAB/+4ADkFkb2JlAGTAAAAAAf/bAIQABgQEBAUEBgUFBgkGBQYJCwgGBggLDAoKCwoK&#xA;DBAMDAwMDAwQDA4PEA8ODBMTFBQTExwbGxscHx8fHx8fHx8fHwEHBwcNDA0YEBAYGhURFRofHx8f&#xA;Hx8fHx8fHx8fHx8fHx8fHx8fHx8fHx8fHx8fHx8fHx8fHx8fHx8fHx8fHx8f/8AAEQgA0AEAAwER&#xA;AAIRAQMRAf/EAaIAAAAHAQEBAQEAAAAAAAAAAAQFAwIGAQAHCAkKCwEAAgIDAQEBAQEAAAAAAAAA&#xA;AQACAwQFBgcICQoLEAACAQMDAgQCBgcDBAIGAnMBAgMRBAAFIRIxQVEGE2EicYEUMpGhBxWxQiPB&#xA;UtHhMxZi8CRygvElQzRTkqKyY3PCNUQnk6OzNhdUZHTD0uIIJoMJChgZhJRFRqS0VtNVKBry4/PE&#xA;1OT0ZXWFlaW1xdXl9WZ2hpamtsbW5vY3R1dnd4eXp7fH1+f3OEhYaHiImKi4yNjo+Ck5SVlpeYmZ&#xA;qbnJ2en5KjpKWmp6ipqqusra6voRAAICAQIDBQUEBQYECAMDbQEAAhEDBCESMUEFURNhIgZxgZEy&#xA;obHwFMHR4SNCFVJicvEzJDRDghaSUyWiY7LCB3PSNeJEgxdUkwgJChgZJjZFGidkdFU38qOzwygp&#xA;0+PzhJSktMTU5PRldYWVpbXF1eX1RlZmdoaWprbG1ub2R1dnd4eXp7fH1+f3OEhYaHiImKi4yNjo&#xA;+DlJWWl5iZmpucnZ6fkqOkpaanqKmqq6ytrq+v/aAAwDAQACEQMRAD8A9U4q7FXYq7FXYq7FXYq7&#xA;FXYq7FXYq7FUt8w+YNP0DR7rVr/1Ta2aepMsETzyU6CiRhj9PQdyBiqC1q71nVPJsl/5WuUttQub&#xA;VbrTZZY1nU8k9REKhuPxg0qCadd8VYM3nK6a+8rp5qV7O9N5bvp99ayzJpmqxXSGJKKG4LKjTJKY&#xA;ZakcfhJGFWQef4LUea/IV5LDE7JrEsCvIFJHq6fcleNd/toGH+UBgVQ/NWOw0668r+bbmHmNE1SN&#xA;LhwnNvq96jW5oBueMzxsPcYqn/l2y/Q+j3epapI8VzeNLqOpLJLJLHb86yGJAzOFWFPh+AAGlaYq&#xA;x78t/OHmTXNP0ya7udP1A3iyS3sETC3vbKElzA00IaUSFgEVgFj4lu+Ks9+tW31n6r6yfWSnqCDk&#xA;PU4Vpy49eNdq4qqYq7FXYq7FXYq7FXYq7FXYq7FXYq7FXYq7FXYq7FXYq7FXYq7FXYq7FXYq7FXn&#xA;dxbR+SfO13qckc8/lrzSoGozFZ7trW+iLcOVBK6wTpIVA+yjCmwOKqvkL695b0TUl1Z4NN8m200k&#xA;vl65u5TDcQ2cjlljnjlVVjRK/uuTcgtFZQRirEZfzm/LbS9GXQNKt9T87Q2RAVo7YTRoVblGDIyQ&#xA;qBGQOHBDTamFUFefnj5n1CSC5H5f2oih3t5tS1G2jkQsQagSohQ/CNuu2Kq8v56+cFirq/kGK5sw&#xA;UlH1XUra6YGMiRGESpJyYOFZaUI6jFUTqv51fl/5r0C40HzH+mPKMWpxvbyXFxbmNWDLRkWULMvE&#xA;g78lGBXonlloPqlxrUF3Y6vam2iitbrSrcCWSG2DssbMskwkYc/hVeIBJ232VeYXNx5l80a1+m7b&#xA;T1i1bX4rqy8nzXEpgk0mHT5gJp5o+DN60jnmVFdh6bClalXui8uI5EFqbkCgr8t8Ct4q7FXYq7FX&#xA;Yq7FXYq7FXYq7FXYq7FXYq7FXYq7FXYq7FXYq7FXYqw3zv5zi0nUtP0d7xtES+POXX7i3ZrOLjut&#xA;uJpB9XE03E0DtsoP7RXFU70bzJb6jHa+tby6fdXqzy2tpcjjJJDbuqGUAVoGEqMA1GodxscVYh+a&#xA;f50aN5KKaXaoNT80XQH1XTVbiic9lkuH6Ivelan2G+KvFnt7nzXdRav+YOuJqNwpEtvpMN4tva2x&#xA;3/dmH6peRPSu5B37lsNLbK7FNCtYzBYxxQRCjmKCa1Rfi6NxTRwN6dcULy8ZhlWSVQxB4MkkW3zA&#xA;0utfcEYVUWvZfrIRYbYRMoKSLO4YgCvEq+lyIhrsSanFWriHS7qCOPVIIrnkVHp84JEDECuzaO3w&#xA;8hWpA7YFSaHy/d6Ffy6r5K1NtC1GQhpU+s+rZS0r8D2aafbp4b8tvDGk29C/Lv8ANjQvN+vWGneZ&#xA;IF0nzxpPqC3jSUG3uBPHSQQsGZSSoDFDuKbE74FT/WJtc1bzN5Wjn0yYW0N/fpq1i8Mj2wt/q8yW&#xA;80k5X0GNVVlFer06iuFWWaNbRaHpOl6Rd6i13cRxraw3N0yie4eOMselOTcELdzQVNdzgVNMVdir&#xA;sVdirsVdirsVdirsVdirsVdirsVdirsVdirsVdirsVS/zDqF9p2iXt9YWT6lfQRM1rYxbNNLSiJX&#xA;sC3U9hirGbTz35B81Wk+haw0VpezAW9/5e1YCCcO9F9PhLx9SrMOLR1rtTFWG+cNc/5Vbo8WlaZd&#xA;ya75z1cyW2g/XG5m1sVctGpLsfghWgqxrIwqdloqrwjUdQu/K31nUby5uNS8wahqFxBeahFeXVsJ&#xA;EhgtptzG0TsS91+14YUqH/K5/MVKevqdOlP01qn/AFXwLT1zyJ5XvvOXlhta8teaJHvBGUuLC4ur&#xA;/nBcdRE/O4mUBqbScOnTChi0KaxFeTWmq6readeQSGC9t7jUNRVoXEHOMj9+gcST0hJWoBaNh8Lj&#xA;FUpi1bWDqNrp1nqV5qt9eJB6VtDqeoM5mljEjxR8JFDGNnVGYkLy5dkY4q9A84+UT5L8pJrfmbzT&#xA;dW19IgEWlQXWozNJcFa+lG5vY+QX9p+IAGKvF5PzS1N6ANqEdK7pq1/U7bfbkfBaaX3t+3mOx07U&#xA;frN7b38Opw2cVzd30t16YmUv6iM4DRlWQHY4VfR/5Ufmrrmv6JqXl68FvP590SAtCskgEN+gUGOb&#xA;mnTlVQ+21Qe5ACGSaH5EvtUurHzL54ne816EpcWOnQu8Nnpr7NwhSNv3kg+y8jk8unTFWWaNrNvq&#xA;ttJPDHLA0MskE9vcJ6cqPGejLU05KQ6+KkHFUfirsVdirsVdirsVdirsVdirsVdirsVdirsVdirs&#xA;VdirsVY35t8veY9TuLC80TXDpFzpplkSFoRPb3DyLwC3C8kJQLWlNwTXqBirGtCgnrKnnjQILV/K&#xA;bHVx5hE3qW89xL6ryTwgojgAcmZW+yeI7A4VeU+W7vU/NnmbVfPt/aTM1+5h0dWivB6NlGSqKjW9&#xA;xZg8gPi3YV32qcVLzT8z5GkXmyspOs6l8LiVWFLXTxuJ3mlH+yc4CkMAxSyTyF591/yRr8WsaPLR&#xA;hRLq1cn0p4q1McgH4HqDuMVejfmx5u0zz5q+leY7dY4NDeyjtbnmq+rHec5Ga2nkNONfh4Sb8VPJ&#xA;R9vCxS78nvNOleTfMGpebLmxH6LtLWa2jIIkL3MvpejbQSMB+9+FzJIpoUJNAKYEsK8++fdf876/&#xA;LrGsS1Y1S1tUJ9KCKtRHGD+J6k7nFLG8VZv5Tgk/QmlyJyZpPMlmiLGJC/JY6/CIiklTz24MG8CD&#xA;hQXp/nBdZ8u6hpvnOwgnOp6DPW5lNvqiNNZ1pJFK148qKOMhrxAoD16YoD3C8k81+af0bdeW9Yh0&#xA;3ypqNmtzJqEUKy3/ACf7McXqFok5I1SxQlSKYFRnljye/l3VLg2VzLPpl3Ar3bXk8tzdS3yuQZ2e&#xA;Q0FYqK1OtFoF47qsnxV2KuxV2KuxV2KuxV2KuxV2KuxV2KuxV2KuxV2KuxV2KvNdB1LzjBNqes6P&#xA;oGn6xp2q31xKZbe8+rX5ETmGMSpNEIiRHGoC+oKd8KpH+dvm/VJvyeiSayfR9U8y3cem/UZZEaSJ&#xA;DKxbk54J8ccO/YcuvfArE7HRtH0u3RbaSyWOFFSlPL0xIRQgLepPK7tQdWqcKED5K8i+XvzBuNd0&#xA;i9ZUIuNRnsrq3EH7ibhpyq6C2pAy/aUquxHgeil4t538ka95M16bRtZh9OaP4oZlqYpoifhkjbup&#xA;/Dod8DJCeW/Lmo+YNR+pWSiqL6txIxAEcQZULnfejOBQYqS9i1P8ifO3lDy/qmteW9ZsvMGkyWs0&#xA;er2iCiyW6qWc8Czo5ipyWjhwR8O+KLUbL8h/zB82aXo+oa3qmnaLpz20MGi2MjtVY3QemqRKOPOX&#xA;Zm+MuxNTvitvEGR0NHUqSAQCKbMKg/SDXFLIvIXkLX/O+vxaPo8VWNHurpwfSgirQySEfgOpOwxV&#xA;6l+Y/kTRfJupaD5dsGLWqX+lvc3E5j/eSy+sJZXExEKhuI2YhQAK7b4WLJ5dI0aaGSCY2DxTKEnU&#xA;t5fHMANQkrcg1HLanTtihPvyI81XGkfljrVjPBLqc3lC+ngMFoUllltiwlrDwZkdvik4qrkGgo2+&#xA;BKd655n813ep6dqWp2N95T8r6ZNFdszwi8uLyT1OBhnWzklW1hEbElpD1of2aEq9TwK7FXYq7FXY&#xA;q7FXYq7FXYq7FXYq7FXYq7FXYq7FXYq7FXYq8T/5yGeeXzN5AsY5PSSS5vroyBzGwa1iiZSHCS0+&#xA;2f2TiqVm/wCCErqUvrqKGKe6vGRm23DQaSaD6ThQi/yH/e+cddufWExefUEZwzPUqNOrRpI7eQ0J&#xA;I+KNflil6V+ZH5b6D580F9M1NPTuI6vYX6AGW3lI+0vip/aXv86EBXzH5D8max5R8++YtE1qP0bu&#xA;10xmhcD4J4zfWypJGT1RlqR8qHeuEJL3bzbZ2sGl63cXvlx9CvJLW6WLV9MkWSC4rE4VLowiNvj6&#xA;fvoioJ2blQ4oTDytYKbuwuLPy0Zpo44ornzDqUgQosaBWWyRxLPwHH4eKxo3UE9cVfLNn5C1nzr5&#xA;n0PSdGgVJ7jSrKS9nP8AdQxxxCIzSU6fAi7dSenXAm32D+Xv5e6B5G0CPSdJjqxo95eOB6txLShd&#xA;yP8AhV6AYoeK/wDORVB5z0WiH47/AE/1JAStOPqcQCElIPxNuEb5HphVNYr20C0fVriR6EALc3iA&#xA;16fa0civ00xQivyDkuIvPvny1eQyxyDTrgSFzJVjHIC3Ix29eVd/3Y6d+pCXuJAIIIqDsQcVdirs&#xA;VdirsVdirsVdirsVdirsVdirsVdirsVdirsVdirsVQ/6Ps/0gdQ9JfrpiFv6/wC16Qbnw+XI1xV4&#xA;5/zkJHOnmn8vryEcjHeXlvxIlIP1hIR1glt5K0Q0CuK4qgb83ohf0YLiJmIEVBqRapOw+PU1U4UK&#xA;/wDzjwki6rr/AKtfV+vX/IlWU1K2J+y0k7D6ZG+eKXoP5nfmdoXkDQmv79hNfTArp2nKaSTyD/iK&#xA;L+03b50GBXzL+X/njVPMnnzzBq2tyyXWp6rpwt7SzgVnZ2+v2rpbW8YDkBURm9gCx7nEJL2zzjrK&#xA;6N5b1yWS91vT4prG6P1PWYTc2krPC/GGO6HMwyMTxQGalafC3TChH+W77TtSttM1ZIta8wvaQRSw&#xA;/VAbXToSsYIWKJpLSG4KdK/vDX7gq+WNJ89+afKPm211a1/0XVdPQ2l7ZOjIhVJGDW8qHtQAe3bc&#xA;YE0+yfy0/MvQfP2g/pLTaw3EJEd/YSEGSCQitDT7St+y3f51AUPHv+ch5Lj/AB3oEUMdX+v2LxP8&#xA;RJcFhxCpJA57dJFPgw64VCaWrX7orPDcgxFllQJqDM5p0IGqFQd9viGKEZ+QPrXXnfz5qEnIKraf&#xA;bIGLGhSOTmpLy3L1Wg6yHr9GBL2dtOsm1FNRaIG9jia3Sfeoidldl8N2QHFURirsVdirsVdirsVd&#xA;irsVdirsVdirsVdirsVdirsVdirsVYbd23nbXddvhp+ujQNF06QW0aW9tBcXNxKI1eR5HuVlSNAZ&#xA;OKqq1NK13GKsE/O611O//LmXUJ2ivdW8lavBPLcRxqI50VUJJicSoPguUMikFaqe22Khj+maxot9&#xA;YxXMcumN6ihiAmgBlr2dBbOUb/JJrhQlXkn8ztD8h2vmLVrsfWpbjU9Sh021g9PjNKFsyByhAiSM&#xA;U3KigHQdsUvEfNnm3XfNetz6zrVy1zdzH4QT8EaVJWONeiotdgPn1wMkstbu6tJlntZnt51rxliY&#xA;o4qKGjKQemKs5/LbSvzH86eZYNO0fUboiJllvLq4keW2giB+1KjlkevQIR8XTpXFBQX5meXvPHlj&#xA;zJd6Z5luJ55Z2Msd0Xcw3MZO0iV2p/k/s9MVDDcUsg8ked9e8ma9DrOjTenNH8M0LVMU0RPxRyL3&#xA;U/h1G+KvV/P35gaN501fyr5htIzHE19BDdW04iYRTqo5IxmVoWUFgeTLxp17jCxZXcajpENvJLJL&#xA;p6wxqZJAqaFuFU9vqnbFCZ/ktot7L+VupXUeojQtT866jcNpl5xAeJSCiiNE9EcwsMrJx4jpTAlm&#xA;eman+bEc/pFNL1zTor9bKXUgs1nc+ksiJPMbcGaJ/TJdTxdd16Yq9BxV2KuxV2KuxV2KuxV2KuxV&#xA;2KuxV2KuxV2KuxV2KuxV2Ksb17yRBqt091bavqeiTz8frbaXOsIn4rwUyLIkq8goC81AagArsMVS&#xA;y4b8vtDtrT8u5phXXI54Gtnk9aaT11YyTXLuWflM70Dv9pyAMVeKeUE1ry1rmpeSb66ujqOiO31N&#xA;o5dQBlsm+OOWNLUkhQp+LoACB44VLyz8xY7kStJcszyz6rqUrM5lLE/6OpJ9estfh/b3wFIYXill&#xA;H5efl5r/AJ61+PSdJj4otHvb1wfSt4q0LuR3/lXqx+khVl/5bfmf5v8AKXlu9stMtZ44ijSW0kGn&#xA;xyo9yzCjXMrcXKhQV6n2Hw/EoKJ86ed/PXnry1p2j6xp11LfLd85bp9NVEjjZUAaKVKOpDc+XwgM&#xA;pH8u5V5v5l8p655buLaHVbcxC8t47uzmG8csMyh1ZG79aEdjgSk+Ks08r8/0ZoHDkH/xFHxKepzr&#xA;whpx9IiSvhw+Lw3xQ9a853XmXXNQsfy/sbu9Gq666perNNqi+hZijSSSxXUi1VlB6qQQG70woD2h&#xA;NC/LfVtPi8pz28F/aeWVSNbaZW9KJo4vT5cqLG7qr0Ygkqx3ocCq2h/lvpeg6zBe6TfahBp8Kz00&#xA;V7ueez9Wcr+9VJXfiV+Pbp8VdsVZbirsVdirsVdirsVdirsVdirsVdirsVdirsVdirsVdirsVS3z&#xA;JpNzq+h3mnWt/Npd1cRlbfULYkSwyDdXFCtQCN1qKjbFWK2P5VWGny39rY3DQaXqlrGmoTktNqUt&#xA;4khb6z9blLFWpx6ht91403VS786PysfzVYW+t6MqDzZoylrJ3ClbmMVLW0ldt9+BPQntWuKvlLXv&#xA;rmrafNGlo8V9pV7dzX1hwKSQwzrD/uv7XGKWKQOx6clr1xSFP8ufy38w+e9cXTdKj4wRlWv75x+6&#xA;giJpyY92O/FRuflU4pfbnkPyHoHknQItG0aLii/Fc3LU9WeWlGkkYd/AdANhixfG35h+bI/zG82W&#xA;8mhaJBpEawFFtUMMfJl5zTTzS0hQfDuWbYKta9cUoT8stftPLvnG0Oo6HBrHKf6u9ldKmzSK0VB6&#xA;iOFYSMhrTahHfFS+wvMvknyx+Y3kWztb21+rQXFtFc6ZKiqJbRpIwyenTagBAZehH0YofGPnL8u/&#xA;MvlTzTJ5cvbZri9PxWjW6tILiI14yRAAsa03HUYsrVuM2kxaNoxRbzVY79r2awh/ekSMIkt7ZuO3&#xA;qM0Z5qK05AfaBXFD6u/Jb8rZPK9pca/riRt5t1gBrz00REtojQi3jVPgHT4yveg7VKhCXd8lz5eb&#xA;yB5m0bWo7uIiFZdJhkMOoJGxZJUu0+BPVoHl9Vko1eRpXCr0XyvY6tY+XdPtNXu2v9ThgRby7alX&#xA;kp8W6hQadK036nAqaYq7FXYq7FXYq7FXYq7FXYq7FXYq7FXYq7FXYq7FXYq7FXYq7FWN+f8AzdH5&#xA;Y8vy3MPGXWLs/VdDsW3NxfSjjDHxqnw8qFzUUWu+KvOPPH5Vw+fZZb22QeWfzI0pYXuriBnNtN6i&#xA;n029dFVmB4EK9A60oykUxV4+Y/NXlLVjp/muefRNUdnaPUXtbaWC4CfZb64FEz9P56+4JphVlsGo&#xA;/mgUhk0XVhqtnKPUFyZ9YjHAAKFT07i4gG29BX5HcYqw6w8n2+h60sE+lz2N3cloIZZ/UuIZUuI2&#xA;jlis5OVlG8pjZgsMw3/mY0VlVB9CfzZ5r1fW9D0t72We+uLua8klmTT4pppTN6Ub24E0zJy+2roP&#xA;8noxU2yKe3/NSxs1F9qlrpWlwRrFG8r3dzHGqbxoBfmROI6UJ2HbFDHTomueYr59B8rX115hvH4i&#xA;9OnQpZaXRj8RuGjESkbdT17NXbFXuv5Q/kbonkkyX1zPb6r50ih5GrfurT1gwQItC458SPUK1Irx&#xA;HXAtoGPUfOWnee7RL4zP5vVp5bmzuNSa20TUbAxskYsVeOQLJHLIjcOHIcTyb4q4VewaJeateWKz&#xA;6pp/6LuixBtPWS4IApuXQBdzXp2+4BUfirsVdirsVdirsVdirsVdirsVdirsVdirsVdirsVdirsV&#xA;dirsVdirD9f8jx3HmP8AxHb28eqXUlu1jPpmpTSG2WGQBXe2qsywOVFHCx0ceBJJVTS9u9L8m+T5&#xA;bmVpGsNHtSxMsjzTPwGwLvyZ3dtt+pOKsTs11a08s+XNP/MD0dei1ySGzvILuCIyQXc8bSRq1AI5&#xA;FXj6Z+AMG+Kp6Aqxvzd+RH5T2GoWk9vqNz5Vu9Sm9C0SGTnbSztuIyk6yCp/ZTmB4DbAqU65/wA4&#xA;3+YZ4Gsk83WU0VyfghudLt4ZKr0McsZMgI/yae+2Kr9G/wCce/Ntpp0Whr5u0+1t4CzvFDpkNxM3&#xA;Jg3J2mYNWu1fDbCq3/lU/wCUGhXN5/irVdS1+fTRHPqULJOtrbI/IJM8dog4IaH9sjY9q4q9K822&#xA;OqeXPKEc3kS3tbO00547q8sLa3UyXFnEQ0yW5B4CVo1NCysW8Qd8CpLfXukeXvMmmeevL8bXej+c&#xA;Vjt9YtrKN5ppnKmS0vY4kqxKcjHIAP2h3xVnuteWdC1yXTptVs0u20u5F7Y+oDRJlVlVqd6cq0Pc&#xA;A9QMVTTFXYq7FXYq7FXYq7FXYq7FXYq7FXYq7FXYq7FXYq7FXYq7FXYq7FXYq7FUo8zeVdH8yWUV&#xA;pqiO6W80dzbsjshSaJuSPQfC3Ejo4I9sVS9/Jct5r2natrOqzaiujlpNNsvTjhhWd1Mf1iUIP3kg&#xA;RiF6KtSQuKoLXhNe/mf5YtmtpjY6db39610YZDB9adEghQS8fT5iKSVqVxVZ+Zvl/Rdbfy7aahIL&#xA;Wd9RZLG/RhHcQTGzneJ4H2YN68cRoOpABxVS8iTahc+atYXzBZpF5m0uxsrO5vUjCxXMLS3LpcQN&#xA;SoSbiOafsstOwxVL/wAw/L/13ztp4a11C50zWdLu9O1r9HIwokTpLa+rLTgAzSSrxZqGu9VrirMv&#xA;JcHmGDytp0PmJ1k1mOLjduoQbhjw5en8HIJxDcdq1piqppHlLy1o1xLc6XpsFnNLy5PEgFA7c2VP&#xA;5FZtyq0GKptirsVdirsVdirsVdirsVdirsVdirsVdirsVdirsVdirsVdirsVdirsVdirsVdirsVd&#xA;iqySCGRkaSNXaM1QsASp8RXpiq+grWm52J+WKuxV2KuxV2KuxV2KuxV2KuxV2KuxV2KuxV2KuxV2&#xA;KuxV2KuxV2KuxV2KuxV2KuxV2KuxV2KuxV2KuxV2KuxV2KuxV2KuxV2KuxV2KuxV2KuxV2KuxV2K&#xA;uxV2KuxV2KuxV2KuxV2KuxV2KuxV2KuxV2KuxV2KuxV2KuxV2KuxV2KuxV2KuxV2KuxV2KuxV2Ku&#xA;xV2KuxV5z5Z/M3zjrnl+31pfI11FaTwC4WVr21RXQjlyjWQpKVI3UlBUdMVWeV/za1zzToA1zQvJ&#xA;91eWJd41/wBMtI3LRmjALI6dMVVofzS1c+R7/wA0zeWLhW0y5uodQ0wTRieCG0rzlYvwDUAqQv0V&#xA;xVMvy1/MKfzzpJ1iLRp9N0tyy2tzPLE/rMjFH4oh5AKykVOKpf8Amj+bQ/L36tPfaHcXum3REcd9&#xA;BLEFE1CxiKMeYPFa1pTFU41Xzdrmm+TW8xTeXLhriBGmvNIWeAzxQIrM0nKvBiqrXgpr4b4qkvlP&#xA;80td816JDrei+UribT52dY5HvLWMkxsUb4WYHqMVT3yp5v1HWNV1TStS0O40S90uO2mKTywzLLHd&#xA;GUI8bws60Bt2rvirIbqSeK1mkgi+sTojNFAGCeo4BKpybZeR2qcVec+UPzku/M3my88tQeV7u1u9&#xA;Lcpq0k09vwtuL8CTxY89+nCtflirL/OvmS68t+XrnWoNMl1WOyVpruCGSON0gRGeSUeoQG4Bfsjf&#xA;wxVJPy9/Mi7876Fca1ZaDPaWSq4sXnnh/wBJljJBRQpJQchTkwpiqUeX/wA9tHvvPUvkrWNMn0HW&#xA;UYxILqSJ43mADLEHjJFXU1Q9G6dSKqvR76a5gs5prW3N3cRozRWwZYzIwGyB3oq18TirFfIvn3U/&#xA;NRv2by9caXb6fLNaSTXE8Dcru3cJJCFjJb4TWr/Z274qkWlfnPfah58l8k/4Uu4dZtaPehri3KQw&#xA;kI3rFg1GXjKpHHc1xVU/MH85Z/JGq21lqPlq6mtr+QxadfxTwelMw41G5rGfiH26Yq9DtprqSyjl&#xA;nt/QuWQM9tzD8Xp9jmNj88VYd5U/MXVfMGv6lpK+Wri1j0eZ7bUL57iBoVnVOaxpxNXLbdPs13pi&#xA;qU6d+cmq6h5wv/J8HlK6GvaZF9Yu7d7u1VRF+7owflxNROhFD0OKp1N578y2WoadBqnlK5tLPULq&#xA;Gz+vrdWs0cTztwXmsbF6V70piqB/MP8ANqXyTqtjZ3egXN3banIsFhfRTQhJJTxqhVjyQgv+0KHt&#xA;iq/XPzXm8sLBcebfLd/pOlzuIjqkT295bxM3T1vQcyJX/UOKs6tLu1vLWG7tJVntbhFlgmjIZHRx&#xA;yVlI2IINcVYdpn5gav5gimv/ACroQ1PRYZpII7+e7W0+sNCSrtbRmOXmnMcQzsld8VR/lLzpceZN&#xA;D1LUItIns7zT7m4szplw6LK09uoJQsPgXkzcQakd8VY75M/OG780ear3y7D5Yu7S50qQx6vNNPBw&#xA;tiGKb8W+OrKacK169MVROk/mL5s1S91SCx8m3Fza6df3dguoC7tooZfqk7w8lExR9+G9AQDtXFUH&#xA;5Z/OHVvM1xq1vo/lK5uJtFnNrfI15ax0lBYcVLsobdDv0xVMNJ/MPzRf22tsfJ91DqGjTxRHSmuI&#xA;fXlSSMyGVXNImHYBWNfHtiqj+WX5vR+frq+is9GmsItOYJePcTRc0kavFfRHx78CK4qivMH5j6lp&#xA;vna38pWXly51O8urf63BcRTwJH6IPF3fmaoFYU+Lr2rirLb6KKHSLiKJFjijt3SONAFVVVCAABsA&#xA;Biry7/nFv/yU9t/zGXX/ABMYqWafmTDDH+W/m700VPU0jUXfiAOTG1erGnU7Yq88/IXz95V0r8p9&#xA;DsL66kjuofrXqIttcyAcryZx8ccbKfhYdDipSD/nJ/zp5c1zyDYWmmXLzTpqsMrK9vcQjgLa4Unl&#xA;LGi9WG1a4pD3Dzt/yhmv/wDbOu/+TD4oeTf84++fvKGj/lbptjqWpR213HLcs8LK5IDTuw+yp6jF&#xA;S9V8n+cNG82Wd5qOkcntLe6kslnZShkMKqWYKwVgOTkCoxVPsVeJfk1/5OT80f8AmLj/AOTs2KvU&#xA;/O3/AChmv/8AbOu/+TD4qwb/AJxl/wDJQaV/xmu/+oh8VKVebPyxsvPeoeeoUYW2u2Gp2s2jagNm&#xA;jl/RNmeDMN+D8RXwND2xVN/yW/M6816G48q+aAbXzrodYb2GX4WuEjPH1h2LdOdP9YbHFWS/l2AI&#xA;PMAAoP09qJ295q4q888p/wDrWHnP/tjQ/wDJvT8Uss/Pvyd/ij8tNTgij53+nAahZUFTztwS6j3e&#xA;IuvzxQ15B/Mu1v8A8nYPN1/Jzl06ykGpfzNcWilW/wBlKVDD/WGKp/8Al1ol1pPlOzS/31a9L6hq&#xA;rb1N3eOZpga/ys/AewxV5Lp/mDRtC/5yl843erXS2ls+lQRJI4YguYbBgvwg9lOKXqNh+Z/k/VvM&#xA;ln5e0u5+vXd1HLOWRHCRpAA1SzqoJJO1OmKHnv8Azk/NFBD5MmmcRxRawrySMaKqqFJJPgBiqO/N&#xA;r8xvKvmPyheeUvKtzH5j8wa6ot7OxsCJ+NGDvLIw+BAioTUnr7bhVnvkLyzdaH5B0jy9qLh7m1sl&#xA;t7pozVQxX4lUnqFrQHFXiHkX8yNX/J69PkLz3ZSjRYpZW0rWIlZh6TuWLKu/qRMzcvh+JSSCDil9&#xA;CaFLod1ZfpPRXims9Tb639ZgPJJWdQpevjRAD8sUPIvya/8AJyfmj/zFx/8AJ2bFXtUUMMKlIo1j&#xA;QszlUAUFnYu7UHdmYknucVeK/wDOOn/KQ/mP/wBtpv8Ak7Pir2sRRLI0gRRI4AdwByIWtAT3pU4q&#xA;8D/M+0uvys/MW0/MvR4mfQ9Yf6p5ksI6CrvuXUVAq4XmP8tdz8WKXqHkHSL4pdeadajCa9r5WV4j&#xA;Qm0s1r9Vs1I/kQ8n8XZvbFDItamig0e/nmYJFFbyvI56BVQkk/IYq8t/5xYljf8AKmJUarRX1ykg&#xA;8GJVqf8AAsDipZx+aEiJ+WvmtnYKDo9+oJNBVrZ1Ub+JNBirGf8AnG6WN/ya0FUYM0bXiyAGpVje&#xA;zNQ/7FgcUljP/OXk0Q/LzS4SwEr6vE6p3KpbXAY/QXGKh6t52li/wRr0vNfS/Rl23qVHGnoOa16U&#xA;xQwf/nGR0b8odMCsCUnuwwB6H12ND9BxUs6sNR8u2/mK70HTwi6lIjanqKQgUVpGWMNLQ7PLTYU3&#xA;Ck/NVOsVeG+Rbq28sf8AOQHnXStWkFo/mER3mlSSkKk3xF+CMaAn94wp/kkYq9G/NDzFpWj+TNWS&#xA;8l/0m8s7mCztI/jnmkeFhSOMfE3H7THoqgk7Yqxf/nGRlP5QaYAQSs92GA7H6w5ofoOKlkXku5t5&#xA;fOXn1YpFdk1O05qpBIppdqm/+yRh8wcVYz+c/wCW+qXs1t578nkwectDpIFjFTdwoN4yP2nVa0H7&#xA;QqvhRVM/yK16XzB5NutbmgFtNqGp3lxLACSEd3BZQTvQHFWI+VLiD/obHzgPUWsmkxxx7jd1isCy&#xA;j3HBq/LFL3MgEEEVB2IOKHzT5Q8tavpf5oaz+VqRH/DM2pQa9Idwosrf98kdB1EknoRt/qHFX0ti&#xA;rw3ynLF/0Nh5y+Nfi0iJF3G7LHYVUe44nFL1jzPqfl7Ro7bWdWC+vbuLewIAMzS3bLF6UKkjk0hp&#xA;t9PbFDyj/nJyeFH8kI7qrfphZKE0+BeHJvkKjFWQfnh+V6+ZdD/TWhxC383aM31uwuYAElm9P4jE&#xA;WFCTtVK9GHucVR35Y/mpB5t8gS6w/H9OaVA66tZ/YInhQtyC7kJLSo8Nx2xVOltvKf5keSbWW+to&#xA;dQ0vVLdJQp3MbsvxcH2ZJEaoqKEHFWB/842aXe6TZ+bNMS5N3oVlrEtvpNzUtHJ6dVlaM9CDRK8d&#xA;q1xVB/kvPA/5y/meEkVi12vEAip4Tyq1P9UmhxV7jirw/wD5xwnhk8w/mN6civXWC44kGqNLccW2&#xA;7GmxxV7hirxn/nK+RF/K+JWYBn1K3CAmhJEcpoPHYYqHrmkuj6VZujBkaCMqwNQQUFCDiqnrOh6P&#xA;rdkbHV7OK+smYM1vOodCy9CVO22KoPQfJflPy/LLNoek2umyTLwla2iWMsoNaNxpXFUTrnlzQtet&#xA;VtNasIdQtUcSLBcIJEDgUDcTtXfFVHQfJ/lby8ZToel22mmegm+rRrHzp05ceuKqWueRfJ2v3S3e&#xA;taNaajconppLcxLIwQGvEFgdqnFV03krylNokehTaTayaNCweLT2jUwKwqQQnT9o4qlf/Kovyv8A&#xA;+pW0z/pGj/piqbaB5O8q+XmmbQtJtdNa5CidraJYy4SvEMVG9ORxVOMVSTzP5K8qeaYI4fMGlwai&#xA;kJJhMq/GlevB1Ida96HFUNo35ceRtGFx+jtGt4nuozBcSuGmkaJgVaMySl34EHda0xVFaJ5L8p6E&#xA;s66NpNrp63S8LgW0axh18G40r1xVS0j8v/JOjX41DStEs7G+UMBcwRKklHBDfEBXeuKp/iqGs9L0&#xA;6yilhs7aO3inkeaZIlChpJTWRyB3Y7k4qkNt+WP5eWt7HfW3l2whvYnEsdykCCRZAa8gwFa1xVk+&#xA;KoRdI0xdWfV1t0GpyQLayXVPjMKOXVCfAMxOKoplDKVYVUihHscVYm/5Sflk7s7+WNNZ2JLMbeMk&#xA;k7kkkYqq2X5XflzZXkF5aeW9Pgu7aRZredLeMOkiEMjqabFSKg4qida/L/yTrl6b7WNDs7+8KhTP&#xA;cQrI/FRQCrA7DFU307TrHTbKGxsIEtrOBeMMEY4oi1rRQOgxVKIPIPkq31KfU7fRLOHULr1RcXcc&#xA;SpI/rgiXkygE8+RriqFH5XeQ0h9C30lLO3KhZILOSa1ikAHH97HA8ayEjqXBJxVPbfRdJttJGkW1&#xA;nFDpaxGBbKNAkQiYEMgUUFDU1xVJ9L/LfyDpV9Ff6boFjZ3sJrFcQwIjqemzAVxVPb6xs7+0ls7y&#xA;Fbi1nUpNDIKqynqCPDFUm0b8vvI+iXy3+kaHZ2F4gKrcW8KxuAwoRVQOoOKsgxVJdd8k+UtfmSbW&#xA;9ItdRljHGNrmNZOI9uVaYqjtI0bStGsUsNKtI7KyjJMdvCoRF5Gpoo2GKozFXYq7FXYqpXV1bWlr&#xA;LdXUqw20CNJNM5CqiIKszE9AAMVYmn5p+X5DpkiWmoGx1m5is9K1E2rLbzyTtRCpYh1Qj4gzKAV3&#xA;WuKsi1jX9B0WBLjWdStdMgkb045byaOBGehPFWkZQTQVpiqU/wDKzfy2/wCps0b/ALiFr/1UxVMt&#xA;L80eWdWgnuNK1ey1CC1Fbqa1uIpkiFCf3jRswXYE74qlv/Kzfy2/6mzRv+4ha/8AVTFUfpXm7ypq&#xA;8np6TrVhqEnTha3MM5qBU7Rs2KpnPPDbwyTzyLFBEpeWVyFRUUVZmY7AAdTiqR2f5g+Qr26itLLz&#xA;LpVzdzsEgt4b23kkdz0VEVyzE+AxVUPnnySNS/RZ8waaNTEv1b6j9cg9f1uXD0vS58+fLbjStcVT&#xA;vFUh/wAf+RPr31D/ABHpf171fQ+qfXbf1fV5cPT9Pny58tuNK1xVq8/MHyFZXUtpe+ZdKtruBik9&#xA;vNe28ciOOqujOGUjwOKovSPNXlfWXZNH1iy1J0+2tpcxTkU8RGzeOKtax5t8q6JNHDrOs2OmTSrz&#xA;iivLmG3ZlrTkqyMpIr3xVX0jXdE1q2a60fULbUrVHMTz2c0c8YkADFC0ZYBgGBp74ql15+YPkKyu&#xA;pbS98y6VbXcDFJ7ea9t45EcdVdGcMpHgcVV9S85eUNMW3bUtc0+xW7jE1q1zdQQiWM9Hj5svNd+o&#xA;xVD2/wCYn5f3MywW3mbSZ5nNEijvrZ2J9lVyTirIAQRUbg4qg9V1nSNIs2vdVvYLC0U0M9xIsSVP&#xA;QVYjc9hiqUwfmL5FmmSEa5aRSyDlEk8ggLr4oJeHMf6uKo2XzX5Yh0iHWp9Ws4NIuKCDUJp447dy&#xA;1ePGV2VTWhpvirtH82+VNameDRtasNTniXnJFZ3MNw6pWnJljZiBU9cVW6v5w8paLcra6xrdhpt0&#xA;6CVILy6hgkMZJUOFkZSVJUivtiqL0nWtG1i1+t6Rf2+o2nIp9YtJUnj5rSq84yy1FemKozFXYq7F&#xA;XYq7FVA6hYC8WxNzEL1lLral19UqOrBK8qfRirzX/nIPUgfJtt5eguRFdeYtTs9LZVYBxHNJzc+w&#xA;ISh+eKvSIbLT/qttDFFG9tbBDaLQMqemOKFCa04jocVSj8wrO2vPInmG3uY1lifTbuqsAaEQOQwr&#xA;0IO4PbFWHf8AOOtjZS/k35fklt4nc/XKsyKSaX046kYqWc6Npfl231TVb/SViS5uXjg1MQcQvrWy&#xA;kjkq9JOEo5e1MVeS/ltbW9t/zkb5+ht41iiFrGwjQAKC5gZqAeLEnFXpfnX8uvLXm7TpLe/tlhva&#xA;crTVYVCXVvKN0kjlFG2O9K0OKsN/Ifz7rmsx615S8zSm48weWLhraa7bdp4g7R1bbdkaMgt3BHep&#xA;xVIvym06wh/Pv8wvSto09Dj6HFQOHquC/D+Xl3piqafnf+Wln5z8xaBawyCy1aW11H6veKKVkgWG&#xA;SESkDkVBqPbkTiqN/Jb8zNQ1gXPk7zYDbedNCrFcrIfiuYo9vVHi4FOdOuzDY7Kp9HpGlj84578W&#xA;kX1w6FEfX4DnU3cgJr40AFetMVYJ+aFtbp/zkF+Xk6Rqs0wcSyAAM3BmC8j3pXbFVn/OTFrp9vH5&#xA;evNDX0vPz6ig0prMAXkkfF+dQvxMok4da7mnQtioTr/nJi1jm/J+7nuoka7t5rRkelSjtKqPwPao&#xA;YjFQz3yFbwW/kfy/FBGsUY061IRAFFTCpOw8Tiryf82NOsJfz8/L0y20bm45evyUHn6Tkpz/AJuP&#xA;auKsm/5yUs7aX8ndalkjVpLVrR7dyBVGa7hjJXwqrkYpCcNoPlnWfymsbfzFDE+mro0DzTyhawqt&#xA;srGVHP2GSnIEHFDF/wDnGjWtVl/KVrrWpXa1sLm4jsZpak/UoY0bYmpKo/qKPClO2KlD/k0X/MLV&#xA;9S/MjX19cwXb2XlqxkIaOygRVZnVN19VuYBfrse1MVeq+ZPLei+ZNHuNI1i1S6srlSrI4BKmmzoT&#xA;9l16qw6Yqx3T/KY0P8pm8t6h6V59R02eCQ05RuFRyDRgO1O2KsU/5xYtreP8rI50iVZpry49WQAB&#xA;m4sAOR6mgGKlQ/5ywggb8soZmjVpY9RgEchALLySQHieorioesaBZ21nodha20axQQ28SxxoAoAC&#xA;DsMVR+KuxV2KuxVhf5v+crzyl5GvNS08KdUneOz07lTiJ7huKuQdjwFW38MVYL+b3kHy75f/AClm&#xA;uIojJ5ptpbV7fXFFdQuNQlnjR5PX/vCZKttXYdOgxVd528s6RrP5q/l/peoaXZzX80FxqPmSdreJ&#xA;pJxbW6pEs7cayJ6iFaNUdMVez2dnaWVrFaWcEdtawKI4LeFVjjRFFAqIoCqB4DFUq87f8oZr/wD2&#xA;zrv/AJMPiryz8h/IHlvVvyo0PULz699Zm+tep6GpahbR/BeTIOMUE8ca7L+yu/XrikvSfI/k2x8o&#xA;2V7ptpcvcQXV5NfRLMzPKiyhAULuzvJxK/aO+KHm35ff+tJef/8AmEh/Vb4q9sZlRSzEKqirMdgA&#xA;OpJxV4L+QKPrX5l+fvOVsp/Q93cyW9lN+zLznMlR7hFUn/WxVHflZ/5Pv8yP+eX/ABIYq9C8wf8A&#xA;kwfKX/GHU/8Ak1DirFfzo/LTUdUNt508pH6t500KksLRijXUUe5ib+ZgteNftD4TsdlUP+U/5iWn&#xA;nvzY2qpEba/g0SK21S0IP7q4S7csFr+ywPJfuO4xVKPzgsra9/PH8vLS6T1LeZZVkSpWo5HupBwq&#xA;qfnF5HsvJWkS/mP5Olk0nXtKeEXNJHmiuYJpkhMbxylx1delBSvemBQv/OHzBJ5m/wCccBr5h9F7&#xA;+OwuJolqVRmnjDAE/s89gTikPUvIsiSeSfL7xsHRtNsyrKaggwJuCMUPLPzTZf8Alfv5cLUcgJCR&#xA;3oWNP1YqyT/nI/8A8kx5h/6M/wDqOgxSGJ+cPyq1jWfyr0q+0LV9SmvbXT7S6/QVxcvcWV0EiR2j&#xA;9B+QLbfAv2f2ab1xQyn8ufNlj+YH5TXNvptvDYaglnNpl1p0KiOKGcwlF4IKcY35Bl8OnbFWM/8A&#xA;OKOuRnyrqvle5rDqukXskkls+ziKUBeh/llRw3ht44pLOfzg17zd5a8o3nmTy/dWq/o5Uaezurdp&#xA;RIryBCVkWSPiRzr0PTFCzytqvmTWfytl1zXbm3nn1TTHuoorWBoEhSSFiEJaSQuaEb7YqwH/AJx1&#xA;8i+XtZ/LS3vb7679YN1cIfq+o39qlFYU/d288Uf08cUlD/8AOSXkfy/ov5dLeWH1z1zfwR/6RqF9&#xA;dJxZZCf3dxPKlduvGuKh71pn/HNtP+MMf/ERihE4q7FXYq7FWNfmJ5G0/wA7+VbnQL2Z7YSsksF1&#xA;GAzRTRmqOFNOXgRXoeo64qluneQtbu7zTLzzlra662jP62nW0NsLWD6wBxW5nXnKZZVH2eiqTUCu&#xA;+KpNoK/pf/nIDzJqP24fL2k2mlRtvxEl031pqHpyG4OKvUMVSLzp5f1HzD5futGs9S/RaX0bwXdw&#xA;IRO5hlQo6JyZApIb7WKsX8n/AJZebPKWgwaFpPm4fo+2Z2gSbTopGX1XMjAN6o25sT9OKp15f8n6&#xA;1Ya1qWt6rrz6tqF5bx2toWt0gitY4yzkJGjHlzdgWqamnXwVYxov5OeYNI86ah5wt/NrSatqitHe&#xA;rLYoYXRipC8BKtOPprxocVT3W/IWv+YrZrDXvM850mUUurLTbeOy9de6SSlriTg37QUioxVkWj+X&#xA;dL0HQ00fQLePTrWCNltUVSyqxH22BIZzy3arVPjirB/KX5Rax5d86X/moeZ3vLnV2J1W3ks41SVS&#xA;3KilZKx8eikdPfFU113yL5l1LzfY+ZLfzILM6Ys0VhZfUkkjWO5CiVZGaQM5b013FOm2Ks2xVi2i&#xA;/l5omi+dNW806cDBNrUKJfWqgCMzK5Zpl8Gf9odzv1JxVjnm78odY8xedLHzV/il7K60pq6VBHZx&#xA;skKhi1G5P+8Jr8RPX2xVFea/yt1XzjDb2HmfzJLNo0MiyzadYWyWgnZDVfVkLzsR7Cnj13xVll75&#xA;V0G78sv5ZltEGiPbCzFouyrCqhVC+BWg4nsd8VYN5d/LP8w/K9qNI0Hzon6AjY/VIL/T1uZ7dCal&#xA;EkEsYYeFRT2xVQ1f8iWvfMeleZofMt1H5h05vVl1GeGO4eeWoIqlY4441X4VjRaAe5JxVkH5j/l7&#xA;qfnfy9HoU2t/ULJxGb/0rVXaeSNg4NWk+BeS14j78VTnyV5e1Dy75etdFu9S/SiWMaW9pOYRA6wR&#xA;IERGCs4YgL9rFWLad+T36E8+3vmvy3rUmlQ6mytqWjiBJbaX4uT0qy8OTVIIFVJNNjTFVfzH+T+m&#xA;XvmZfNvl+/m8t+aAf3t9aqskM4IoRcW7UWTl33Fe+++KoTzf5C/MvzZ5en8u6j5l0y30+64rdT2u&#xA;mTLPIiMHAPO7dBUqK8aYqnsfknULX8vLTyhp2sfVJLezSwk1P6usjNGsfpuViZ+KM3zNMVQn5W/l&#xA;veeQtMk0hNabU9LLNLBBJbpE8cjkciJFdiVNOhGKrPzU/LO78/2EOly60dN0qJ1me3jtlld5k5AM&#xA;ZGdaLxf7IH04qyfyzpepaVo1vp+oagNTmtlEaXfoiBmjUAKGVWcFhTqOuKppirsVdirsVdirCtLv&#xA;vzVtrG4tNR0qyv8AUlnlFpqCXYitmhdy0RlQReovpqQpCoeVPHFUw8ieT/8ADWnXRubj67rOq3Ml&#xA;/rF8F4rJcy9RGpqVjQDii16YqyXFXYq7FXYq7FXYq7FXYq7FXYq7FXYq7FXYq7FXYq7FXYq7FXYq&#xA;7FXYq7FXYq7FXYq7FX//2Q==</xmpGImg:image>
               </rdf:li>
            </rdf:Alt>
         </xmp:Thumbnails>
         <xmpMM:InstanceID>xmp.iid:f17f31e2-71d2-45ca-9427-48ad87ded77e</xmpMM:InstanceID>
         <xmpMM:DocumentID>xmp.did:f17f31e2-71d2-45ca-9427-48ad87ded77e</xmpMM:DocumentID>
         <xmpMM:OriginalDocumentID>uuid:5B20892493BFDB11914A8590D31508C8</xmpMM:OriginalDocumentID>
         <xmpMM:RenditionClass>proof:pdf</xmpMM:RenditionClass>
         <xmpMM:DerivedFrom rdf:parseType="Resource">
            <stRef:instanceID>xmp.iid:cd62bf40-434c-40fc-8ccd-9f729709b006</stRef:instanceID>
            <stRef:documentID>xmp.did:cd62bf40-434c-40fc-8ccd-9f729709b006</stRef:documentID>
            <stRef:originalDocumentID>uuid:5B20892493BFDB11914A8590D31508C8</stRef:originalDocumentID>
            <stRef:renditionClass>proof:pdf</stRef:renditionClass>
         </xmpMM:DerivedFrom>
         <xmpMM:History>
            <rdf:Seq>
               <rdf:li rdf:parseType="Resource">
                  <stEvt:action>converted</stEvt:action>
                  <stEvt:params>from application/pdf to &lt;unknown&gt;</stEvt:params>
               </rdf:li>
               <rdf:li rdf:parseType="Resource">
                  <stEvt:action>saved</stEvt:action>
                  <stEvt:instanceID>xmp.iid:CF7F11740720681191099C3B601C4548</stEvt:instanceID>
                  <stEvt:when>2008-04-17T14:19:07+05:30</stEvt:when>
                  <stEvt:softwareAgent>Adobe Illustrator CS4</stEvt:softwareAgent>
                  <stEvt:changed>
                     <rdf:Bag>
                        <rdf:li>/</rdf:li>
                     </rdf:Bag>
                  </stEvt:changed>
               </rdf:li>
               <rdf:li rdf:parseType="Resource">
                  <stEvt:action>converted</stEvt:action>
                  <stEvt:params>from application/pdf to &lt;unknown&gt;</stEvt:params>
               </rdf:li>
               <rdf:li rdf:parseType="Resource">
                  <stEvt:action>converted</stEvt:action>
                  <stEvt:params>from application/pdf to &lt;unknown&gt;</stEvt:params>
               </rdf:li>
               <rdf:li rdf:parseType="Resource">
                  <stEvt:action>saved</stEvt:action>
                  <stEvt:instanceID>xmp.iid:0080117407206811BDDDFD38D0CF24DD</stEvt:instanceID>
                  <stEvt:when>2008-05-16T12:18:29-07:00</stEvt:when>
                  <stEvt:softwareAgent>Adobe Illustrator CS4</stEvt:softwareAgent>
                  <stEvt:changed>
                     <rdf:Bag>
                        <rdf:li>/</rdf:li>
                     </rdf:Bag>
                  </stEvt:changed>
               </rdf:li>
               <rdf:li rdf:parseType="Resource">
                  <stEvt:action>converted</stEvt:action>
                  <stEvt:params>from application/vnd.adobe.illustrator to application/vnd.adobe.illustrator</stEvt:params>
               </rdf:li>
               <rdf:li rdf:parseType="Resource">
                  <stEvt:action>saved</stEvt:action>
                  <stEvt:instanceID>xmp.iid:F87F117407206811B628E3BF27C8C41B</stEvt:instanceID>
                  <stEvt:when>2008-05-22T12:59:33-07:00</stEvt:when>
                  <stEvt:softwareAgent>Adobe Illustrator CS4</stEvt:softwareAgent>
                  <stEvt:changed>
                     <rdf:Bag>
                        <rdf:li>/</rdf:li>
                     </rdf:Bag>
                  </stEvt:changed>
               </rdf:li>
               <rdf:li rdf:parseType="Resource">
                  <stEvt:action>converted</stEvt:action>
                  <stEvt:params>from application/vnd.adobe.illustrator to application/vnd.adobe.illustrator</stEvt:params>
               </rdf:li>
               <rdf:li rdf:parseType="Resource">
                  <stEvt:action>saved</stEvt:action>
                  <stEvt:instanceID>xmp.iid:0BC3BD25102DDD1181B594070CEB88D9</stEvt:instanceID>
                  <stEvt:when>2008-05-28T17:02:32-07:00</stEvt:when>
                  <stEvt:softwareAgent>Adobe Illustrator CS4</stEvt:softwareAgent>
                  <stEvt:changed>
                     <rdf:Bag>
                        <rdf:li>/</rdf:li>
                     </rdf:Bag>
                  </stEvt:changed>
               </rdf:li>
               <rdf:li rdf:parseType="Resource">
                  <stEvt:action>saved</stEvt:action>
                  <stEvt:instanceID>xmp.iid:F87F117407206811BB1DBF8F242B6F84</stEvt:instanceID>
                  <stEvt:when>2008-06-09T15:05:10-07:00</stEvt:when>
                  <stEvt:softwareAgent>Adobe Illustrator CS4</stEvt:softwareAgent>
                  <stEvt:changed>
                     <rdf:Bag>
                        <rdf:li>/</rdf:li>
                     </rdf:Bag>
                  </stEvt:changed>
               </rdf:li>
               <rdf:li rdf:parseType="Resource">
                  <stEvt:action>saved</stEvt:action>
                  <stEvt:instanceID>xmp.iid:F97F117407206811BB1DBF8F242B6F84</stEvt:instanceID>
                  <stEvt:when>2008-06-09T15:05:47-07:00</stEvt:when>
                  <stEvt:softwareAgent>Adobe Illustrator CS4</stEvt:softwareAgent>
                  <stEvt:changed>
                     <rdf:Bag>
                        <rdf:li>/</rdf:li>
                     </rdf:Bag>
                  </stEvt:changed>
               </rdf:li>
               <rdf:li rdf:parseType="Resource">
                  <stEvt:action>saved</stEvt:action>
                  <stEvt:instanceID>xmp.iid:F77F117407206811ACAFB8DA80854E76</stEvt:instanceID>
                  <stEvt:when>2008-06-11T14:30:01-07:00</stEvt:when>
                  <stEvt:softwareAgent>Adobe Illustrator CS4</stEvt:softwareAgent>
                  <stEvt:changed>
                     <rdf:Bag>
                        <rdf:li>/</rdf:li>
                     </rdf:Bag>
                  </stEvt:changed>
               </rdf:li>
               <rdf:li rdf:parseType="Resource">
                  <stEvt:action>saved</stEvt:action>
                  <stEvt:instanceID>xmp.iid:FEE440664A3DDD11BD33D3EB8D3A1068</stEvt:instanceID>
                  <stEvt:when>2008-06-18T22:22:44+07:00</stEvt:when>
                  <stEvt:softwareAgent>Adobe Illustrator CS4</stEvt:softwareAgent>
                  <stEvt:changed>
                     <rdf:Bag>
                        <rdf:li>/</rdf:li>
                     </rdf:Bag>
                  </stEvt:changed>
               </rdf:li>
               <rdf:li rdf:parseType="Resource">
                  <stEvt:action>saved</stEvt:action>
                  <stEvt:instanceID>xmp.iid:2F85BBCD703EDD11A8D1DFE8FDCD79D1</stEvt:instanceID>
                  <stEvt:when>2008-06-19T19:30:09-07:00</stEvt:when>
                  <stEvt:softwareAgent>Adobe Illustrator CS4</stEvt:softwareAgent>
                  <stEvt:changed>
                     <rdf:Bag>
                        <rdf:li>/</rdf:li>
                     </rdf:Bag>
                  </stEvt:changed>
               </rdf:li>
               <rdf:li rdf:parseType="Resource">
                  <stEvt:action>saved</stEvt:action>
                  <stEvt:instanceID>xmp.iid:676AE2A5723EDD11A6F1BABF7C5A7A51</stEvt:instanceID>
                  <stEvt:when>2008-06-19T19:43:22-07:00</stEvt:when>
                  <stEvt:softwareAgent>Adobe Illustrator CS4</stEvt:softwareAgent>
                  <stEvt:changed>
                     <rdf:Bag>
                        <rdf:li>/</rdf:li>
                     </rdf:Bag>
                  </stEvt:changed>
               </rdf:li>
               <rdf:li rdf:parseType="Resource">
                  <stEvt:action>saved</stEvt:action>
                  <stEvt:instanceID>xmp.iid:81784906200A11689FE8CB9EA85C5459</stEvt:instanceID>
                  <stEvt:when>2008-06-26T06:08:19-07:00</stEvt:when>
                  <stEvt:softwareAgent>Adobe Illustrator CS4</stEvt:softwareAgent>
                  <stEvt:changed>
                     <rdf:Bag>
                        <rdf:li>/</rdf:li>
                     </rdf:Bag>
                  </stEvt:changed>
               </rdf:li>
               <rdf:li rdf:parseType="Resource">
                  <stEvt:action>saved</stEvt:action>
                  <stEvt:instanceID>xmp.iid:FC7F1174072068119109824FDF4D96F1</stEvt:instanceID>
                  <stEvt:when>2009-08-04T12:07:10+01:00</stEvt:when>
                  <stEvt:softwareAgent>Adobe Illustrator CS4</stEvt:softwareAgent>
                  <stEvt:changed>/</stEvt:changed>
               </rdf:li>
               <rdf:li rdf:parseType="Resource">
                  <stEvt:action>saved</stEvt:action>
                  <stEvt:instanceID>xmp.iid:FE7F1174072068119109824FDF4D96F1</stEvt:instanceID>
                  <stEvt:when>2009-08-04T12:11+01:00</stEvt:when>
                  <stEvt:softwareAgent>Adobe Illustrator CS4</stEvt:softwareAgent>
                  <stEvt:changed>/</stEvt:changed>
               </rdf:li>
               <rdf:li rdf:parseType="Resource">
                  <stEvt:action>saved</stEvt:action>
                  <stEvt:instanceID>xmp.iid:8661C994412368119109824FDF4D96F1</stEvt:instanceID>
                  <stEvt:when>2009-08-04T12:39+01:00</stEvt:when>
                  <stEvt:softwareAgent>Adobe Illustrator CS4</stEvt:softwareAgent>
                  <stEvt:changed>/</stEvt:changed>
               </rdf:li>
               <rdf:li rdf:parseType="Resource">
                  <stEvt:action>saved</stEvt:action>
                  <stEvt:instanceID>xmp.iid:8761C994412368119109824FDF4D96F1</stEvt:instanceID>
                  <stEvt:when>2009-08-04T12:39:19+01:00</stEvt:when>
                  <stEvt:softwareAgent>Adobe Illustrator CS4</stEvt:softwareAgent>
                  <stEvt:changed>/</stEvt:changed>
               </rdf:li>
               <rdf:li rdf:parseType="Resource">
                  <stEvt:action>converted</stEvt:action>
                  <stEvt:parameters>from application/postscript to application/vnd.adobe.illustrator</stEvt:parameters>
               </rdf:li>
               <rdf:li rdf:parseType="Resource">
                  <stEvt:action>saved</stEvt:action>
                  <stEvt:instanceID>xmp.iid:F87F117407206811AFA6A99C165E9A27</stEvt:instanceID>
                  <stEvt:when>2009-11-12T11:05:09Z</stEvt:when>
                  <stEvt:softwareAgent>Adobe Illustrator CS4</stEvt:softwareAgent>
                  <stEvt:changed>/</stEvt:changed>
               </rdf:li>
               <rdf:li rdf:parseType="Resource">
                  <stEvt:action>converted</stEvt:action>
                  <stEvt:parameters>from application/postscript to application/vnd.adobe.illustrator</stEvt:parameters>
               </rdf:li>
               <rdf:li rdf:parseType="Resource">
                  <stEvt:action>converted</stEvt:action>
                  <stEvt:parameters>from application/postscript to application/vnd.adobe.illustrator</stEvt:parameters>
               </rdf:li>
               <rdf:li rdf:parseType="Resource">
                  <stEvt:action>saved</stEvt:action>
                  <stEvt:instanceID>xmp.iid:f0f67131-f09a-4a71-ba1b-8cda4a15bda1</stEvt:instanceID>
                  <stEvt:when>2014-10-06T09:15:35+01:00</stEvt:when>
                  <stEvt:softwareAgent>Adobe Illustrator CC (Macintosh)</stEvt:softwareAgent>
                  <stEvt:changed>/</stEvt:changed>
               </rdf:li>
               <rdf:li rdf:parseType="Resource">
                  <stEvt:action>saved</stEvt:action>
                  <stEvt:instanceID>xmp.iid:186eb1e2-2905-49ec-984e-3681606e393c</stEvt:instanceID>
                  <stEvt:when>2014-10-06T09:16:02+01:00</stEvt:when>
                  <stEvt:softwareAgent>Adobe Illustrator CC (Macintosh)</stEvt:softwareAgent>
                  <stEvt:changed>/</stEvt:changed>
               </rdf:li>
               <rdf:li rdf:parseType="Resource">
                  <stEvt:action>converted</stEvt:action>
                  <stEvt:parameters>from application/postscript to application/vnd.adobe.illustrator</stEvt:parameters>
               </rdf:li>
               <rdf:li rdf:parseType="Resource">
                  <stEvt:action>saved</stEvt:action>
                  <stEvt:instanceID>xmp.iid:c3755875-83e0-407e-8f81-b60d8bf07b78</stEvt:instanceID>
                  <stEvt:when>2014-10-17T11:40:12+01:00</stEvt:when>
                  <stEvt:softwareAgent>Adobe Illustrator CC (Macintosh)</stEvt:softwareAgent>
                  <stEvt:changed>/</stEvt:changed>
               </rdf:li>
               <rdf:li rdf:parseType="Resource">
                  <stEvt:action>saved</stEvt:action>
                  <stEvt:instanceID>xmp.iid:cd62bf40-434c-40fc-8ccd-9f729709b006</stEvt:instanceID>
                  <stEvt:when>2014-10-17T11:41:17+01:00</stEvt:when>
                  <stEvt:softwareAgent>Adobe Illustrator CC (Macintosh)</stEvt:softwareAgent>
                  <stEvt:changed>/</stEvt:changed>
               </rdf:li>
               <rdf:li rdf:parseType="Resource">
                  <stEvt:action>converted</stEvt:action>
                  <stEvt:parameters>from application/postscript to application/vnd.adobe.illustrator</stEvt:parameters>
               </rdf:li>
               <rdf:li rdf:parseType="Resource">
                  <stEvt:action>converted</stEvt:action>
                  <stEvt:parameters>from application/postscript to application/vnd.adobe.illustrator</stEvt:parameters>
               </rdf:li>
               <rdf:li rdf:parseType="Resource">
                  <stEvt:action>saved</stEvt:action>
                  <stEvt:instanceID>xmp.iid:f17f31e2-71d2-45ca-9427-48ad87ded77e</stEvt:instanceID>
                  <stEvt:when>2014-12-02T15:13Z</stEvt:when>
                  <stEvt:softwareAgent>Adobe Illustrator CC 2014 (Macintosh)</stEvt:softwareAgent>
                  <stEvt:changed>/</stEvt:changed>
               </rdf:li>
            </rdf:Seq>
         </xmpMM:History>
         <illustrator:StartupProfile>Basic CMYK</illustrator:StartupProfile>
         <xmpTPg:HasVisibleOverprint>False</xmpTPg:HasVisibleOverprint>
         <xmpTPg:HasVisibleTransparency>False</xmpTPg:HasVisibleTransparency>
         <xmpTPg:NPages>1</xmpTPg:NPages>
         <xmpTPg:MaxPageSize rdf:parseType="Resource">
            <stDim:w>296.999935</stDim:w>
            <stDim:h>108.479165</stDim:h>
            <stDim:unit>Millimeters</stDim:unit>
         </xmpTPg:MaxPageSize>
         <xmpTPg:PlateNames>
            <rdf:Seq>
               <rdf:li>Black</rdf:li>
            </rdf:Seq>
         </xmpTPg:PlateNames>
         <xmpTPg:SwatchGroups>
            <rdf:Seq>
               <rdf:li rdf:parseType="Resource">
                  <xmpG:groupName>Default Swatch Group</xmpG:groupName>
                  <xmpG:groupType>0</xmpG:groupType>
                  <xmpG:Colorants>
                     <rdf:Seq>
                        <rdf:li rdf:parseType="Resource">
                           <xmpG:swatchName>White</xmpG:swatchName>
                           <xmpG:mode>CMYK</xmpG:mode>
                           <xmpG:type>PROCESS</xmpG:type>
                           <xmpG:cyan>0.000000</xmpG:cyan>
                           <xmpG:magenta>0.000000</xmpG:magenta>
                           <xmpG:yellow>0.000000</xmpG:yellow>
                           <xmpG:black>0.000000</xmpG:black>
                        </rdf:li>
                     </rdf:Seq>
                  </xmpG:Colorants>
               </rdf:li>
            </rdf:Seq>
         </xmpTPg:SwatchGroups>
         <pdf:Producer>Adobe PDF library 9.00</pdf:Producer>
      </rdf:Description>
   </rdf:RDF>
</x:xmpmeta>
                                                                                                    
                                                                                                    
                                                                                                    
                                                                                                    
                                                                                                    
                                                                                                    
                                                                                                    
                                                                                                    
                                                                                                    
                                                                                                    
                                                                                                    
                                                                                                    
                                                                                                    
                                                                                                    
                                                                                                    
                                                                                                    
                                                                                                    
                                                                                                    
                                                                                                    
                                                                                                    
                           
<?xpacket end="w"?>%  &&end XMP packet marker&&[{ai_metadata_stream_123}<</Type /Metadata /Subtype /XML>>/PUT AI11_PDFMark5[/Document1 dict begin /Metadata {ai_metadata_stream_123} defcurrentdict end /BDC AI11_PDFMark5
%ADOEndClientInjection: PageSetup End "AI11EPS"
%%EndPageSetup
1 -1 scale 0 -154.086 translate
pgsv
[1 0 0 1 0 0 ]ct
gsave
np
gsave
0 0 mo
0 154.086 li
191.962 154.086 li
191.962 0 li
cp
clp
111.169 69.5104 mo
110.458 69.5046 109.74 69.4988 109.029 69.4949 cv
108.757 69.489 108.269 69.3902 108.017 69.491 cv
107.739 69.489 107.344 69.4309 107.121 69.5433 cv
106.927 69.5415 106.609 69.491 106.456 69.5686 cv
106.051 69.5376 105.645 69.5046 105.242 69.4717 cv
105.157 69.4697 105.056 69.4445 104.98 69.4736 cv
104.459 69.4717 103.988 69.4678 103.476 69.4658 cv
103.476 69.4561 103.476 69.4445 103.476 69.4347 cv
103.486 69.4347 103.495 69.4347 103.505 69.4347 cv
103.505 69.3979 103.493 69.4096 103.53 69.3979 cv
103.778 69.3165 104.096 69.334 104.374 69.3224 cv
104.818 69.2952 105.26 69.2661 105.704 69.239 cv
106.328 69.1944 106.968 69.0838 107.588 69.0295 cv
107.906 69.0004 108.228 68.9811 108.538 68.9288 cv
108.841 68.8822 109.143 68.7775 109.467 68.7523 cv
109.785 68.729 110.082 68.7135 110.392 68.6863 cv
110.634 68.6651 110.888 68.6147 111.146 68.6127 cv
111.352 68.6108 111.555 68.634 111.751 68.636 cv
111.877 68.6204 112.003 68.6069 112.127 68.5913 cv
112.278 68.5856 112.426 68.5972 112.563 68.5642 cv
112.699 68.5642 112.833 68.5642 112.969 68.5642 cv
112.969 68.5836 112.967 68.6031 112.967 68.6204 cv
112.953 68.6263 112.938 68.634 112.924 68.6379 cv
112.748 68.8085 112.49 68.9481 112.28 69.0683 cv
112.133 69.1536 112.005 69.2719 111.856 69.3476 cv
111.724 69.3922 111.592 69.4367 111.456 69.4794 cv
111.367 69.4794 111.245 69.4736 111.169 69.5104 cv
cp
110.733 69.968 mo
110.63 69.968 110.367 70.1715 110.266 70.2239 cv
109.94 70.3829 109.61 70.538 109.279 70.6796 cv
109.081 70.7649 108.885 70.8812 108.67 70.9238 cv
108.271 71.0014 107.809 70.9278 107.373 70.9355 cv
107.193 70.9355 107.051 70.9801 106.881 70.984 cv
106.712 70.9878 106.45 70.9451 106.301 71.0169 cv
106.099 71.0169 105.898 71.0228 105.694 71.0247 cv
105.434 71.013 105.188 70.8637 104.944 71.0092 cv
104.503 71.0053 104.057 71.0053 103.643 70.9801 cv
103.451 70.9626 103.148 70.9278 102.974 70.9956 cv
102.854 70.9956 102.669 70.9742 102.57 71.0228 cv
102.32 71.0208 102.07 71.0189 101.82 71.0189 cv
101.566 71.0169 100.899 70.9103 100.69 71.0092 cv
100.017 71.0092 99.414 70.8889 98.7257 70.8851 cv
98.7257 70.8637 98.7257 70.8463 98.7257 70.8288 cv
98.809 70.8288 99.096 70.5846 99.1851 70.5322 cv
99.476 70.3635 99.796 70.2472 100.12 70.1406 cv
100.314 70.0727 100.502 69.9874 100.725 69.9738 cv
101.229 69.9758 101.729 69.9758 102.229 69.9758 cv
102.656 69.9602 103.078 69.9447 103.503 69.9272 cv
104.558 69.9331 105.665 69.9758 106.714 69.9467 cv
107.061 69.937 107.423 69.9272 107.755 69.9234 cv
107.935 69.9215 108.129 69.9389 108.275 69.8672 cv
109.085 69.873 109.87 69.906 110.706 69.9117 cv
110.706 69.9215 110.706 69.9292 110.706 69.9389 cv
110.716 69.9389 110.723 69.9389 110.733 69.9389 cv
110.733 69.9486 110.733 69.9583 110.733 69.968 cv
cp
107.631 71.428 mo
107.621 71.428 107.611 71.428 107.602 71.428 cv
107.602 71.4764 107.546 71.4667 107.511 71.4822 cv
107.235 71.5908 106.958 71.6994 106.677 71.808 cv
106.528 71.8778 106.382 71.9456 106.235 72.0135 cv
106.033 72.0853 105.832 72.1569 105.63 72.2267 cv
105.421 72.2248 104.949 72.1725 104.79 72.25 cv
104.608 72.2481 104.426 72.2462 104.242 72.2423 cv
104.114 72.2364 103.957 72.1977 103.835 72.2423 cv
103.71 72.2423 103.53 72.221 103.431 72.2694 cv
103.375 72.281 103.317 72.2888 103.257 72.2985 cv
102.983 72.2966 102.722 72.3043 102.448 72.2888 cv
102.287 72.281 102.06 72.1821 101.9 72.2617 cv
101.76 72.2598 101.578 72.2364 101.467 72.2888 cv
101.283 72.2888 101.015 72.2442 100.858 72.314 cv
100.765 72.314 100.643 72.3062 100.57 72.3431 cv
100.412 72.3431 100.209 72.316 100.077 72.3683 cv
100.009 72.376 99.9414 72.3857 99.8735 72.3955 cv
99.6485 72.3935 98.9758 72.3178 98.8323 72.3896 cv
98.6792 72.3896 98.524 72.3877 98.3689 72.3857 cv
98.0858 72.3839 97.8319 72.3314 97.5624 72.2966 cv
97.5624 72.0251 97.9772 71.4978 98.239 71.428 cv
98.4658 71.3659 98.7412 71.428 98.9816 71.3969 cv
99.7882 71.2961 100.661 71.4124 101.469 71.4163 cv
101.89 71.4183 102.301 71.3678 102.743 71.3698 cv
103.026 71.3737 103.278 71.3776 103.551 71.3756 cv
103.701 71.3737 103.856 71.3872 103.988 71.3485 cv
104.238 71.4337 104.703 71.3776 105 71.3853 cv
105.407 71.3912 105.822 71.4512 106.241 71.4454 cv
106.433 71.428 106.626 71.4124 106.82 71.3969 cv
107.09 71.3969 107.361 71.3989 107.631 71.3969 cv
107.631 71.4085 107.631 71.4163 107.631 71.428 cv
cp
103.922 72.7348 mo
103.594 72.7328 103.216 72.9325 102.902 73.0023 cv
102.677 73.0508 102.431 73.0139 102.241 73.1303 cv
101.919 73.1284 101.597 73.2834 101.308 73.3668 cv
101.233 73.3823 101.157 73.3978 101.083 73.4134 cv
100.895 73.4134 100.715 73.4211 100.562 73.4987 cv
100.424 73.4987 100.034 73.5607 99.9239 73.6091 cv
99.7474 73.6073 99.5458 73.5937 99.4042 73.6634 cv
99.2065 73.6634 98.7742 73.615 98.6229 73.6868 cv
98.5667 73.7003 98.5085 73.708 98.4503 73.7158 cv
97.9986 73.7158 97.5429 73.7119 97.0874 73.71 cv
97.0874 73.7003 97.0874 73.6925 97.0874 73.6789 cv
97.0524 73.6789 97.0602 73.6887 97.0602 73.6498 cv
97.0738 73.3784 97.1765 72.8957 97.4731 72.855 cv
98.0684 72.7696 98.7101 72.8103 99.3209 72.8239 cv
99.8425 72.8336 100.412 72.7987 100.913 72.7541 cv
101.124 72.7348 101.337 72.7696 101.522 72.6941 cv
101.936 72.696 102.338 72.727 102.737 72.7289 cv
103.131 72.7212 103.526 72.7153 103.922 72.7076 cv
103.922 72.7173 103.922 72.725 103.922 72.7348 cv
cp
95.7088 72.4012 mo
95.6991 72.4012 95.6895 72.4012 95.6797 72.4012 cv
95.6797 72.3916 95.6797 72.3819 95.6797 72.3703 cv
95.6351 72.3703 95.6138 72.316 95.5886 72.2869 cv
95.4781 72.1085 95.3656 71.9301 95.2532 71.7498 cv
95.0205 71.4783 94.7839 71.203 94.5513 70.9278 cv
93.8475 70.2588 93.0254 69.6888 92.1646 69.3185 cv
91.9881 69.2545 91.8078 69.1866 91.6294 69.1226 cv
91.4317 69.0374 91.2494 68.921 91.0439 68.8454 cv
90.8519 68.7756 90.6426 68.7523 90.437 68.7135 cv
90.2296 68.6728 90.0163 68.6147 89.803 68.5681 cv
89.361 68.479 88.917 68.347 88.471 68.2656 cv
88.0367 68.2133 87.6063 68.1609 87.172 68.1047 cv
86.8249 68.0854 86.4934 68.0931 86.1598 68.0602 cv
84.5952 67.9011 83.0441 67.7499 81.5318 67.5056 cv
81.0161 67.4184 80.5138 67.4145 80.0059 67.3253 cv
79.5038 67.2381 78.9997 67.0927 78.5227 66.9434 cv
78.259 66.858 77.9875 66.7941 77.7316 66.6971 cv
77.4796 66.5847 77.2295 66.4722 76.9755 66.3598 cv
76.8029 66.2802 76.6284 66.2027 76.4578 66.1271 cv
76.3376 66.0495 76.2135 65.97 76.0914 65.8905 cv
76.0332 65.8595 75.975 65.8285 75.9169 65.7955 cv
75.5039 65.4639 75.1781 65.0064 74.8601 64.6032 cv
74.6158 64.291 74.4879 63.9303 74.3715 63.5542 cv
74.3173 63.3662 74.2591 63.18 74.201 62.9919 cv
74.0187 62.1272 74.0362 61.2237 74.0245 60.2775 cv
74.0129 60.0933 73.9954 59.9111 73.9799 59.7269 cv
74.0051 59.0231 74.0497 58.3096 74.0633 57.6174 cv
74.0574 57.4623 74.0536 57.3091 74.0458 57.1541 cv
74.0497 56.4502 74.0536 55.7464 74.0574 55.0426 cv
74.0613 54.5812 74.0962 54.1255 74.0924 53.6854 cv
74.073 51.7892 74.1079 49.8716 74.1505 47.958 cv
74.1351 47.6904 74.1195 47.4189 74.104 47.1494 cv
74.1001 46.8508 74.1331 46.5639 74.1351 46.2808 cv
74.1273 46.1451 74.1253 46.0113 74.1233 45.8756 cv
74.1583 45.4433 74.1951 45.009 74.2301 44.5765 cv
74.2378 44.2392 74.2087 43.9077 74.2087 43.5936 cv
74.2106 43.357 74.2474 43.1166 74.2358 42.8704 cv
74.2281 42.6726 74.1815 42.4826 74.1874 42.2636 cv
74.1971 42.0793 74.2087 41.8952 74.2165 41.7129 cv
74.2126 41.3445 74.1894 40.945 74.1971 40.5573 cv
74.201 40.3343 74.2319 40.0978 74.2262 39.8632 cv
74.2203 39.6053 74.1699 39.3514 74.1776 39.0818 cv
74.2067 38.7639 74.2358 38.4459 74.2669 38.126 cv
74.2746 37.8158 74.2474 37.5191 74.2494 37.2302 cv
74.2533 36.5826 74.2805 35.8808 74.2844 35.2041 cv
74.2901 35.0703 74.296 34.9365 74.2998 34.8008 cv
74.2862 34.5138 74.2708 34.223 74.2553 33.9341 cv
74.2785 33.6859 74.2998 33.4339 74.3251 33.1818 cv
74.3483 31.9778 74.3444 30.7408 74.3715 29.5658 cv
74.3735 29.1626 74.3735 28.7574 74.3755 28.354 cv
74.3638 28.0671 74.3212 27.7879 74.3289 27.4854 cv
74.3386 27.2915 74.3483 27.0977 74.3599 26.9077 cv
74.3658 25.8936 74.3425 24.8757 74.3483 23.8423 cv
74.3503 23.4662 74.3832 23.1307 74.3812 22.7701 cv
74.3755 22.3649 74.3599 21.9267 74.3619 21.4983 cv
74.3638 21.221 74.3929 20.9496 74.3948 20.6606 cv
74.3967 20.4299 74.3503 20.1061 74.4278 19.9083 cv
74.4278 19.8502 74.4956 19.8599 74.5441 19.854 cv
74.961 19.7959 75.4844 19.7417 75.9305 19.8115 cv
76.4791 19.8967 77.0355 19.8056 77.6095 19.8095 cv
78.1194 19.8133 78.6293 19.8133 79.1411 19.8153 cv
79.4495 19.7997 79.7577 19.7824 80.0699 19.7649 cv
80.6458 19.7688 81.179 19.8037 81.7431 19.7997 cv
82.4198 19.794 83.1527 19.7843 83.8565 19.7881 cv
84.0582 19.7959 84.2598 19.8056 84.4634 19.8133 cv
84.7503 19.7997 85.0412 19.7862 85.332 19.7708 cv
85.5724 19.7765 85.7973 19.8269 86.0532 19.8269 cv
86.377 19.8288 86.6718 19.7997 86.9761 19.8056 cv
87.4511 19.8153 87.9631 19.8192 88.4554 19.8444 cv
88.6843 19.8638 88.915 19.8812 89.1458 19.8987 cv
89.8263 19.8909 90.5359 19.8638 91.2028 19.8579 cv
91.6566 19.8696 92.1083 19.8812 92.5601 19.8948 cv
92.9439 19.889 93.3239 19.8153 93.7157 19.8172 cv
93.9929 19.8192 94.2954 19.8444 94.5862 19.8463 cv
94.846 19.8424 95.1058 19.8386 95.3656 19.8347 cv
95.6642 19.8579 95.9627 19.8812 96.2613 19.9083 cv
96.494 19.8967 96.7247 19.8851 96.9554 19.8735 cv
97.4111 19.8909 97.8629 19.9065 98.3165 19.9238 cv
98.5299 19.9083 98.7412 19.8909 98.9526 19.8735 cv
100.186 19.8424 101.351 19.8735 102.596 19.8618 cv
102.867 19.8444 103.137 19.8269 103.406 19.8115 cv
103.962 19.7959 104.55 19.8347 105.083 19.7959 cv
105.201 19.7862 105.316 19.7726 105.432 19.7629 cv
105.896 19.8095 106.436 19.761 106.935 19.7726 cv
107.14 19.7765 107.313 19.8269 107.511 19.8308 cv
107.734 19.8231 107.958 19.8172 108.178 19.8095 cv
108.534 19.8231 108.945 19.8658 109.304 19.8618 cv
109.554 19.8599 109.797 19.8115 110.058 19.8192 cv
110.242 19.8347 110.423 19.8522 110.607 19.8696 cv
110.865 19.8735 111.154 19.8386 111.417 19.8579 cv
111.602 19.887 111.784 19.9122 111.968 19.9394 cv
112.121 19.9336 112.276 19.9258 112.431 19.92 cv
112.594 19.9297 112.757 19.9394 112.922 19.9472 cv
113.085 19.9413 113.25 19.9317 113.413 19.9238 cv
113.723 19.92 114.019 19.9549 114.31 19.9336 cv
114.779 19.8987 115.243 19.9685 115.726 19.9646 cv
115.956 19.949 116.187 19.9336 116.42 19.9181 cv
116.575 19.9258 116.728 19.9336 116.883 19.9433 cv
117.029 19.9433 117.211 19.9258 117.333 19.9743 cv
117.343 19.982 117.354 19.9937 117.366 20.0015 cv
117.469 20.1526 117.43 20.4358 117.428 20.6413 cv
117.424 21.3024 117.395 21.9403 117.422 22.5762 cv
117.438 22.9796 117.432 23.443 117.436 23.8501 cv
117.428 23.9858 117.422 24.1216 117.414 24.2534 cv
117.424 24.5423 117.438 24.8311 117.447 25.12 cv
117.432 25.4128 117.416 25.6998 117.399 25.9906 cv
117.422 26.3667 117.447 26.7429 117.471 27.119 cv
117.453 27.2606 117.438 27.4079 117.42 27.5513 cv
117.41 27.8034 117.461 28.0322 117.459 28.2765 cv
117.443 28.5267 117.428 28.7767 117.412 29.0269 cv
117.41 29.3351 117.405 29.6435 117.401 29.9517 cv
117.385 30.1824 117.366 30.4151 117.35 30.6439 cv
117.378 31.0219 117.405 31.3981 117.428 31.7723 cv
117.418 31.908 117.407 32.0437 117.393 32.1795 cv
117.381 32.4916 117.358 32.8057 117.362 33.1043 cv
117.368 33.6395 117.412 34.2366 117.418 34.7523 cv
117.405 34.8686 117.391 34.9831 117.379 35.0994 cv
117.389 35.3418 117.399 35.5802 117.409 35.8206 cv
117.395 36.0979 117.368 36.412 117.366 36.7183 cv
117.366 36.9433 117.414 37.1371 117.409 37.3543 cv
117.395 37.4706 117.379 37.5869 117.362 37.7033 cv
117.37 37.8565 117.376 38.0096 117.379 38.1628 cv
117.366 38.7425 117.314 39.3067 117.321 39.9 cv
117.331 40.1889 117.339 40.4778 117.35 40.7686 cv
117.364 40.885 117.378 40.9975 117.395 41.1157 cv
117.387 41.3077 117.376 41.4996 117.368 41.6934 cv
117.374 41.8175 117.381 41.9455 117.387 42.0696 cv
117.37 42.2809 117.354 42.4923 117.337 42.7056 cv
117.339 42.9925 117.409 43.295 117.397 43.6013 cv
117.366 44.4467 117.319 45.2455 117.314 46.0889 cv
117.312 46.4301 117.366 46.7326 117.364 47.0719 cv
117.347 47.2561 117.327 47.4383 117.31 47.6225 cv
117.306 48.0161 117.302 48.4116 117.296 48.8072 cv
117.277 49.0185 117.257 49.2318 117.24 49.4432 cv
117.25 50.2459 117.261 51.0427 117.273 51.8434 cv
117.269 52.3999 117.213 52.9913 117.219 53.5477 cv
117.232 53.8483 117.248 54.1488 117.259 54.4492 cv
117.253 54.5656 117.246 54.6781 117.24 54.7944 cv
117.238 55.0076 117.236 55.2171 117.234 55.4303 cv
117.23 55.9461 117.255 56.4657 117.253 56.9621 cv
117.25 57.5631 117.255 58.2088 117.242 58.8408 cv
117.234 59.0154 117.226 59.1859 117.22 59.3604 cv
117.232 59.469 117.246 59.5718 117.259 59.6804 cv
117.242 60.0468 117.222 60.4133 117.207 60.7797 cv
117.199 61.0899 117.244 61.4137 117.222 61.7336 cv
117.188 61.9274 117.151 62.1194 117.118 62.3133 cv
117.091 62.5228 117.063 62.7321 117.038 62.9454 cv
116.965 63.3021 116.703 63.8198 116.513 64.1262 cv
116.348 64.3898 116.073 64.5353 115.859 64.7466 cv
115.731 64.8707 115.588 64.9521 115.454 65.0646 cv
115.208 65.2739 114.964 65.4989 114.684 65.6462 cv
114.506 65.7121 114.328 65.7781 114.147 65.844 cv
113.787 65.9933 113.426 66.1543 113.058 66.2938 cv
112.718 66.4218 112.358 66.5168 112.02 66.6428 cv
111.937 66.6738 111.85 66.7048 111.764 66.7339 cv
111.578 66.7339 111.328 66.8173 111.183 66.9045 cv
111.02 66.9045 110.853 66.9259 110.723 66.9899 cv
110.475 66.9899 110.301 67.0597 110.101 67.1353 cv
110.039 67.1527 109.975 67.1702 109.911 67.1877 cv
109.81 67.1877 109.698 67.1973 109.62 67.2439 cv
109.428 67.24 108.982 67.3292 108.839 67.4145 cv
108.668 67.4106 108.461 67.3815 108.319 67.4397 cv
108.218 67.4397 108.106 67.4493 108.028 67.4959 cv
107.873 67.4959 107.689 67.4784 107.565 67.5502 cv
107.489 67.5618 107.408 67.5696 107.334 67.5793 cv
107.21 67.5793 107.082 67.5832 106.985 67.6336 cv
106.881 67.6336 106.754 67.6491 106.667 67.6898 cv
106.466 67.6879 106.165 67.6568 106.002 67.7461 cv
105.925 67.7538 105.847 67.7635 105.771 67.7732 cv
105.574 67.7713 105.331 67.6995 105.163 67.7984 cv
105.048 67.7984 104.911 67.7809 104.816 67.8256 cv
104.757 67.8352 104.701 67.8429 104.643 67.8527 cv
104.457 67.8507 104.222 67.8158 104.065 67.8798 cv
103.988 67.8895 103.908 67.8972 103.831 67.905 cv
103.774 67.9147 103.714 67.9244 103.658 67.9322 cv
103.6 67.9438 103.544 67.9535 103.486 67.9613 cv
103.398 67.9709 103.311 67.9806 103.224 67.9904 cv
103.104 67.9904 102.972 67.9942 102.877 68.0466 cv
102.799 68.0543 102.722 68.064 102.644 68.0718 cv
102.514 68.0718 102.367 68.0698 102.268 68.1299 cv
102.146 68.1299 102.016 68.1299 101.923 68.1842 cv
101.824 68.1842 101.708 68.1978 101.634 68.2404 cv
101.541 68.2385 101.444 68.2559 101.372 68.2967 cv
101.316 68.3063 101.258 68.3161 101.2 68.3258 cv
101.05 68.3258 100.853 68.3704 100.732 68.4382 cv
100.639 68.4382 100.544 68.4518 100.473 68.4945 cv
100.172 68.4945 99.9084 68.6321 99.6524 68.729 cv
99.4547 68.8047 99.255 68.8763 99.0553 68.9481 cv
98.6676 68.9462 98.2565 69.3068 97.9715 69.5415 cv
97.7213 69.7469 97.3956 69.8497 97.1494 70.0804 cv
96.4631 70.7183 96.05 71.5753 95.7088 72.4012 cv
cp
94.9507 73.7255 mo
94.9507 73.7778 94.7956 73.7468 94.751 73.7391 cv
94.3729 73.677 93.9968 73.6169 93.6187 73.5548 cv
93.4364 73.5471 93.2542 73.5394 93.0719 73.5296 cv
92.8316 73.4948 92.5891 73.4598 92.3487 73.425 cv
92.1258 73.4134 91.9183 73.4405 91.7108 73.4134 cv
90.4835 73.2466 89.2485 73.0508 88.0716 72.7929 cv
87.8893 72.7541 87.4318 72.661 87.3232 72.5292 cv
87.8622 72.6378 88.4788 72.5951 89.0565 72.6262 cv
89.5529 72.6514 90.0492 72.7018 90.5572 72.7037 cv
90.7124 72.7173 90.8694 72.7348 91.0226 72.7483 cv
91.1776 72.7425 91.3308 72.7348 91.484 72.727 cv
91.6973 72.7464 91.9067 72.7619 92.12 72.7793 cv
92.2615 72.7793 92.4069 72.7541 92.5523 72.7657 cv
92.7268 72.8026 92.9014 72.8375 93.0739 72.8724 cv
93.4985 72.8957 94.2081 72.7289 94.5707 72.8782 cv
94.7975 72.9674 94.9584 73.4928 94.9779 73.7255 cv
94.97 73.7255 94.9604 73.7255 94.9507 73.7255 cv
cp
86.9452 72.126 mo
86.7939 72.1182 86.6388 72.1124 86.4856 72.1046 cv
86.2936 72.0717 86.09 72.0446 85.9136 71.9825 cv
85.7741 71.9301 85.648 71.8739 85.4968 71.8409 cv
85.2855 71.7924 85.0721 71.7614 84.8705 71.7226 cv
84.6378 71.6742 84.4187 71.5753 84.2075 71.49 cv
84.0873 71.4435 83.9632 71.428 83.8565 71.3504 cv
83.8487 71.3504 83.8371 71.3504 83.8274 71.3504 cv
83.8274 71.3426 83.8274 71.333 83.8274 71.3233 cv
83.9321 71.3155 84.0407 71.3058 84.1473 71.298 cv
84.57 71.3058 85.0295 71.3349 85.4773 71.333 cv
85.8032 71.3291 86.1482 71.3504 86.4293 71.2496 cv
86.8831 71.2651 87.3387 71.2787 87.7924 71.2922 cv
87.9843 71.3116 88.1763 71.3271 88.3702 71.3465 cv
88.727 71.3542 89.0352 71.2592 89.3822 71.2728 cv
89.8631 71.2883 90.3498 71.3601 90.8287 71.3621 cv
91.3871 71.3659 91.9455 71.3659 92.5039 71.3698 cv
92.7501 71.3621 93.0235 71.3271 93.2832 71.3523 cv
93.6303 71.3892 93.9813 71.8273 94.15 72.1026 cv
94.1674 72.1317 94.2081 72.2016 94.1693 72.2346 cv
94.055 72.3353 93.6671 72.2326 93.5101 72.3043 cv
93.3201 72.3024 93.0351 72.2248 92.8742 72.2985 cv
92.3933 72.2966 91.9125 72.2927 91.4317 72.2888 cv
91.261 72.2888 91.0594 72.2267 90.9082 72.2888 cv
90.4196 72.2849 89.993 72.2267 89.5199 72.2228 cv
88.884 72.2171 88.2481 72.2112 87.612 72.2074 cv
87.3911 72.1803 87.172 72.1512 86.9452 72.126 cv
cp
82.5032 70.6931 mo
82.0224 70.5419 81.6442 70.1463 81.177 69.9758 cv
81.177 69.9563 81.177 69.9389 81.177 69.9195 cv
81.6385 69.9234 82.0999 69.9253 82.5633 69.9311 cv
82.8056 69.9467 83.0576 69.9913 83.3155 69.9874 cv
83.6491 69.9835 83.9553 69.9351 84.3005 69.937 cv
84.57 69.937 84.8376 69.937 85.1091 69.9389 cv
85.2505 69.9389 85.4193 69.9544 85.5414 69.9137 cv
85.7954 69.9389 86.03 69.9137 86.2936 69.9195 cv
87.013 69.9351 87.8002 69.9563 88.5505 69.9602 cv
89.1322 69.9642 89.7449 69.9583 90.2878 70.0145 cv
90.373 70.0087 90.4583 70.0029 90.5456 69.999 cv
90.726 70.0184 90.9062 70.0358 91.0865 70.0552 cv
91.6062 70.2084 92.116 70.4353 92.5582 70.7396 cv
92.5891 70.761 92.6706 70.8249 92.6609 70.8637 cv
92.6105 70.8889 92.5562 70.9142 92.5058 70.9394 cv
92.4166 70.9394 92.2925 70.9316 92.2169 70.9626 cv
91.8969 70.9626 91.5751 70.9103 91.2339 70.9006 cv
91.135 70.8928 91.009 70.8637 90.916 70.9006 cv
90.755 70.8987 90.5398 70.8249 90.3944 70.8967 cv
90.0183 70.8851 89.6421 70.8715 89.2679 70.8599 cv
89.1206 70.8599 88.9306 70.8366 88.8045 70.8851 cv
88.4497 70.8851 88.091 70.8773 87.7343 70.8715 cv
87.5229 70.8501 87.1991 70.7338 86.9839 70.821 cv
86.8075 70.8172 86.5941 70.7901 86.4623 70.8715 cv
86.2723 70.8715 85.8807 70.8288 85.7391 70.9006 cv
84.952 70.8967 84.1473 70.8812 83.3951 70.8075 cv
83.0926 70.7765 82.7805 70.7785 82.5032 70.6931 cv
cp
79.4999 68.9307 mo
79.3874 68.8667 79.178 68.7853 79.1586 68.636 cv
79.8159 68.6592 80.5527 68.6883 81.2119 68.7019 cv
81.6694 68.7116 82.1542 68.6922 82.6273 68.7174 cv
83.2516 68.7504 83.843 68.8512 84.4478 68.8919 cv
84.8996 68.921 85.3145 68.9133 85.7489 68.9715 cv
86.4643 69.0703 87.1836 69.1692 87.8913 69.2777 cv
88.4109 69.3592 88.9479 69.4058 89.4481 69.5026 cv
89.4481 69.5492 89.4017 69.5298 89.3629 69.5298 cv
89.3629 69.5724 89.262 69.5376 89.2174 69.5356 cv
88.8161 69.5026 88.4012 69.4968 87.9747 69.4949 cv
87.8467 69.4949 87.6722 69.4697 87.5695 69.5201 cv
87.4763 69.5201 87.3542 69.5124 87.2786 69.5492 cv
86.8811 69.5472 86.507 69.5104 86.123 69.5143 cv
85.8593 69.5181 85.5898 69.5337 85.3126 69.5376 cv
85.1264 69.5395 84.8628 69.4949 84.7057 69.5628 cv
84.2152 69.5588 83.715 69.5279 83.2012 69.5259 cv
83.0422 69.5259 82.8095 69.4872 82.6815 69.5511 cv
82.4217 69.5453 82.1619 69.5415 81.9021 69.5356 cv
81.7276 69.5104 81.5551 69.4852 81.3786 69.46 cv
81.0006 69.4406 80.6186 69.4755 80.289 69.3708 cv
79.9963 69.2777 79.7616 69.0877 79.4999 68.9307 cv
cp
78.8717 68.2424 mo
78.4257 68.2463 78.1504 68.1106 77.8382 67.8682 cv
77.7277 67.7829 77.5998 67.7189 77.5455 67.587 cv
78.0477 67.7286 78.5537 67.8468 79.0733 67.9535 cv
79.4747 68.0368 79.876 68.192 80.3181 68.2095 cv
80.3181 68.2191 80.3181 68.2288 80.3181 68.2385 cv
80.1203 68.2385 79.8915 68.2676 79.6802 68.2618 cv
79.4882 68.2463 79.2943 68.2308 79.1024 68.2152 cv
79.0248 68.2249 78.9473 68.2347 78.8717 68.2424 cv
cp
74.926 18.8401 mo
74.926 18.7334 75.0889 18.5725 75.1646 18.5027 cv
75.3332 18.3456 75.5621 18.1324 75.7773 18.0606 cv
76.1166 17.9443 76.5683 18.0238 76.9541 18.0102 cv
77.4369 17.9889 77.9818 18.0025 78.4859 17.9908 cv
78.9454 17.9792 79.4495 17.9482 79.9031 17.952 cv
80.2017 17.9618 80.5003 17.9675 80.8028 17.9772 cv
81.8517 17.9656 82.9491 17.9579 84.0096 17.9986 cv
84.1357 18.0141 84.2598 18.0296 84.3858 18.047 cv
84.5991 18.0509 84.8105 18.0548 85.0218 18.0568 cv
85.6577 18.0509 86.2956 17.9986 86.9587 18.0102 cv
87.7168 18.0277 88.4788 18.0877 89.2737 18.082 cv
89.7099 18.0761 90.1597 18.0218 90.6328 18.0335 cv
90.9121 18.0374 91.166 18.0936 91.4705 18.0936 cv
92.2382 18.0994 92.973 18.0451 93.7564 18.049 cv
94.2682 18.0548 94.78 18.0568 95.29 18.0586 cv
95.4257 18.0684 95.5595 18.0761 95.6952 18.0858 cv
95.9338 18.082 96.1877 18.0606 96.4456 18.0645 cv
96.5813 18.082 96.7151 18.0975 96.8508 18.1129 cv
96.9477 18.1013 97.0427 18.0897 97.1416 18.0761 cv
97.3142 18.0761 97.4867 18.0722 97.6631 18.0722 cv
97.9056 18.0761 98.1033 18.1304 98.3553 18.1324 cv
98.5589 18.1129 98.7606 18.0956 98.9622 18.08 cv
99.7882 18.0704 100.651 18.0704 101.45 18.0645 cv
101.729 18.0761 102.008 18.0839 102.287 18.0956 cv
102.801 18.082 103.321 18.0393 103.852 18.0413 cv
104.36 18.0451 104.86 18.1033 105.382 18.082 cv
105.653 18.0665 105.923 18.0509 106.192 18.0354 cv
106.357 18.0451 106.52 18.0509 106.683 18.0586 cv
107.425 18.0393 108.276 18.0354 109.027 18.0645 cv
109.688 18.0897 110.402 18.0257 111.078 18.0625 cv
111.225 18.08 111.369 18.0994 111.514 18.1149 cv
112.073 18.144 112.649 18.177 113.219 18.1536 cv
113.461 18.1207 113.701 18.0858 113.944 18.0509 cv
114.155 18.0315 114.368 18.0122 114.58 17.9908 cv
115.041 17.9947 115.489 18.0335 115.97 18.0277 cv
116.197 18.0257 116.462 17.9618 116.685 18.0257 cv
116.786 18.0548 116.875 18.1556 116.959 18.2274 cv
117.011 18.2739 117.362 18.5899 117.261 18.6597 cv
117.106 18.7645 116.753 18.6733 116.571 18.7547 cv
116.257 18.7528 115.46 18.6869 115.243 18.8052 cv
114.481 18.8013 113.717 18.7974 112.955 18.7935 cv
112.746 18.7954 112.532 18.8013 112.319 18.8032 cv
112.224 18.809 112.127 18.811 112.032 18.8168 cv
111.927 18.8168 111.796 18.8032 111.714 18.844 cv
111.497 18.844 111.07 18.7916 110.904 18.8672 cv
110.477 18.8575 110.054 18.844 109.63 18.8323 cv
109.492 18.8323 109.314 18.811 109.195 18.8595 cv
109.093 18.8575 108.963 18.844 108.878 18.8866 cv
108.792 18.8963 108.705 18.904 108.618 18.9138 cv
108.503 18.9118 108.387 18.9079 108.273 18.904 cv
108.094 18.8904 107.77 18.7781 107.604 18.8497 cv
107.406 18.8478 107.138 18.809 106.97 18.8749 cv
106.881 18.8866 106.795 18.8943 106.708 18.9021 cv
106.578 18.9021 106.39 18.8497 106.276 18.9021 cv
105.735 18.8982 105.196 18.8943 104.657 18.8904 cv
104.488 18.8904 104.248 18.8536 104.104 18.9156 cv
104.048 18.9273 103.99 18.9351 103.931 18.9447 cv
103.639 18.9447 103.371 18.8924 103.094 18.8866 cv
102.611 18.8827 102.13 18.8769 101.647 18.8749 cv
101.428 18.8731 100.984 18.8226 100.81 18.8982 cv
100.707 18.8982 100.573 18.8847 100.492 18.9254 cv
100.211 18.9254 99.9317 18.9234 99.6505 18.9215 cv
99.4547 18.9195 99.1851 18.8497 99.0165 18.9176 cv
98.2254 18.9138 97.4983 18.8788 96.7306 18.8749 cv
96.5386 18.8749 96.2536 18.8284 96.0947 18.9021 cv
95.3423 18.8963 94.59 18.8904 93.8398 18.8866 cv
93.6342 18.8847 93.3589 18.8013 93.1728 18.8866 cv
92.9323 18.8808 92.6919 18.8749 92.4515 18.8711 cv
92.3003 18.8556 92.1103 18.7819 91.959 18.8478 cv
91.7846 18.8478 91.5364 18.7858 91.3812 18.8459 cv
91.2397 18.844 90.8481 18.8304 90.7433 18.8711 cv
90.6348 18.8711 90.5107 18.8808 90.4254 18.9254 cv
90.3304 18.9254 90.2121 18.9156 90.1346 18.9545 cv
89.7584 18.9525 89.3861 18.9506 89.01 18.9486 cv
88.8627 18.9486 88.6668 18.9195 88.5447 18.9758 cv
88.3043 18.9738 88.0251 18.8497 87.7963 18.9409 cv
87.139 18.9176 86.4818 18.8943 85.8264 18.8711 cv
85.6422 18.8652 85.3902 18.7935 85.2214 18.8691 cv
84.9307 18.8672 84.6437 18.8633 84.3528 18.8595 cv
84.1996 18.8536 83.9767 18.7954 83.8313 18.8613 cv
83.6122 18.8517 83.3892 18.8401 83.1662 18.8304 cv
82.6467 18.8265 82.127 18.8245 81.6074 18.8206 cv
81.3747 18.8188 81.144 18.8188 80.9133 18.8168 cv
80.7194 18.8168 80.3704 18.7528 80.2172 18.8129 cv
79.9381 18.811 79.275 18.749 79.0597 18.8342 cv
78.3966 18.8304 77.7704 18.8013 77.0957 18.7954 cv
76.9464 18.7954 76.6032 18.7702 76.485 18.8206 cv
76.2871 18.8188 76.0351 18.745 75.849 18.8168 cv
75.6861 18.8265 75.5232 18.8342 75.3585 18.842 cv
75.2033 18.8536 75.0501 18.8613 74.8951 18.8711 cv
74.8951 18.8304 74.8853 18.8401 74.926 18.8401 cv
cp
76.3802 17.5488 mo
76.4364 17.5022 76.4927 17.4538 76.5548 17.4091 cv
76.7622 17.2521 77.3361 16.7266 77.5688 16.7286 cv
78.0127 16.7306 78.447 16.7809 78.8968 16.7771 cv
79.1586 16.7616 79.4184 16.7441 79.6802 16.7286 cv
79.9613 16.7228 80.2192 16.7538 80.4906 16.7596 cv
80.9113 16.7693 81.3554 16.7461 81.7626 16.75 cv
82.5807 16.7538 83.3505 16.8469 84.19 16.8391 cv
84.378 16.8372 84.5371 16.7927 84.7116 16.7887 cv
85.1381 16.7693 85.5976 16.7809 86.0125 16.7693 cv
86.2432 16.7887 86.474 16.8043 86.7066 16.8216 cv
86.947 16.8062 87.1895 16.7927 87.4298 16.7791 cv
87.6993 16.7927 87.9688 16.8004 88.2383 16.8139 cv
88.851 16.7848 89.4908 16.7538 90.119 16.7577 cv
90.4079 16.7616 90.6988 16.7655 90.9857 16.7693 cv
91.1312 16.7829 91.2882 16.8178 91.451 16.8198 cv
91.7729 16.8216 92.0637 16.7732 92.3778 16.7713 cv
92.8548 16.7636 93.3395 16.843 93.8223 16.8605 cv
94.0627 16.8527 94.3031 16.845 94.5455 16.8391 cv
94.846 16.845 95.1484 16.8702 95.4704 16.8741 cv
95.6235 16.8663 95.7786 16.8586 95.9298 16.8527 cv
96.0559 16.8663 96.1799 16.8818 96.3079 16.8934 cv
96.4417 16.8818 96.5774 16.8663 96.7131 16.8527 cv
97.0874 16.8527 97.4654 16.8527 97.8415 16.8547 cv
97.9676 16.843 98.0917 16.8275 98.2177 16.8139 cv
98.4194 16.8391 98.6229 16.8605 98.8246 16.8857 cv
99.1154 16.8877 99.4023 16.8915 99.6932 16.8973 cv
99.8657 16.8877 100.038 16.8779 100.211 16.8702 cv
100.531 16.8702 100.849 16.8702 101.169 16.8702 cv
101.39 16.8547 101.611 16.8391 101.832 16.8216 cv
102.227 16.8236 102.623 16.8236 103.018 16.8236 cv
103.201 16.81 103.383 16.7927 103.569 16.7791 cv
103.724 16.7965 103.879 16.812 104.032 16.8314 cv
104.282 16.843 104.542 16.812 104.783 16.8178 cv
105.322 16.845 105.861 16.8702 106.402 16.8973 cv
107.34 16.8741 108.261 16.7887 109.207 16.7791 cv
109.512 16.7732 109.818 16.8198 110.132 16.8081 cv
110.312 16.8004 110.464 16.7577 110.655 16.7577 cv
111.136 16.7596 111.619 16.7616 112.1 16.7655 cv
112.408 16.7829 112.716 16.8004 113.027 16.8178 cv
113.217 16.7965 113.411 16.7713 113.603 16.75 cv
113.787 16.7384 113.992 16.7655 114.155 16.7189 cv
114.508 16.7384 114.863 16.7577 115.212 16.7791 cv
115.365 16.8216 116.047 17.3549 116.115 17.51 cv
116.077 17.5177 116.04 17.5293 115.999 17.5372 cv
115.819 17.5372 115.536 17.4906 115.39 17.5643 cv
114.966 17.5604 114.454 17.4479 114.089 17.6438 cv
114.023 17.6515 113.957 17.6613 113.889 17.6709 cv
113.746 17.669 113.573 17.6496 113.453 17.6961 cv
113.164 17.6961 112.604 17.6302 112.383 17.7484 cv
112.181 17.7291 111.98 17.7077 111.776 17.6884 cv
111.354 17.6845 110.931 17.6786 110.502 17.6748 cv
110.264 17.6573 109.798 17.5875 109.579 17.6768 cv
108.703 17.669 107.825 17.6651 106.946 17.6573 cv
106.572 17.6438 106.161 17.6263 105.762 17.6263 cv
105.613 17.6243 105.424 17.6031 105.3 17.6515 cv
104.973 17.6496 104.645 17.6457 104.315 17.6438 cv
104.147 17.6361 103.93 17.5779 103.767 17.6438 cv
103.458 17.6418 103.148 17.6399 102.84 17.6379 cv
102.716 17.6379 102.567 17.6186 102.464 17.6651 cv
102.398 17.6729 102.33 17.6825 102.262 17.6922 cv
101.886 17.6903 101.512 17.6884 101.134 17.6864 cv
100.998 17.6864 100.81 17.6573 100.699 17.7116 cv
100.447 17.7116 99.7514 17.6554 99.571 17.7349 cv
99.3344 17.7349 98.8304 17.6768 98.6462 17.7582 cv
98.588 17.7679 98.5299 17.7775 98.4736 17.7854 cv
98.0994 17.7854 97.7815 17.7193 97.4015 17.7233 cv
97.3045 17.7252 97.194 17.7175 97.1126 17.7504 cv
96.8179 17.7465 96.3215 17.6457 96.0733 17.7427 cv
95.9938 17.7465 95.9202 17.7484 95.8426 17.7504 cv
95.6099 17.7349 95.1523 17.5759 94.9449 17.6806 cv
94.5978 17.669 94.2507 17.6573 93.9037 17.6457 cv
93.7796 17.6457 93.6323 17.6302 93.5257 17.6729 cv
93.3027 17.6709 92.8858 17.5701 92.69 17.667 cv
92.6298 17.6768 92.5717 17.6864 92.5135 17.6961 cv
92.0909 17.6922 91.6682 17.6884 91.2435 17.6845 cv
91.0807 17.667 90.914 17.6496 90.7511 17.6322 cv
90.4894 17.6302 90.2315 17.6263 89.9717 17.6225 cv
89.8244 17.6225 89.6304 17.6011 89.5063 17.6496 cv
89.3784 17.6496 89.2388 17.6341 89.1302 17.6768 cv
88.9867 17.6768 88.8374 17.669 88.727 17.7329 cv
88.5622 17.7291 88.3993 17.7252 88.2364 17.7193 cv
87.9727 17.6825 87.6199 17.5275 87.3387 17.6379 cv
86.9684 17.6361 86.6 17.605 86.2103 17.6031 cv
86.0862 17.6011 85.9369 17.5836 85.8341 17.6302 cv
85.743 17.6282 85.6189 17.6186 85.5452 17.6573 cv
85.46 17.6651 85.3727 17.6748 85.2835 17.6845 cv
84.7639 17.6806 84.3025 17.6341 83.81 17.5836 cv
83.7072 17.5662 83.5967 17.5488 83.4919 17.5332 cv
83.0189 17.5293 82.5478 17.5255 82.0747 17.5216 cv
81.8265 17.5216 81.3825 17.4654 81.179 17.5449 cv
81.0549 17.5449 80.8861 17.4945 80.7737 17.5449 cv
80.6206 17.5429 80.3122 17.4868 80.194 17.5411 cv
80.1165 17.5488 80.0388 17.5584 79.9633 17.5682 cv
79.5231 17.5662 79.0772 17.5682 78.6623 17.5856 cv
78.5266 17.5914 78.3443 17.5643 78.2299 17.6147 cv
77.6114 17.6127 76.9929 17.6089 76.3802 17.607 cv
76.3802 17.5875 76.3802 17.5682 76.3802 17.5488 cv
cp
78.2066 16.2264 mo
78.259 16.2264 78.3909 16.083 78.4354 16.0481 cv
78.7204 15.8639 79.0036 15.6778 79.2866 15.4897 cv
79.4669 15.416 79.7713 15.4316 79.9749 15.4296 cv
80.2444 15.4489 80.5158 15.4664 80.7854 15.4878 cv
81.2894 15.4994 81.7897 15.513 82.2899 15.5227 cv
82.5497 15.511 82.8095 15.4936 83.0694 15.478 cv
83.3408 15.478 83.6083 15.4761 83.8778 15.4761 cv
84.0834 15.4664 84.285 15.4567 84.4866 15.4451 cv
84.8434 15.4587 85.1846 15.5071 85.5278 15.5149 cv
86.0571 15.5266 86.5748 15.4567 87.0886 15.4684 cv
87.2359 15.48 87.3795 15.4878 87.5248 15.4975 cv
87.932 15.5071 88.3488 15.48 88.7386 15.478 cv
89.4908 15.4819 90.2451 15.4839 90.9935 15.4897 cv
91.5596 15.4916 92.1239 15.5246 92.7016 15.5266 cv
93.1068 15.5304 93.5101 15.5304 93.9173 15.5343 cv
94.0705 15.5266 94.2236 15.5187 94.3748 15.511 cv
94.6948 15.5382 95.0127 15.5692 95.3307 15.5982 cv
95.7863 15.608 96.1838 15.5207 96.6336 15.5227 cv
96.9807 15.5421 97.3297 15.5634 97.6767 15.5808 cv
98.0354 15.5886 98.3999 15.5498 98.7742 15.5634 cv
98.937 15.5808 99.0999 15.5964 99.2647 15.6118 cv
99.4004 15.5982 99.5342 15.5847 99.6699 15.5711 cv
100.005 15.5518 100.364 15.5575 100.682 15.5439 cv
101.248 15.5207 101.814 15.5847 102.359 15.5789 cv
102.679 15.5537 102.997 15.5285 103.315 15.5052 cv
104.087 15.5071 104.858 15.511 105.63 15.513 cv
105.793 15.5246 105.958 15.5323 106.12 15.5421 cv
106.908 15.5343 107.763 15.5478 108.579 15.5266 cv
108.92 15.5187 109.302 15.4742 109.647 15.4819 cv
110.043 15.5149 110.44 15.5498 110.834 15.5808 cv
111.191 15.5808 111.563 15.5071 111.906 15.4955 cv
112.129 15.4839 112.379 15.5149 112.571 15.4354 cv
112.862 15.4373 113.172 15.4354 113.428 15.5227 cv
113.56 15.5673 113.651 15.6894 113.765 15.7747 cv
113.829 15.8096 113.891 15.8445 113.957 15.8775 cv
114.155 16.0112 114.332 16.1528 114.531 16.2866 cv
114.531 16.3389 114.475 16.3448 114.442 16.3738 cv
114.233 16.368 114.019 16.3641 113.808 16.3602 cv
113.628 16.3428 113.343 16.2672 113.172 16.335 cv
113.104 16.3466 113.036 16.3544 112.969 16.3641 cv
112.488 16.3622 112.005 16.3584 111.524 16.3564 cv
111.082 16.3525 110.638 16.3505 110.194 16.3486 cv
110.056 16.3486 109.87 16.3234 109.76 16.3738 cv
109.63 16.3738 109.492 16.3564 109.384 16.4029 cv
109.172 16.3991 108.87 16.3564 108.69 16.4281 cv
108.517 16.4281 108.067 16.3971 107.937 16.4514 cv
107.732 16.4494 107.447 16.4048 107.27 16.4766 cv
107.103 16.4746 106.906 16.4126 106.751 16.4727 cv
106.208 16.4707 105.711 16.4378 105.163 16.4339 cv
104.977 16.4339 104.738 16.3991 104.585 16.463 cv
104.459 16.4514 104.335 16.4416 104.207 16.432 cv
103.804 16.4281 103.396 16.4262 102.993 16.4243 cv
102.861 16.4184 102.673 16.37 102.557 16.4204 cv
102.161 16.4184 101.459 16.3525 101.141 16.4707 cv
100.891 16.4591 100.639 16.4494 100.389 16.4398 cv
99.7765 16.4436 99.1212 16.4591 98.4814 16.4572 cv
98.2313 16.4552 97.7872 16.3991 97.5856 16.4805 cv
97.4945 16.4805 97.3646 16.4707 97.2929 16.5095 cv
96.9749 16.4979 96.6569 16.4863 96.339 16.4727 cv
95.4238 16.4669 94.5086 16.4611 93.5916 16.4552 cv
93.1378 16.4378 92.657 16.4223 92.1762 16.4204 cv
92.0405 16.4204 91.8582 16.3661 91.7419 16.4184 cv
91.579 16.4184 91.4123 16.4164 91.2514 16.4164 cv
90.9605 16.4126 90.693 16.3893 90.4099 16.3932 cv
90.3304 16.3952 90.216 16.3757 90.1501 16.4107 cv
89.8592 16.4087 89.5722 16.4048 89.2815 16.4048 cv
89.1515 16.4048 88.9867 16.3835 88.8781 16.432 cv
88.4361 16.4281 87.9922 16.4262 87.55 16.4223 cv
87.4143 16.4184 87.2359 16.3661 87.1118 16.4204 cv
86.5166 16.4184 85.9098 16.3855 85.2912 16.3816 cv
85.1575 16.3816 84.9442 16.3253 84.8318 16.3796 cv
84.729 16.3796 84.5932 16.3661 84.5137 16.4068 cv
83.7518 16.4029 82.986 16.4107 82.255 16.3584 cv
81.9292 16.337 81.1712 16.2225 80.8958 16.3584 cv
80.8397 16.3661 80.7815 16.3777 80.7233 16.3873 cv
80.3374 16.3835 79.9652 16.3525 79.5658 16.3505 cv
79.1431 16.3486 78.6157 16.4048 78.2648 16.2575 cv
78.2473 16.2575 78.2261 16.2575 78.2066 16.2575 cv
78.2066 16.2478 78.2066 16.2381 78.2066 16.2264 cv
cp
80.0641 14.9662 mo
80.0777 14.9662 80.0835 14.9662 80.0951 14.9662 cv
80.0951 14.9061 80.2793 14.8111 80.3297 14.7703 cv
80.4596 14.6637 80.6108 14.6017 80.7504 14.5164 cv
80.9056 14.4194 81.0529 14.3089 81.2294 14.2585 cv
81.6927 14.1248 82.383 14.1887 82.8735 14.1984 cv
83.3582 14.2081 83.8546 14.1693 84.3489 14.181 cv
84.7193 14.1887 85.1303 14.1771 85.5064 14.1655 cv
85.6519 14.1712 85.7954 14.1751 85.9369 14.179 cv
86.7027 14.1092 87.5888 14.1887 88.3722 14.1926 cv
88.7522 14.1964 89.1767 14.1557 89.582 14.1848 cv
90.0803 14.2178 90.5533 14.2992 91.0594 14.3031 cv
91.358 14.3031 91.6566 14.3012 91.9551 14.3012 cv
92.343 14.274 92.7268 14.1984 93.1418 14.2003 cv
93.9852 14.2042 94.8479 14.2624 95.6856 14.2662 cv
95.7922 14.2605 95.8988 14.2566 96.0035 14.2507 cv
96.1392 14.2662 96.273 14.2818 96.4088 14.2992 cv
96.6317 14.2857 96.8527 14.2701 97.0738 14.2585 cv
97.3413 14.2449 97.6167 14.2798 97.8861 14.2778 cv
98.1634 14.2662 98.4445 14.2507 98.7218 14.2391 cv
99.2763 14.2507 99.8503 14.3186 100.43 14.2934 cv
100.665 14.2837 100.909 14.2255 101.153 14.2198 cv
101.328 14.2236 101.5 14.2236 101.671 14.2255 cv
101.739 14.2198 101.807 14.2119 101.874 14.2042 cv
102.02 14.2119 102.15 14.2778 102.309 14.274 cv
102.532 14.2605 102.751 14.243 102.974 14.2314 cv
103.266 14.2314 103.588 14.2662 103.899 14.2585 cv
104.127 14.2507 104.333 14.2042 104.567 14.2062 cv
104.895 14.2081 105.221 14.2081 105.55 14.21 cv
105.715 14.2119 105.896 14.2275 106.041 14.1848 cv
106.679 14.2275 107.33 14.2119 107.978 14.2275 cv
108.242 14.2314 108.538 14.2682 108.817 14.2527 cv
109.399 14.2198 110.016 14.2081 110.64 14.2119 cv
110.925 14.2119 111.251 14.1828 111.507 14.2489 cv
111.619 14.2778 111.699 14.3594 111.796 14.4155 cv
112.055 14.5842 112.315 14.751 112.573 14.9158 cv
112.573 15.0496 112.15 15.0321 112.053 15.0864 cv
111.91 15.0844 111.704 15.0554 111.59 15.1116 cv
111.452 15.1116 111.264 15.0844 111.154 15.1407 cv
110.972 15.1348 110.787 15.131 110.607 15.1271 cv
110.51 15.1116 110.411 15.0961 110.314 15.0787 cv
109.915 15.0593 109.469 15.0728 109.097 15.1039 cv
108.967 15.1155 108.808 15.0689 108.697 15.1271 cv
108.542 15.1252 108.389 15.1252 108.234 15.1232 cv
108.166 15.131 108.1 15.1407 108.032 15.1504 cv
107.057 15.1446 106.076 15.1096 105.081 15.1039 cv
104.81 15.1019 104.451 15.003 104.215 15.1291 cv
104.032 15.1271 103.848 15.1232 103.664 15.1213 cv
103.453 15.1058 103.016 15.038 102.826 15.1232 cv
102.693 15.1213 102.501 15.0923 102.392 15.1484 cv
102.2 15.1465 101.816 15.0787 101.669 15.1446 cv
101.477 15.1426 101.283 15.1407 101.091 15.1387 cv
100.922 15.131 100.668 15.0593 100.513 15.1368 cv
100.445 15.1465 100.378 15.1562 100.31 15.1659 cv
99.8851 15.1639 99.4605 15.162 99.0378 15.1582 cv
98.8672 15.1582 98.6268 15.1213 98.4892 15.1834 cv
98.2274 15.1814 97.7834 15.0923 97.5624 15.1775 cv
97.444 15.1834 97.3317 15.1873 97.2133 15.1911 cv
97.0136 15.1775 96.7461 15.0941 96.5483 15.1737 cv
96.4242 15.1717 96.242 15.1504 96.1431 15.2008 cv
95.4877 15.195 94.8343 15.1891 94.1771 15.1853 cv
93.8766 15.1698 93.2542 15.038 92.9634 15.1543 cv
92.8858 15.1639 92.8082 15.1698 92.7307 15.1814 cv
92.4593 15.1795 92.2305 15.131 91.9784 15.1213 cv
91.3521 15.1155 90.7278 15.1096 90.0997 15.1058 cv
89.8961 15.1019 89.7294 15.0515 89.5219 15.0476 cv
89.107 15.0476 88.694 15.0457 88.279 15.0476 cv
88.1822 15.0612 88.0852 15.0767 87.9882 15.0923 cv
87.3717 15.0903 86.7532 15.0884 86.1386 15.0864 cv
85.8109 15.0825 85.4832 15.0767 85.1555 15.0728 cv
84.8977 15.0457 84.5137 14.9448 84.2578 15.0476 cv
84.1571 15.0457 84.0232 15.0321 83.9418 15.0748 cv
83.8119 15.0728 83.6684 15.0573 83.5637 15.1 cv
83.2535 15.098 82.9666 15.0689 82.668 15.0689 cv
82.5323 15.0689 82.3965 15.0689 82.2628 15.0728 cv
82.1561 15.0805 82.0611 15.1155 81.9448 15.1155 cv
81.5977 15.0961 81.2506 15.0787 80.9036 15.0593 cv
80.6399 15.0457 80.3297 15.0864 80.0951 15.0244 cv
80.0951 15.0146 80.0951 15.005 80.0951 14.9953 cv
80.0544 14.9953 80.0641 15.003 80.0641 14.9662 cv
cp
83.0112 13.2813 mo
83.0965 13.2231 83.1857 13.1689 83.271 13.1126 cv
83.9844 12.6415 85.0159 12.8819 85.8904 12.8858 cv
86.3906 12.8897 86.8909 12.8935 87.3911 12.8955 cv
87.5481 12.9051 87.7032 12.9149 87.8583 12.9246 cv
88.1279 12.9207 88.4051 12.9013 88.6959 12.9033 cv
89.7875 12.909 90.8228 12.9459 91.9048 12.9187 cv
92.1083 12.9033 92.3119 12.8858 92.5135 12.8703 cv
92.7908 12.8799 93.0719 12.8858 93.3511 12.8935 cv
93.4461 12.8897 93.5411 12.8839 93.642 12.8799 cv
93.7448 12.8935 93.8514 12.909 93.96 12.9246 cv
94.0995 12.909 94.2488 12.8955 94.3904 12.8799 cv
94.9061 12.9149 95.4043 12.9828 95.9511 12.9692 cv
96.2226 12.9614 96.4552 12.8935 96.7345 12.8897 cv
97.4247 12.8819 98.0606 12.9594 98.7296 12.9556 cv
99.0494 12.9517 99.383 12.8878 99.7145 12.8858 cv
100.236 12.8799 100.781 12.9187 101.335 12.9129 cv
101.618 12.9129 101.878 12.8644 102.173 12.8626 cv
103.367 12.8683 104.564 12.8742 105.76 12.8819 cv
105.965 12.8858 106.132 12.9401 106.336 12.9401 cv
106.605 12.9149 106.877 12.8897 107.146 12.8664 cv
107.482 12.8451 108.052 12.9304 108.333 12.8373 cv
108.75 12.8799 109.05 13.1107 109.409 13.258 cv
109.713 13.3783 110.157 13.4849 110.411 13.6885 cv
110.458 13.6905 110.44 13.7078 110.44 13.7467 cv
110.4 13.7583 110.363 13.7641 110.324 13.7757 cv
110.14 13.7738 109.957 13.7738 109.773 13.7738 cv
109.554 13.7699 109.256 13.7312 109.079 13.8262 cv
108.992 13.8358 108.907 13.8455 108.819 13.8533 cv
108.548 13.8514 107.889 13.7603 107.691 13.8475 cv
107.567 13.8475 107.387 13.8262 107.286 13.8726 cv
107.018 13.8591 106.747 13.8435 106.479 13.83 cv
106.301 13.8048 106.018 13.7137 105.841 13.7776 cv
105.659 13.7776 105.283 13.735 105.147 13.8048 cv
104.819 13.8087 104.492 13.8106 104.164 13.8126 cv
103.881 13.8126 103.243 13.7273 103.007 13.8203 cv
102.949 13.83 102.89 13.8397 102.834 13.8475 cv
102.584 13.8475 102.332 13.8435 102.08 13.8397 cv
101.975 13.8358 101.832 13.801 101.735 13.8417 cv
101.533 13.8397 101.147 13.7583 100.984 13.8378 cv
100.779 13.8358 100.492 13.7971 100.317 13.8649 cv
100.19 13.8649 100.013 13.8397 99.9103 13.8901 cv
99.5458 13.8901 99.1774 13.8862 98.8129 13.8862 cv
98.6597 13.8843 98.4465 13.8553 98.3224 13.9096 cv
97.923 13.9076 97.5469 13.8785 97.1338 13.8746 cv
96.9924 13.8746 96.8217 13.8533 96.6995 13.9017 cv
96.3622 13.8901 96.0268 13.8785 95.6895 13.8669 cv
95.3036 13.863 94.9177 13.8591 94.5319 13.8553 cv
94.4252 13.8378 94.3186 13.8223 94.212 13.8048 cv
93.8863 13.801 93.5566 13.7971 93.2309 13.7932 cv
93.0932 13.7932 92.9091 13.7738 92.7966 13.8242 cv
92.7287 13.8319 92.6609 13.8397 92.593 13.8514 cv
92.4923 13.8494 92.3565 13.8358 92.2751 13.8766 cv
90.9954 13.8707 89.7235 13.7932 88.4594 13.768 cv
88.2868 13.766 88.1123 13.7641 87.9397 13.7641 cv
87.7924 13.7603 87.614 13.7078 87.4745 13.7621 cv
87.2495 13.7621 86.918 13.7117 86.7241 13.7893 cv
86.1832 13.7738 85.6422 13.7603 85.1051 13.7467 cv
84.8783 13.7292 84.285 13.6633 84.0911 13.7428 cv
83.8778 13.7428 83.4494 13.6924 83.2826 13.7699 cv
83.2051 13.7776 83.1275 13.7874 83.0499 13.7971 cv
82.7514 13.7951 82.5032 13.735 82.2124 13.7331 cv
82.2124 13.5838 82.8774 13.3492 83.0112 13.2813 cv
cp
85.3126 12.3623 mo
85.4193 12.3623 85.6616 12.1801 85.7798 12.1354 cv
85.8943 12.0986 86.0106 12.0599 86.1269 12.021 cv
86.2258 11.9667 86.3227 11.9144 86.4216 11.8601 cv
86.7706 11.7244 87.1739 11.6217 87.552 11.5558 cv
87.8099 11.5053 88.1026 11.5577 88.3547 11.5674 cv
88.692 11.579 89.0138 11.546 89.3396 11.546 cv
89.5258 11.5479 89.7526 11.5674 89.9174 11.5208 cv
90.2044 11.5402 90.5049 11.5247 90.8131 11.5247 cv
91.2126 11.5286 91.6139 11.5479 92.0269 11.5635 cv
93.3938 11.6139 94.8499 11.6565 96.2517 11.641 cv
96.4727 11.6256 96.6938 11.6061 96.9147 11.5906 cv
97.2444 11.6003 97.572 11.612 97.8997 11.6236 cv
99.509 11.6061 101.163 11.5596 102.788 11.6178 cv
103.327 11.6158 103.869 11.6081 104.408 11.6022 cv
104.639 11.6081 104.868 11.612 105.097 11.6178 cv
105.558 11.6934 105.915 12.0269 106.373 12.1238 cv
106.626 12.1762 107.249 12.2537 107.412 12.4283 cv
107.373 12.4379 107.334 12.4456 107.295 12.4573 cv
107.228 12.467 107.16 12.4767 107.092 12.4844 cv
106.869 12.4806 106.648 12.4767 106.429 12.4708 cv
106.225 12.4379 106.022 12.403 105.818 12.3701 cv
105.616 12.3662 105.413 12.3623 105.213 12.3585 cv
105.091 12.3585 104.938 12.341 104.837 12.3856 cv
104.659 12.3856 104.277 12.3429 104.143 12.4088 cv
104.001 12.4088 103.827 12.3894 103.709 12.4379 cv
103.509 12.4379 103.239 12.3953 103.073 12.4631 cv
102.751 12.4612 101.936 12.3933 101.713 12.5135 cv
101.564 12.5116 101.355 12.4496 101.223 12.5097 cv
101.031 12.5097 100.87 12.469 100.701 12.4535 cv
100.49 12.4535 100.275 12.4476 100.063 12.4456 cv
99.92 12.4456 99.7533 12.4244 99.6292 12.4708 cv
99.4528 12.4708 99.2298 12.4399 99.0805 12.498 cv
98.8944 12.4961 98.6597 12.4612 98.5027 12.5233 cv
97.9986 12.5213 97.5158 12.4883 96.9981 12.4864 cv
96.8431 12.4844 96.6297 12.4535 96.5056 12.5116 cv
96.399 12.5116 96.2788 12.5019 96.1877 12.5387 cv
96.0908 12.5387 95.9763 12.5349 95.8968 12.5658 cv
95.4296 12.564 94.9875 12.5116 94.5377 12.5019 cv
94.0394 12.4999 93.5353 12.4942 93.0371 12.4922 cv
92.8451 12.4864 92.4282 12.4244 92.2828 12.4883 cv
91.8796 12.4864 91.4743 12.4844 91.0691 12.4806 cv
90.9217 12.4806 90.7337 12.4573 90.6076 12.5077 cv
90.5494 12.5174 90.4894 12.5271 90.4331 12.5349 cv
89.8942 12.531 89.3531 12.5251 88.8122 12.5213 cv
88.727 12.5038 88.6377 12.4883 88.5524 12.4747 cv
88.3508 12.4708 88.1492 12.4651 87.9456 12.4631 cv
87.8331 12.4573 87.6741 12.4165 87.5713 12.4631 cv
86.7997 12.4573 86.0629 12.4244 85.3126 12.4224 cv
85.3126 12.403 85.3126 12.3817 85.3126 12.3623 cv
cp
89.516 11.0865 mo
89.8244 11.0885 90.059 10.9488 90.3304 10.8965 cv
90.7919 10.8074 91.2319 10.7259 91.6896 10.6464 cv
91.9881 10.5922 92.3177 10.627 92.6396 10.6038 cv
93.0758 10.5708 93.5275 10.4525 93.9716 10.4215 cv
94.1557 10.4079 94.3206 10.3731 94.4931 10.375 cv
94.7103 10.375 94.91 10.3827 95.102 10.307 cv
95.5246 10.3129 95.9473 10.3168 96.3719 10.3206 cv
96.6336 10.344 96.9012 10.3556 97.1843 10.3827 cv
97.3743 10.4099 97.5701 10.4351 97.762 10.4602 cv
98.051 10.4642 98.3399 10.4681 98.6287 10.4719 cv
98.7644 10.4913 98.8983 10.5088 99.034 10.5281 cv
99.2259 10.534 99.4178 10.5379 99.6098 10.5456 cv
99.8521 10.5883 100.095 10.629 100.335 10.6697 cv
100.432 10.6716 100.527 10.6716 100.622 10.6736 cv
100.732 10.689 100.822 10.7433 100.918 10.784 cv
101.046 10.8325 101.176 10.8577 101.318 10.8849 cv
101.851 10.9818 102.454 10.9818 102.987 11.0826 cv
103.012 11.0865 103.065 11.0943 103.074 11.1233 cv
103.03 11.2067 102.155 11.1136 102.008 11.1563 cv
101.884 11.166 101.758 11.1776 101.634 11.1893 cv
101.388 11.1835 101.118 11.1544 100.853 11.1447 cv
100.773 11.1427 100.637 11.1097 100.562 11.1486 cv
100.414 11.1467 100.232 11.1001 100.1 11.1447 cv
99.9743 11.1602 99.8503 11.1776 99.7242 11.1931 cv
99.4023 11.1912 98.8653 11.0322 98.5667 11.1931 cv
98.2042 11.1912 97.9017 11.1505 97.5565 11.1233 cv
97.3917 11.1079 97.161 11.0672 97.0059 11.1272 cv
96.8411 11.1272 96.7229 11.1699 96.5697 11.1738 cv
96.3893 11.1757 96.2149 11.0981 96.052 11.1796 cv
95.9454 11.1796 95.8426 11.1912 95.7611 11.2358 cv
94.9991 11.2319 94.2411 11.2242 93.4752 11.2203 cv
93.3318 11.2029 93.1864 11.1835 93.0409 11.164 cv
92.6958 11.1622 92.3487 11.1583 92.0017 11.1563 cv
91.7865 11.1544 91.2203 11.0885 91.0769 11.1524 cv
90.5437 11.1486 90.057 11.1156 89.516 11.1136 cv
89.516 11.104 89.516 11.0962 89.516 11.0865 cv
cp
113.835 68.1358 mo
113.558 68.1338 113.058 68.1861 112.825 68.1009 cv
112.806 68.1009 112.786 68.1009 112.767 68.1009 cv
112.767 68.0911 112.767 68.0834 112.767 68.0738 cv
112.887 68.0213 113.003 67.967 113.12 67.9147 cv
113.581 67.7518 114.097 67.6568 114.508 67.3854 cv
114.772 67.5522 113.94 68.0563 113.835 68.1358 cv
cp
73.2257 63.8896 mo
73.2257 63.8799 73.2276 63.8683 73.2276 63.8586 cv
73.0338 63.8586 72.5063 63.2033 72.392 63.0462 cv
72.392 63.0346 72.392 63.0249 72.392 63.0152 cv
72.4017 63.0152 72.4113 63.0152 72.4211 63.0152 cv
72.4211 62.9648 72.6053 62.9744 72.6537 62.9609 cv
72.7836 62.9687 72.9853 62.9609 73.0899 63.0307 cv
73.1985 63.1044 73.2412 63.7267 73.2587 63.8896 cv
73.2451 63.8896 73.2374 63.8896 73.2257 63.8896 cv
cp
72.0236 62.5576 mo
71.9111 62.5247 71.3024 61.9101 71.2849 61.786 cv
71.2733 61.7258 71.2984 61.691 71.3314 61.6522 cv
71.504 61.6599 71.6785 61.6715 71.8511 61.6793 cv
72.0954 61.6813 72.8224 61.594 72.9931 61.7356 cv
73.0938 61.817 73.1035 62.387 73.0609 62.5266 cv
73.0609 62.5809 72.9892 62.5731 72.9426 62.577 cv
72.679 62.5964 72.2718 62.6274 72.0236 62.5576 cv
cp
70.298 60.4307 mo
70.3057 60.4307 70.3174 60.4307 70.3252 60.4307 cv
70.3252 60.4229 70.3252 60.4113 70.3252 60.4016 cv
70.4104 60.4016 70.49 60.4501 70.585 60.4559 cv
70.775 60.4656 70.9572 60.4307 71.1356 60.4152 cv
71.3838 60.3919 71.6629 60.4268 71.8879 60.3531 cv
72.1826 60.3551 72.7333 60.295 72.9581 60.4152 cv
72.9931 60.4152 72.9853 60.4054 72.9853 60.4443 cv
72.9853 60.6207 73.0396 61.0492 72.9717 61.1733 cv
72.9174 61.2024 72.8631 61.2276 72.8069 61.2547 cv
72.7022 61.2547 72.5801 61.247 72.489 61.2819 cv
72.3415 61.2819 71.977 61.2179 71.884 61.2489 cv
71.8161 61.2606 71.7483 61.2683 71.6785 61.278 cv
71.4342 61.276 71.1822 61.3167 70.9631 61.2547 cv
70.7827 61.1965 70.3523 60.6033 70.298 60.4307 cv
cp
70.0498 59.9945 mo
69.9413 59.9499 69.5282 59.3798 69.602 59.2829 cv
69.6834 59.1743 70.3309 59.215 70.5054 59.1588 cv
71.3527 59.1646 72.1322 59.1685 72.9659 59.1743 cv
72.962 59.4011 72.9349 59.6629 72.9892 59.8645 cv
72.9659 59.8645 72.6285 59.942 72.613 59.9499 cv
72.4772 59.9654 72.3435 59.977 72.2078 59.9886 cv
72.0547 59.977 71.8995 59.9615 71.7444 59.9479 cv
71.566 59.942 71.409 59.9731 71.25 59.9828 cv
71.1588 59.9906 71.0445 59.9673 70.965 60.0002 cv
70.8506 59.9983 70.7109 60.0061 70.6179 60.0584 cv
70.4259 60.0545 70.2127 60.0584 70.0498 59.9945 cv
cp
69.4953 58.835 mo
69.3925 58.835 69.2782 58.8272 69.2045 58.7711 cv
69.1289 58.6741 69.0571 58.5771 68.9834 58.4782 cv
68.8225 58.2456 68.6403 58.0536 68.6054 57.7609 cv
68.8748 57.7628 69.0784 57.8209 69.3577 57.8229 cv
69.5573 57.8152 69.7609 57.8093 69.9645 57.8016 cv
70.3018 57.8074 70.678 57.8365 71.0329 57.8287 cv
71.217 57.8113 71.3993 57.7957 71.5854 57.7802 cv
71.9597 57.7784 72.361 57.8578 72.7119 57.755 cv
72.7856 57.7802 72.8574 57.8036 72.931 57.8268 cv
73.0396 57.9218 72.9969 58.4763 72.9949 58.6508 cv
72.9949 58.7032 72.9174 58.6896 72.8806 58.709 cv
72.5897 58.709 72.3028 58.7051 72.012 58.7051 cv
71.8956 58.7032 71.7288 58.6857 71.6358 58.7322 cv
71.4438 58.7303 71.1298 58.6779 70.9708 58.7575 cv
70.6993 58.7555 70.1604 58.6934 69.9587 58.8098 cv
69.8094 58.8079 69.6175 58.7865 69.4953 58.835 cv
cp
67.8609 56.4541 mo
67.9112 56.4541 67.9655 56.4211 68.0043 56.3959 cv
68.4114 56.4502 68.8206 56.4948 69.2491 56.5123 cv
69.3634 56.5064 69.4779 56.5064 69.5941 56.4987 cv
69.7009 56.5142 69.8055 56.5296 69.9122 56.5471 cv
70.1352 56.551 70.3581 56.553 70.5791 56.5549 cv
70.8448 56.5587 71.0658 56.4948 71.3295 56.5064 cv
71.5117 56.5375 71.6979 56.5627 71.8801 56.5878 cv
72.1806 56.5937 72.6867 56.4948 72.9252 56.6616 cv
73.0163 56.7216 72.9892 57.1889 73.0027 57.3227 cv
72.9931 57.3227 72.9833 57.3227 72.9736 57.3227 cv
72.9736 57.4138 72.2854 57.3576 72.1651 57.4061 cv
72.0488 57.4061 71.9111 57.3905 71.8181 57.4313 cv
71.3934 57.4273 70.9688 57.4255 70.5461 57.4216 cv
70.4104 57.4022 70.2747 57.3866 70.139 57.3693 cv
69.9296 57.3673 69.7144 57.3634 69.5031 57.3595 cv
69.3848 57.3595 69.2219 57.3441 69.1269 57.3886 cv
68.9989 57.3866 68.8264 57.3673 68.7236 57.4138 cv
68.5957 57.4138 68.4639 57.4157 68.363 57.3557 cv
68.1382 57.2161 67.9346 56.6907 67.8609 56.4541 cv
cp
67.6612 55.9848 mo
67.4983 55.886 67.3626 55.4226 67.318 55.2384 cv
67.3296 55.2384 67.3373 55.2384 67.349 55.2384 cv
67.349 55.2287 67.349 55.219 67.349 55.2094 cv
67.5564 55.2112 67.7445 55.186 67.9539 55.186 cv
68.1323 55.1822 68.3184 55.1977 68.4755 55.1569 cv
68.8225 55.1589 69.1677 55.1628 69.5147 55.1628 cv
69.6504 55.1744 69.7861 55.1822 69.92 55.1899 cv
70.0673 55.1822 70.2107 55.1783 70.3561 55.1687 cv
70.7245 55.1764 71.091 55.2094 71.4536 55.2229 cv
71.6165 55.219 71.7813 55.2132 71.9461 55.2094 cv
72.3163 55.2267 72.6556 55.3121 73.0435 55.3276 cv
73.0435 55.5758 73.0105 55.8123 73.0085 56.078 cv
73.0008 56.078 72.9892 56.078 72.9833 56.078 cv
72.9833 56.1264 72.8185 56.1148 72.7778 56.1342 cv
71.6804 56.1284 70.5772 56.1089 69.5109 56.0857 cv
69.3654 56.0682 69.2219 56.0508 69.0766 56.0353 cv
68.8748 56.0333 68.6713 56.0275 68.4716 56.0237 cv
68.3475 56.0237 68.2002 56.0082 68.0935 56.0508 cv
67.9346 56.0489 67.7833 56.0585 67.6612 55.9848 cv
cp
67.0621 54.7149 mo
67.031 54.6432 67.0019 54.5733 66.969 54.4978 cv
66.903 54.3756 66.7653 54.0945 66.8585 53.949 cv
66.9089 53.9161 66.9554 53.8831 67.0078 53.8501 cv
67.3567 53.8521 67.7019 53.8696 68.0218 53.8908 cv
68.2505 53.8908 68.4832 53.8908 68.712 53.8908 cv
68.8477 53.8967 68.9834 53.9064 69.1173 53.9142 cv
69.2432 53.8987 69.3693 53.8831 69.4934 53.8676 cv
69.7842 53.8754 70.075 53.8851 70.362 53.8967 cv
70.8273 53.8908 71.2965 53.8579 71.7793 53.8773 cv
72.1961 53.8908 72.5936 53.9529 73.0221 53.9685 cv
73.0202 54.1235 73.0512 54.68 72.9697 54.7595 cv
72.9368 54.7712 72.9038 54.7828 72.869 54.7924 cv
72.4947 54.7964 72.1206 54.7983 71.7444 54.8003 cv
71.3702 54.8021 70.9941 54.8021 70.6179 54.8021 cv
70.4434 54.7828 70.2709 54.7595 70.0945 54.7362 cv
69.7687 54.7324 69.4391 54.7285 69.1134 54.7246 cv
68.9117 54.7226 68.6014 54.6335 68.4193 54.7226 cv
67.9694 54.7207 67.5157 54.7188 67.0621 54.7149 cv
cp
66.5346 53.3635 mo
66.4396 53.286 66.1624 52.6752 66.2885 52.5744 cv
66.5773 52.3456 67.3044 52.586 67.6825 52.462 cv
68.0877 52.4638 68.491 52.5104 68.8943 52.5259 cv
69.1832 52.5279 69.472 52.5337 69.7609 52.5395 cv
69.9064 52.555 70.0498 52.5724 70.1952 52.5919 cv
70.9262 52.6054 71.6145 52.5647 72.3067 52.6015 cv
72.4967 52.6093 72.8438 52.5938 72.9853 52.6869 cv
73.0919 52.7624 73.0686 53.3034 73.0085 53.4101 cv
72.9135 53.5729 71.2054 53.3674 70.8874 53.4954 cv
70.5656 53.4915 70.2282 53.4488 69.9025 53.4488 cv
69.5089 53.4565 69.1114 53.4605 68.7159 53.4663 cv
68.4948 53.4449 68.2719 53.4217 68.0509 53.4004 cv
67.9151 53.4042 67.7814 53.4062 67.6457 53.4101 cv
67.4944 53.4042 67.2966 53.3577 67.1551 53.414 cv
67.0678 53.4236 66.9826 53.4314 66.8953 53.443 cv
66.7673 53.443 66.6258 53.4353 66.5346 53.3635 cv
cp
65.858 51.5856 mo
65.8386 51.5236 65.7688 51.4091 65.7998 51.3413 cv
65.8658 51.192 66.5928 51.2463 66.7635 51.1861 cv
67.0155 51.1979 67.2637 51.2075 67.5157 51.2172 cv
68.0062 51.2211 68.4968 51.2269 68.9854 51.2288 cv
69.1134 51.2463 69.2394 51.2676 69.3654 51.2831 cv
69.6543 51.2986 69.9548 51.2676 70.2321 51.2676 cv
70.4357 51.2773 70.6373 51.285 70.839 51.2947 cv
71.029 51.2909 71.1822 51.2521 71.3605 51.2443 cv
71.7308 51.2288 72.1206 51.2172 72.5161 51.2191 cv
72.7022 51.2211 72.8999 51.2056 73.0686 51.2521 cv
73.0686 51.2695 73.0686 51.2909 73.0686 51.3083 cv
73.1171 51.3083 73.0861 51.3354 73.0783 51.3684 cv
73.0551 51.4945 73.0899 52.0547 73.0047 52.1013 cv
72.9194 52.1168 72.8302 52.1285 72.7449 52.144 cv
72.3958 52.144 72.0488 52.1401 71.7017 52.1381 cv
71.5272 52.1381 71.3024 52.1052 71.1531 52.1634 cv
70.7323 52.1615 70.3193 52.1459 69.8811 52.1227 cv
69.7318 52.1129 69.4953 52.0586 69.3616 52.1245 cv
69.061 52.1285 68.7605 52.1304 68.4619 52.1324 cv
68.2409 52.1227 67.5971 52.0295 67.4226 52.1149 cv
67.2287 52.0955 67.0387 52.0761 66.8449 52.0586 cv
66.6394 52.047 66.1566 52.0625 66.0189 51.9695 cv
65.9065 51.8958 65.889 51.7038 65.858 51.5856 cv
cp
65.6447 50.7363 mo
65.4858 50.6142 65.4353 50.1372 65.4101 49.9356 cv
65.5808 49.9356 65.7785 49.9298 65.9317 49.8793 cv
66.3466 49.8929 66.7828 49.9104 67.2016 49.9491 cv
67.3296 49.9647 67.4382 49.9957 67.5778 50.0034 cv
67.9346 50.0034 68.2912 50.0034 68.648 50.0054 cv
68.9273 49.9899 69.2219 49.9395 69.5147 49.9434 cv
69.728 49.957 69.9413 49.9743 70.1525 49.9879 cv
70.3174 49.9821 70.4822 49.9743 70.645 49.9647 cv
71.0018 49.9666 71.3566 49.9686 71.7153 49.9705 cv
71.9829 49.9666 72.8786 49.8871 73.0396 50.017 cv
73.1229 50.0849 73.1249 50.2691 73.1249 50.3834 cv
73.1249 50.4843 73.1462 50.6743 73.0803 50.7422 cv
72.9756 50.8449 72.6092 50.7461 72.4618 50.8139 cv
72.3454 50.8139 72.2097 50.7984 72.1147 50.8411 cv
71.9577 50.8411 71.7192 50.8023 71.5931 50.8663 cv
71.2015 50.8643 70.8176 50.8624 70.4104 50.8585 cv
70.2127 50.8585 69.9413 50.8081 69.7745 50.8876 cv
69.5399 50.8818 69.3073 50.8798 69.0784 50.8759 cv
68.8284 50.8643 68.3785 50.7829 68.1517 50.8759 cv
67.8376 50.874 67.5526 50.8256 67.2559 50.8159 cv
66.9302 50.8023 65.8192 50.874 65.6447 50.7363 cv
cp
65.3035 49.5148 mo
65.2065 49.4393 65.1988 49.2667 65.1717 49.1523 cv
65.1503 49.0593 65.0824 48.8789 65.129 48.7762 cv
65.129 48.7296 65.1465 48.7355 65.1872 48.7257 cv
65.381 48.6753 65.604 48.6966 65.8212 48.6889 cv
66.3466 48.6657 66.9244 48.6773 67.4712 48.6734 cv
67.6786 48.6695 67.9268 48.7083 68.1071 48.6482 cv
69.3189 48.7296 70.5636 48.6909 71.8375 48.6986 cv
72.0876 48.6986 72.9058 48.6521 73.0551 48.7645 cv
73.1133 48.8072 73.0783 49.3384 73.0764 49.4586 cv
73.0279 49.4684 72.9776 49.4741 72.931 49.4839 cv
72.8631 49.4936 72.7953 49.5032 72.7294 49.5148 cv
72.4928 49.511 72.0818 49.4606 71.8918 49.5362 cv
71.6863 49.5362 71.4865 49.5362 71.2829 49.5323 cv
71.2073 49.5439 71.1279 49.5536 71.0502 49.5595 cv
70.7614 49.5595 70.1991 49.4936 69.982 49.6138 cv
69.8094 49.6098 69.633 49.6098 69.4604 49.606 cv
69.1677 49.5827 68.6403 49.4645 68.3611 49.575 cv
68.0839 49.575 67.6223 49.4722 67.38 49.5711 cv
67.1144 49.5672 66.5094 49.5148 66.3098 49.5925 cv
66.0655 49.5925 65.4586 49.6409 65.3035 49.5148 cv
cp
64.9622 47.4171 mo
64.9719 47.4171 64.9817 47.4171 64.9894 47.4171 cv
64.9894 47.3782 64.9778 47.388 65.0185 47.388 cv
65.5788 47.3802 66.1663 47.3646 66.7557 47.3685 cv
67.0717 47.3705 67.4808 47.4287 67.7659 47.3453 cv
68.2079 47.3744 68.71 47.4053 69.156 47.4092 cv
69.3887 47.4035 69.6155 47.3957 69.8463 47.3899 cv
70.1274 47.4132 70.4047 47.4383 70.6858 47.4616 cv
70.8331 47.4539 70.9572 47.3957 71.1201 47.3957 cv
71.3799 47.3957 71.6397 47.3976 71.8995 47.3996 cv
71.9887 47.4053 72.074 47.4112 72.1632 47.4189 cv
72.4618 47.3996 72.8592 47.3589 73.1152 47.4907 cv
73.1597 47.4907 73.1462 47.5082 73.1462 47.5508 cv
73.1424 47.7718 73.1404 47.9928 73.1404 48.2139 cv
73.1326 48.2139 73.121 48.2139 73.1113 48.2139 cv
73.1113 48.2605 72.6169 48.2314 72.5335 48.2682 cv
72.167 48.2662 71.8026 48.2643 71.4342 48.2623 cv
71.25 48.2605 71.027 48.2352 70.8855 48.3186 cv
70.7711 48.3166 70.6102 48.2721 70.5113 48.3148 cv
70.1933 48.3128 69.2723 48.243 69.063 48.3651 cv
68.7896 48.3632 68.5725 48.3069 68.3107 48.303 cv
67.4033 48.2837 66.4474 48.2953 65.5633 48.2333 cv
65.4082 48.2216 65.1717 48.2759 65.0611 48.1751 cv
64.9274 48.0549 64.9603 47.6225 64.9622 47.4171 cv
cp
64.749 46.4864 mo
64.7276 46.3662 64.7102 46.1781 64.8285 46.1238 cv
65.0476 46.0249 65.4276 46.0869 65.6912 46.0889 cv
66.4551 46.0928 67.2637 46.1063 68.0043 46.0792 cv
68.2118 46.0676 68.4541 46.1044 68.6403 46.0462 cv
68.8923 46.054 69.1405 46.0578 69.3925 46.0617 cv
69.4875 46.0753 69.5864 46.0908 69.6814 46.1063 cv
70.0402 46.1083 70.3968 46.1141 70.7536 46.118 cv
70.8874 46.1257 71.0231 46.1315 71.157 46.1393 cv
71.5795 46.1315 72.0429 46.1238 72.487 46.1257 cv
72.679 46.1276 72.9329 46.1141 73.0938 46.1878 cv
73.2063 46.1878 73.1365 46.8741 73.0899 46.971 cv
72.9485 46.971 72.7894 46.9148 72.6556 46.9691 cv
72.4967 46.9691 72.264 46.9303 72.1361 46.9944 cv
71.7987 46.9924 71.4613 46.9905 71.124 46.9885 cv
70.965 46.9866 70.7652 46.9614 70.6334 47.0137 cv
70.4686 47.0118 69.8307 46.9614 69.7357 47.008 cv
69.5632 47.008 69.2937 46.9672 69.156 47.0351 cv
68.9951 47.0351 68.8109 46.973 68.6655 47.0331 cv
68.1614 47.0312 67.6612 46.9691 67.1337 46.9653 cv
66.9806 46.9749 66.8255 46.9827 66.6723 46.9924 cv
66.4803 46.9905 65.9996 46.9459 65.8599 47.0176 cv
65.6603 47.0157 64.9603 46.9769 64.8614 46.8548 cv
64.7935 46.7733 64.7683 46.591 64.749 46.4864 cv
cp
64.5997 44.9275 mo
64.6094 44.9275 64.6171 44.9275 64.6288 44.9275 cv
64.6288 44.8771 64.7257 44.8926 64.7722 44.8906 cv
64.904 44.8751 65.0262 44.8442 65.1774 44.8442 cv
65.5555 44.8383 66.1372 44.9197 66.4513 44.7918 cv
66.62 44.8403 66.9806 44.8054 67.1726 44.8054 cv
67.444 44.8247 67.7135 44.8422 67.983 44.8577 cv
68.1555 44.8577 68.33 44.8538 68.5026 44.8519 cv
68.5996 44.8422 68.6946 44.8286 68.7934 44.819 cv
69.3809 44.817 69.9664 44.8151 70.5579 44.8151 cv
70.7207 44.8286 70.8855 44.8422 71.0484 44.8577 cv
71.2131 44.8442 71.376 44.8344 71.5408 44.8208 cv
71.7056 44.8383 71.8685 44.8538 72.0313 44.8733 cv
72.3144 44.8965 72.7914 44.7918 73.0435 44.8887 cv
73.1035 44.8887 73.0938 44.9818 73.0997 45.0322 cv
73.1133 45.2067 73.1888 45.4549 73.1229 45.6255 cv
73.0647 45.7612 72.1787 45.641 71.9984 45.7185 cv
71.7424 45.7185 71.252 45.6604 71.0445 45.7438 cv
70.8273 45.7419 70.3136 45.6488 70.1468 45.7108 cv
69.9664 45.6992 69.7823 45.6876 69.5981 45.6778 cv
69.1832 45.676 68.7682 45.674 68.3553 45.672 cv
68.1594 45.6701 67.8803 45.6217 67.7193 45.6953 cv
67.4614 45.6953 67.0039 45.6371 66.7925 45.7205 cv
66.459 45.7185 66.1644 45.6642 65.8386 45.6526 cv
65.7726 45.6546 65.7029 45.6546 65.6369 45.6565 cv
65.5129 45.6565 65.3578 45.6371 65.2608 45.6817 cv
64.6133 45.6798 64.5958 45.5499 64.5997 44.9275 cv
cp
64.5202 43.4811 mo
64.7121 43.4636 64.9079 43.4463 65.098 43.4268 cv
65.3985 43.4249 66.0131 43.4908 66.2535 43.4036 cv
66.3892 43.4074 66.5269 43.4094 66.6607 43.4113 cv
66.7576 43.4288 66.8565 43.4443 66.9476 43.4598 cv
67.1919 43.4617 67.4323 43.4636 67.6728 43.4656 cv
67.8628 43.4617 68.0392 43.4133 68.2525 43.4152 cv
68.4348 43.4191 68.617 43.4229 68.7993 43.4268 cv
68.9427 43.4404 69.0766 43.4753 69.2336 43.4772 cv
70.55 43.5063 71.8065 43.4811 73.0803 43.5295 cv
73.0803 43.5393 73.0803 43.547 73.0803 43.5567 cv
73.1288 43.5586 73.1113 43.5742 73.1113 43.6168 cv
73.1074 43.8515 73.1462 44.1597 73.0745 44.3652 cv
73.0745 44.404 73.0686 44.3982 73.0435 44.406 cv
72.8786 44.4099 72.7177 44.4156 72.5549 44.4195 cv
72.2854 44.4215 72.0158 44.4195 71.7463 44.4176 cv
71.6126 44.4176 71.4516 44.4001 71.3411 44.4428 cv
71.1375 44.4408 70.9379 44.439 70.7323 44.4331 cv
70.5656 44.4156 70.3097 44.3691 70.1545 44.439 cv
69.9238 44.4351 69.5981 44.3847 69.4041 44.4622 cv
68.237 44.4563 67.0717 44.4506 65.9026 44.4428 cv
65.6912 44.4408 65.478 44.439 65.2667 44.4331 cv
65.1601 44.4156 65.0553 44.4001 64.9487 44.3847 cv
64.8362 44.3769 64.7024 44.3847 64.619 44.3245 cv
64.4795 44.216 64.4697 43.6576 64.5202 43.4811 cv
cp
64.5085 42.1568 mo
64.5628 42.0968 64.6597 42.0929 64.7296 42.0657 cv
65.6001 42.0696 66.5094 42.1142 67.3355 42.1316 cv
67.5564 42.1259 67.7775 42.1181 67.9985 42.1123 cv
68.7372 42.1259 69.4953 42.1395 70.2243 42.1433 cv
70.3697 42.1355 70.5152 42.122 70.6606 42.1123 cv
70.7769 42.1259 70.8913 42.1413 71.0057 42.153 cv
71.5079 42.1607 72.0081 42.1724 72.5083 42.1782 cv
72.6712 42.1743 72.9097 42.1355 73.0454 42.217 cv
73.1811 42.2984 73.0881 42.8936 73.0822 43.0661 cv
73.0726 43.0661 73.0628 43.0661 73.0551 43.0661 cv
73.0531 43.1302 72.5161 43.0507 72.4172 43.0914 cv
71.9849 43.0875 71.5506 43.0856 71.1163 43.0836 cv
70.9495 43.0817 70.7361 43.0526 70.5966 43.1108 cv
70.4104 43.1088 70.1895 43.039 70.0168 43.1069 cv
69.3732 43.105 68.7721 43.0526 68.1362 43.0797 cv
68.0276 43.0856 67.9151 43.0526 67.8201 43.0952 cv
67.2405 43.0914 66.7053 43.0661 66.1139 43.0526 cv
65.9356 43.0507 65.7029 42.9693 65.5342 43.0236 cv
65.4469 43.0332 65.3617 43.0429 65.2744 43.0507 cv
65.032 43.0488 64.7121 43.072 64.5356 42.9421 cv
64.4077 42.849 64.4058 42.2674 64.5085 42.1568 cv
cp
64.4776 40.7919 mo
65.668 40.7977 66.8565 40.85 68.0334 40.8927 cv
68.1789 40.8889 68.3223 40.885 68.4657 40.8791 cv
68.8109 40.8889 69.1734 40.947 69.5089 40.9489 cv
69.6466 40.9354 69.7784 40.9218 69.9141 40.9082 cv
70.267 40.9043 70.6102 40.8966 70.9572 40.9102 cv
71.252 40.9237 73.0396 40.9528 73.1346 41.0556 cv
73.1967 41.1196 73.1811 41.2921 73.1772 41.3891 cv
73.1637 42.027 72.8535 41.6218 72.4831 41.7884 cv
71.5001 41.7846 70.5617 41.7497 69.5903 41.7459 cv
69.3887 41.7439 68.8594 41.6857 68.7236 41.74 cv
67.5875 41.7323 66.4494 41.7245 65.3093 41.7187 cv
65.032 41.6993 64.7528 41.678 64.4736 41.6586 cv
64.4485 41.5616 64.4233 41.4627 64.3999 41.3659 cv
64.3767 41.1739 64.4194 40.9548 64.4776 40.7919 cv
cp
64.6424 39.5549 mo
64.7917 39.5452 64.9429 39.5336 65.0922 39.5239 cv
65.2201 39.52 65.3501 39.5258 65.4683 39.4948 cv
65.6176 39.5336 65.7765 39.5007 65.9317 39.4987 cv
66.3001 39.5007 66.6646 39.5026 67.031 39.5026 cv
67.3219 39.5045 67.5933 39.5316 67.8686 39.5375 cv
68.2505 39.5433 68.5996 39.5064 68.968 39.5142 cv
69.6136 39.5278 70.3018 39.551 70.965 39.5549 cv
71.3508 39.5569 72.9135 39.4871 73.1133 39.646 cv
73.2626 39.7662 73.214 40.2742 73.214 40.4934 cv
73.0861 40.4914 72.9485 40.5418 72.8069 40.5457 cv
72.6149 40.5437 72.423 40.5398 72.2311 40.5398 cv
72.0954 40.5341 71.8898 40.4855 71.7677 40.5437 cv
71.3566 40.5398 70.9262 40.5089 70.4958 40.505 cv
70.3581 40.505 70.172 40.4836 70.0615 40.5341 cv
69.664 40.5321 69.2762 40.505 68.9039 40.4972 cv
68.3164 40.4934 67.729 40.4894 67.1396 40.4875 cv
66.9554 40.4817 66.459 40.3964 66.3292 40.4546 cv
66.1256 40.4526 65.8386 40.4119 65.6641 40.4798 cv
65.2667 40.4759 64.8711 40.3848 64.4795 40.3576 cv
64.4814 40.1521 64.4524 39.6169 64.6424 39.5549 cv
cp
64.8692 38.2578 mo
65.319 38.2094 65.7726 38.2501 66.2264 38.2539 cv
66.4378 38.2462 66.653 38.2384 66.8642 38.2287 cv
67.38 38.2403 67.9151 38.2346 68.4541 38.2403 cv
68.776 38.2403 69.0688 38.252 69.379 38.2462 cv
69.5089 38.2403 69.6388 38.2501 69.757 38.2171 cv
69.9878 38.2384 70.2166 38.2558 70.4473 38.2753 cv
71.345 38.283 72.2427 38.2869 73.1385 38.2946 cv
73.1365 38.5835 73.154 38.886 73.1637 39.1923 cv
73.152 39.1923 73.1424 39.1923 73.1346 39.1923 cv
73.1346 39.2021 73.1346 39.2117 73.1326 39.2194 cv
73.057 39.2098 72.9795 39.2021 72.8999 39.1923 cv
72.7487 39.1865 72.5936 39.1826 72.4385 39.1768 cv
72.3144 39.1614 72.0934 39.1051 71.977 39.1555 cv
71.7367 39.1555 71.4225 39.0837 71.2248 39.1807 cv
70.8331 39.1787 70.4647 39.1342 70.0945 39.1206 cv
69.949 39.1225 69.8036 39.1284 69.6582 39.1323 cv
69.4991 39.1244 69.2859 39.0799 69.1425 39.14 cv
68.9544 39.138 68.5996 39.076 68.4484 39.1361 cv
68.1691 39.1342 67.89 39.1323 67.6107 39.1323 cv
67.4537 39.1303 67.2521 39.1051 67.1202 39.1574 cv
66.7925 39.1535 66.463 39.1496 66.1372 39.1478 cv
66.0035 39.1361 65.7998 39.078 65.6719 39.1206 cv
65.3539 39.1187 64.9448 39.171 64.6597 39.0857 cv
64.6152 39.0857 64.6229 39.0664 64.6171 39.0256 cv
64.5842 38.7891 64.6055 38.2849 64.8692 38.2578 cv
cp
64.6831 37.6122 mo
64.7917 37.044 64.7645 36.9762 65.3946 36.9529 cv
65.5323 36.9452 65.6758 36.9588 65.7998 36.9219 cv
65.9801 36.9588 66.1817 36.9452 66.3776 36.9607 cv
66.7635 36.9801 67.1512 36.9995 67.5351 37.0189 cv
67.729 37.0111 67.9229 37.0014 68.1129 36.9937 cv
69.8463 37.0053 71.5544 36.9665 73.2024 37.079 cv
73.2005 37.3446 73.1927 37.6083 73.1113 37.8312 cv
73.1113 37.9534 72.5393 37.8235 72.4192 37.8836 cv
71.5893 37.8797 70.7595 37.8739 69.9316 37.8681 cv
69.6213 37.8565 68.9698 37.7188 68.6868 37.8351 cv
68.5434 37.8351 68.3572 37.7731 68.2253 37.8312 cv
68.1671 37.8429 68.1091 37.8506 68.0509 37.8603 cv
67.6864 37.8565 67.318 37.8526 66.9535 37.8506 cv
66.558 37.8215 66.143 37.7769 65.7358 37.7886 cv
65.6351 37.7886 65.5071 37.7789 65.4198 37.8158 cv
65.1755 37.8158 64.904 37.8584 64.6985 37.7556 cv
64.6424 37.7556 64.6753 37.651 64.6831 37.6122 cv
cp
64.9079 36.4547 mo
64.9099 36.2744 64.9312 35.8284 65.094 35.7625 cv
65.2996 35.6829 65.5924 35.7082 65.8367 35.7082 cv
66.1837 35.7101 66.5521 35.7082 66.8778 35.6908 cv
66.9844 35.6791 67.0912 35.6694 67.1958 35.6578 cv
68.0314 35.7411 68.968 35.7256 69.8559 35.7315 cv
70.0964 35.7431 70.3348 35.7508 70.5772 35.7625 cv
70.9495 35.7567 71.312 35.7334 71.7076 35.7411 cv
71.8801 35.7528 72.0547 35.7625 72.2272 35.7722 cv
72.5393 35.778 72.9562 35.7218 73.1849 35.8963 cv
73.2683 35.9602 73.2315 36.4449 73.2354 36.5885 cv
73.2257 36.5885 73.216 36.5885 73.2063 36.5885 cv
73.2063 36.6505 72.869 36.5924 72.7992 36.6156 cv
72.3668 36.6136 71.9344 36.6117 71.5001 36.6097 cv
71.3024 36.6078 71.0309 36.5652 70.8641 36.6331 cv
70.7207 36.6331 70.3911 36.5826 70.2845 36.6292 cv
70.0421 36.6292 69.7318 36.5361 69.5031 36.6253 cv
69.0203 36.604 68.5394 36.5806 68.0586 36.5594 cv
67.9326 36.5594 67.758 36.5399 67.6534 36.5865 cv
67.413 36.5865 66.9224 36.4856 66.7305 36.5826 cv
66.1294 36.5788 65.5323 36.5749 64.9351 36.571 cv
64.9351 36.5633 64.9351 36.5516 64.9351 36.5419 cv
64.8867 36.5419 64.9079 36.4935 64.9079 36.4547 cv
cp
65.4004 34.5372 mo
65.4624 34.4925 65.5226 34.4499 65.5826 34.4072 cv
66.2322 34.4111 66.8876 34.4479 67.5196 34.4712 cv
67.7698 34.4731 68.0218 34.4712 68.2719 34.4712 cv
68.4232 34.4595 68.5666 34.4208 68.7334 34.4266 cv
69.5981 34.4421 70.4415 34.4906 71.3392 34.4964 cv
71.6067 34.4964 71.8782 34.4964 72.1477 34.4984 cv
72.4327 34.4945 72.931 34.4111 73.1811 34.5527 cv
73.3226 34.6322 73.2781 35.1827 73.2412 35.3456 cv
73.1365 35.3456 72.9562 35.3263 72.8651 35.3708 cv
72.6828 35.3631 72.4986 35.3534 72.3163 35.3437 cv
71.8122 35.3224 71.3314 35.332 70.8138 35.332 cv
70.6567 35.3282 70.4259 35.2681 70.2922 35.3282 cv
69.2161 35.3243 68.175 35.2894 67.0834 35.2836 cv
66.6394 35.2797 66.1566 35.2797 65.7223 35.2506 cv
65.5458 35.237 65.381 35.2409 65.2317 35.1827 cv
65.2337 35.0354 65.3171 34.6379 65.4004 34.5372 cv
cp
65.8715 33.1605 mo
65.9394 33.1023 66.0538 33.1102 66.1392 33.0771 cv
66.2749 33.0966 66.4125 33.114 66.5444 33.1314 cv
66.7072 33.1237 66.874 33.1198 67.0369 33.112 cv
67.2365 33.1237 67.4421 33.1334 67.6437 33.1431 cv
67.8841 33.1275 68.1246 33.1102 68.365 33.0946 cv
68.902 33.1043 69.4662 33.1741 70.015 33.1761 cv
70.6431 33.1799 71.3081 33.1663 71.9538 33.1702 cv
72.1865 33.1702 73.1811 33.1702 73.2917 33.2827 cv
73.3595 33.3583 73.3381 33.5309 73.3381 33.6395 cv
73.3342 33.8295 73.3459 33.9574 73.2179 34.0738 cv
72.9892 34.0776 72.7565 34.0815 72.5238 34.0854 cv
72.3804 34.0873 72.1904 34.033 72.0624 34.095 cv
71.504 34.0911 70.9456 34.0873 70.3872 34.0834 cv
70.17 34.0738 69.8947 33.9729 69.6911 34.0815 cv
69.0048 34.0795 68.3455 34.064 67.6999 34.0233 cv
67.5196 34.0097 67.064 33.9652 66.9166 34.0388 cv
66.8585 34.0466 66.8003 34.0563 66.7421 34.0659 cv
66.3349 34.064 65.9744 33.969 65.5846 33.9418 cv
65.5865 33.7557 65.7339 33.2672 65.8715 33.1605 cv
cp
66.1799 31.9255 mo
66.2574 31.8498 66.3951 31.8441 66.4939 31.8072 cv
66.8565 31.8091 67.1939 31.877 67.5351 31.8964 cv
67.9016 31.8983 68.2661 31.9003 68.6345 31.9003 cv
68.7586 31.8886 68.8846 31.875 69.0087 31.8576 cv
69.22 31.8614 69.4139 31.9139 69.6466 31.9119 cv
69.8966 31.9041 70.1468 31.8964 70.3988 31.8886 cv
70.7168 31.8944 71.0736 31.9371 71.409 31.9293 cv
72.0081 31.9119 72.679 31.9041 73.2606 31.9623 cv
73.2606 32.1135 73.3381 32.5905 73.2567 32.6875 cv
73.1985 32.7146 73.1404 32.7418 73.0822 32.7709 cv
72.7856 32.7689 72.4501 32.7339 72.2156 32.8523 cv
72.0275 32.8523 71.8647 32.8038 71.694 32.7941 cv
71.502 32.7941 71.3081 32.7921 71.1163 32.7921 cv
71.0193 32.7999 70.9243 32.8077 70.8293 32.8154 cv
70.6063 32.8018 70.3833 32.7882 70.1623 32.7747 cv
70.0673 32.7591 69.9684 32.7418 69.8714 32.7262 cv
69.1948 32.701 68.5434 32.6875 67.8492 32.6836 cv
67.6087 32.6816 67.1764 32.6312 66.9826 32.7068 cv
66.7848 32.7068 66.1469 32.7088 66.0228 32.6312 cv
65.9065 32.5595 66.1003 31.9991 66.1799 31.9255 cv
cp
66.4668 31.3768 mo
66.4881 31.1557 66.6296 30.7137 66.7906 30.5664 cv
66.7906 30.5566 66.7906 30.5489 66.7906 30.5373 cv
67.3355 30.5412 67.8531 30.6012 68.3805 30.5954 cv
68.8555 30.5896 69.3887 30.5741 69.885 30.5837 cv
70.0363 30.6032 70.1933 30.6206 70.3445 30.638 cv
70.55 30.6497 70.7595 30.6244 70.9552 30.6206 cv
71.1104 30.6303 71.2636 30.64 71.4167 30.6458 cv
71.8239 30.6419 72.2465 30.6458 72.6595 30.6555 cv
72.834 30.6574 73.0609 30.6244 73.1967 30.7078 cv
73.2838 30.7602 73.2587 31.303 73.2664 31.4407 cv
73.2528 31.4407 73.2451 31.4407 73.2335 31.4407 cv
73.2335 31.4931 73.0997 31.4776 73.0609 31.497 cv
72.9271 31.497 72.7371 31.4698 72.6265 31.5241 cv
72.3532 31.5221 71.9111 31.4117 71.6727 31.5183 cv
71.5234 31.5183 71.314 31.464 71.1822 31.5164 cv
71.0755 31.5144 70.9495 31.5048 70.8641 31.5435 cv
70.4686 31.5144 70.0711 31.4892 69.6756 31.4582 cv
69.5205 31.4582 69.377 31.5067 69.2141 31.497 cv
69.0028 31.4814 68.7721 31.4757 68.5511 31.4679 cv
68.4484 31.464 68.3262 31.4369 68.2312 31.4718 cv
68.1071 31.4698 67.9578 31.4505 67.855 31.497 cv
67.5002 31.497 66.7653 31.5551 66.4978 31.433 cv
66.4513 31.433 66.463 31.4175 66.4668 31.3768 cv
cp
67.159 29.6376 mo
67.1997 29.5406 67.1958 29.4301 67.2598 29.3448 cv
67.3025 29.2847 67.3742 29.2692 67.4343 29.2382 cv
67.8066 29.2421 68.1498 29.2712 68.5336 29.2731 cv
68.7353 29.2673 68.9369 29.2576 69.1386 29.2498 cv
69.6368 29.2595 70.1991 29.306 70.7032 29.308 cv
71.0193 29.3099 71.3431 29.2712 71.6572 29.2653 cv
72.1942 29.2498 72.7313 29.2769 73.2451 29.3312 cv
73.2606 29.4088 73.2799 29.4844 73.2955 29.562 cv
73.3129 29.781 73.2917 30.0215 73.2703 30.2251 cv
73.1424 30.2251 73.0008 30.2096 72.8942 30.2542 cv
72.4036 30.2503 71.9111 30.2483 71.4206 30.2444 cv
71.0348 30.2328 70.6489 30.2173 70.2631 30.2057 cv
70.0246 30.1882 69.5573 30.1165 69.3382 30.2037 cv
69.2259 30.2037 69.0784 30.2115 68.9893 30.26 cv
68.7198 30.2328 68.4503 30.2018 68.1789 30.1746 cv
67.7755 30.1708 67.3723 30.1669 66.9671 30.163 cv
66.9671 30.1533 66.9671 30.1437 66.9671 30.1339 cv
66.9554 30.1339 66.9476 30.1339 66.938 30.1339 cv
66.938 29.9575 67.093 29.7869 67.159 29.6376 cv
cp
67.9035 27.9411 mo
68.1207 27.9411 68.3107 27.9974 68.5084 27.9895 cv
69.0339 27.9585 69.5748 27.9508 70.1332 27.9508 cv
70.267 27.9585 70.4027 27.9663 70.5326 27.974 cv
71.1163 27.9585 71.7599 27.9449 72.3571 27.9663 cv
72.6828 27.9799 72.9833 28.0749 73.311 28.0865 cv
73.309 28.2533 73.3459 28.6953 73.2664 28.8058 cv
73.1559 28.9512 72.0197 28.8989 71.7735 28.8833 cv
71.5679 28.8679 71.2713 28.7961 71.0793 28.8833 cv
70.8506 28.8815 70.6179 28.8815 70.3872 28.8776 cv
70.2495 28.8737 70.0789 28.8272 69.9509 28.8776 cv
69.4023 28.8756 68.8148 28.8853 68.2448 28.866 cv
68.0237 28.8562 67.8143 28.8078 67.5816 28.8058 cv
67.5836 28.482 67.7484 28.1912 67.9035 27.9411 cv
cp
68.1905 27.4234 mo
68.1924 27.2722 68.396 26.8727 68.5046 26.772 cv
68.5569 26.7235 68.6305 26.7022 68.6926 26.6711 cv
69.1793 26.675 69.6407 26.7138 70.11 26.7079 cv
70.6897 26.7022 71.3217 26.6866 71.9325 26.6906 cv
72.266 26.6925 72.9717 26.6479 73.2199 26.7758 cv
73.3342 26.834 73.3342 27.0356 73.3342 27.1597 cv
73.3342 27.2722 73.3381 27.5669 73.2179 27.594 cv
73.1462 27.6038 73.0706 27.6134 72.9949 27.6212 cv
72.7681 27.6212 72.4851 27.532 72.2718 27.6173 cv
71.8452 27.6154 71.409 27.5999 70.9727 27.5766 cv
70.7963 27.5669 70.362 27.5049 70.2204 27.5766 cv
70.1352 27.5863 70.044 27.594 69.9587 27.6056 cv
69.5903 27.6018 69.2413 27.5611 68.8904 27.5436 cv
68.6713 27.532 68.4134 27.5552 68.2253 27.4777 cv
68.1789 27.4777 68.1905 27.4622 68.1905 27.4234 cv
cp
69.2627 25.4632 mo
69.4527 25.3798 69.9296 25.4361 70.1739 25.438 cv
70.6102 25.44 71.0561 25.4167 71.4749 25.4206 cv
71.725 25.4206 71.9945 25.4555 72.2543 25.4438 cv
72.3804 25.4302 72.5063 25.4128 72.6324 25.3993 cv
72.8011 25.3895 73.0008 25.4128 73.152 25.3682 cv
73.2024 25.3682 73.249 25.3682 73.2974 25.3682 cv
73.2974 25.3779 73.2974 25.3877 73.2974 25.3973 cv
73.3342 25.3973 73.3265 25.3857 73.3265 25.4264 cv
73.3207 25.5563 73.3033 26.2427 73.2354 26.2814 cv
73.1462 26.3318 73.0008 26.3202 72.8883 26.3202 cv
72.6944 26.3163 72.5025 26.3143 72.3106 26.3124 cv
72.0934 26.297 71.6029 26.2175 71.4129 26.3124 cv
71.1705 26.3105 70.8758 26.2193 70.6606 26.3066 cv
70.3678 26.3047 69.8463 26.1806 69.6194 26.3008 cv
69.4973 26.3008 69.313 26.2795 69.2141 26.3299 cv
69.0688 26.3183 68.9253 26.3086 68.7818 26.297 cv
68.7818 26.1534 69.1405 25.5156 69.2627 25.4632 cv
cp
69.7261 24.7768 mo
69.8133 24.6179 70.0072 24.2495 70.17 24.1641 cv
70.2922 24.0944 70.4531 24.106 70.5868 24.0518 cv
70.8195 24.0556 71.0484 24.0556 71.2791 24.0575 cv
71.6184 24.0691 71.9829 24.1021 72.3222 24.1098 cv
72.4772 24.0982 72.6285 24.0866 72.7836 24.075 cv
72.9581 24.0808 73.1346 24.1177 73.3342 24.1254 cv
73.3304 24.3057 73.3711 24.7768 73.2858 24.9009 cv
73.2315 24.932 73.1811 24.9611 73.1249 24.9921 cv
72.9388 24.9902 72.7177 24.9611 72.5781 25.0483 cv
72.4308 25.0425 72.2892 25.0347 72.1438 25.0328 cv
71.9499 25.0037 71.6765 24.932 71.4768 25.0114 cv
71.4186 25.0211 71.3644 25.0289 71.3043 25.0386 cv
71.2286 25.0483 71.1511 25.0561 71.0736 25.0638 cv
70.9184 25.0561 70.7633 25.0464 70.6102 25.0347 cv
70.3174 25.0289 69.9471 25.0813 69.6834 24.9998 cv
69.5903 24.9998 69.7066 24.8059 69.7261 24.7768 cv
cp
70.7323 23.2103 mo
70.804 23.0998 70.8913 22.9271 71.0095 22.8593 cv
71.0968 22.8089 71.2325 22.838 71.345 22.838 cv
71.6707 22.8283 72.0372 22.8148 72.3861 22.8167 cv
72.5626 22.8186 72.7836 22.8457 72.9349 22.7914 cv
73.0512 22.7934 73.1676 22.7934 73.2838 22.7953 cv
73.2974 22.871 73.3168 22.9485 73.3304 23.0241 cv
73.3342 23.2277 73.3342 23.4313 73.3342 23.633 cv
73.3265 23.633 73.3188 23.633 73.309 23.633 cv
73.309 23.6795 73.0686 23.6659 73.0163 23.6891 cv
72.708 23.6795 72.3997 23.6678 72.0934 23.6543 cv
71.979 23.6523 71.8413 23.6446 71.7444 23.6814 cv
71.504 23.6814 71.0755 23.6291 70.8797 23.7066 cv
70.7633 23.6969 70.647 23.6853 70.5307 23.6755 cv
70.5326 23.503 70.645 23.3402 70.7323 23.2103 cv
cp
71.6086 22.3223 mo
71.6106 22.1244 71.8956 22.0159 71.9926 21.8744 cv
72.0895 21.729 72.1806 21.5913 72.3067 21.4576 cv
72.5374 21.4672 73.121 21.4576 73.2878 21.5506 cv
73.3342 21.5506 73.3188 21.568 73.3188 21.6087 cv
73.3188 21.8589 73.3168 22.109 73.3168 22.3591 cv
73.3052 22.3591 73.2955 22.3591 73.2838 22.3591 cv
73.2838 22.396 73.2955 22.3882 73.2587 22.3882 cv
73.026 22.3824 72.7177 22.301 72.5044 22.3862 cv
72.4365 22.394 72.3687 22.4037 72.3028 22.4114 cv
72.0663 22.4114 71.8026 22.4328 71.6086 22.3494 cv
71.6009 22.3494 71.5893 22.3494 71.5795 22.3494 cv
71.5795 22.3126 71.5699 22.3223 71.6086 22.3223 cv
cp
72.6556 21.0271 mo
72.6556 21.0271 73.1481 20.4396 73.2102 20.3621 cv
73.3188 20.4551 73.3517 20.9379 73.249 21.0523 cv
73.1559 21.157 72.7992 21.1492 72.6847 21.0833 cv
72.6751 21.0833 72.6673 21.0833 72.6556 21.0833 cv
72.6556 21.0639 72.6556 21.0446 72.6556 21.0271 cv
cp
118.322 64.2851 mo
118.413 64.1572 118.502 64.0312 118.591 63.9012 cv
118.727 63.6396 118.824 63.3351 118.898 63.0462 cv
119.128 63.0462 119.359 63.0462 119.59 63.0482 cv
119.59 63.0578 119.59 63.0676 119.59 63.0773 cv
119.601 63.0773 119.609 63.0773 119.619 63.0773 cv
119.619 63.3487 118.549 64.1998 118.312 64.3433 cv
118.316 64.3259 118.32 64.3046 118.322 64.2851 cv
cp
119.109 20.1294 mo
119.216 20.2108 119.782 20.7227 119.71 20.8506 cv
119.667 20.934 119.495 20.9282 119.419 20.9708 cv
119.342 20.9708 119.221 20.967 119.167 20.9244 cv
119.064 20.841 119.101 20.2845 119.109 20.1294 cv
cp
120.743 22.3067 mo
120.743 22.3164 120.743 22.3262 120.743 22.3358 cv
120.685 22.3475 120.627 22.3553 120.569 22.363 cv
120.398 22.363 119.249 22.3319 119.192 22.2796 cv
119.107 22.204 119.128 22.014 119.126 21.8937 cv
119.124 21.7173 119.119 21.5448 119.187 21.4013 cv
119.479 21.4033 119.821 21.3722 120.076 21.4594 cv
120.294 21.5331 120.685 22.0993 120.743 22.3067 cv
cp
121.001 22.7624 mo
121.102 22.7701 121.232 22.7353 121.311 22.7837 cv
121.449 22.8671 121.55 23.0648 121.62 23.2005 cv
121.674 23.3014 121.79 23.4139 121.767 23.5496 cv
121.752 23.6096 121.684 23.6213 121.629 23.6291 cv
121.149 23.6213 120.668 23.6135 120.185 23.6058 cv
120.061 23.6039 119.884 23.5864 119.782 23.633 cv
119.654 23.631 119.285 23.6194 119.21 23.5554 cv
119.105 23.472 119.146 22.8903 119.15 22.7314 cv
119.762 22.7353 120.41 22.7198 121.001 22.7624 cv
cp
122.163 24.1098 mo
122.322 24.1991 122.624 24.7672 122.696 24.9475 cv
122.649 24.9475 122.614 24.9785 122.579 25.0095 cv
122.411 25.0075 121.845 24.9572 121.74 25.0037 cv
121.558 25.0018 121.374 24.9998 121.189 24.9998 cv
120.953 24.9824 120.615 24.8622 120.381 24.965 cv
120.313 24.9746 120.247 24.9824 120.177 24.994 cv
119.821 24.994 119.489 24.9261 119.138 24.9009 cv
119.14 24.6605 119.014 24.1875 119.229 24.0323 cv
119.229 24.0246 119.229 24.0148 119.229 24.0052 cv
119.877 24.0091 120.52 24.013 121.168 24.0168 cv
121.488 24.0168 121.907 23.9664 122.163 24.1098 cv
cp
123.06 25.4302 mo
123.175 25.502 123.204 25.628 123.266 25.7386 cv
123.316 25.8102 123.367 25.882 123.417 25.9557 cv
123.464 26.0449 123.51 26.136 123.557 26.2272 cv
123.557 26.2349 123.557 26.2445 123.557 26.2543 cv
123.479 26.2756 123.4 26.295 123.326 26.3124 cv
123.039 26.3105 122.469 26.1515 122.225 26.2484 cv
122.157 26.2581 122.089 26.2659 122.021 26.2775 cv
121.849 26.2659 121.674 26.2563 121.503 26.2465 cv
121.013 26.2427 120.553 26.2388 120.057 26.2349 cv
119.89 26.2349 119.675 26.2 119.537 26.262 cv
119.421 26.262 119.247 26.2756 119.175 26.1922 cv
119.084 26.0817 119.13 25.5059 119.136 25.3352 cv
120.071 25.3391 121.015 25.4012 121.94 25.405 cv
122.178 25.407 122.88 25.3139 123.06 25.4302 cv
cp
124.036 27.1888 mo
124.092 27.3168 124.121 27.3924 124.01 27.501 cv
123.902 27.501 123.754 27.4854 123.665 27.5281 cv
123.471 27.5281 123.159 27.4758 122.996 27.5533 cv
122.894 27.5533 122.77 27.5417 122.678 27.5804 cv
122.452 27.5785 122.048 27.4699 121.87 27.5475 cv
121.562 27.5475 121.255 27.5456 120.945 27.5436 cv
120.852 27.5436 120.73 27.5359 120.658 27.5708 cv
120.418 27.5669 120.177 27.5649 119.933 27.5631 cv
119.821 27.5592 119.663 27.5223 119.557 27.5631 cv
119.409 27.5631 119.276 27.5552 119.154 27.5029 cv
119.105 27.5029 119.121 27.4854 119.121 27.4467 cv
119.111 27.2897 119.041 26.7526 119.181 26.675 cv
119.289 26.6149 119.514 26.6382 119.65 26.6382 cv
119.931 26.6401 120.208 26.6401 120.487 26.642 cv
120.652 26.644 120.836 26.6595 120.98 26.6168 cv
121.655 26.6227 122.31 26.6536 123.004 26.6556 cv
123.194 26.6576 123.611 26.6207 123.749 26.7002 cv
123.911 26.7952 123.964 27.0259 124.036 27.1888 cv
cp
124.369 27.9644 mo
124.52 28.0477 124.675 28.546 124.726 28.7205 cv
124.86 28.7224 124.493 28.8349 124.493 28.8349 cv
124.297 28.833 123.863 28.7865 123.716 28.8601 cv
123.514 28.8581 123.122 28.7767 122.961 28.8562 cv
122.614 28.8543 122.279 28.8078 121.946 28.833 cv
121.872 28.8388 121.794 28.8446 121.719 28.8485 cv
121.48 28.8485 120.844 28.7612 120.677 28.8426 cv
120.41 28.8408 119.181 28.8912 119.088 28.7476 cv
119.051 28.7476 119.088 28.4394 119.09 28.3715 cv
119.093 28.2726 119.086 28.1253 119.154 28.0594 cv
119.303 27.912 119.867 27.9236 120.104 27.9062 cv
120.142 27.9004 120.185 27.8945 120.22 27.8849 cv
120.606 27.9508 121.046 27.9197 121.465 27.9197 cv
122.26 27.9256 123.025 27.9197 123.809 27.9508 cv
123.999 27.9585 124.197 27.8654 124.369 27.9644 cv
cp
124.974 29.2867 mo
125.038 29.3351 125.352 30.0467 125.255 30.1242 cv
125.059 30.2774 124.516 30.0739 124.286 30.165 cv
124.162 30.163 123.979 30.1417 123.88 30.1901 cv
123.803 30.1999 123.725 30.2096 123.65 30.2173 cv
123.483 30.2173 123.32 30.2231 123.157 30.2096 cv
122.948 30.1921 122.496 30.0506 122.289 30.1533 cv
122.178 30.1533 122.058 30.1592 121.971 30.2096 cv
121.606 30.2076 121.24 30.2057 120.871 30.2018 cv
120.73 30.2018 120.526 30.1708 120.41 30.2289 cv
120.232 30.2289 119.968 30.1456 119.805 30.2251 cv
119.634 30.2251 119.26 30.2367 119.152 30.1475 cv
119.062 30.0758 119.084 29.4553 119.086 29.2964 cv
119.093 29.2964 119.103 29.2964 119.113 29.2964 cv
119.113 29.2479 119.634 29.246 119.722 29.213 cv
120.086 29.2169 120.454 29.2208 120.819 29.2246 cv
121.102 29.2362 121.379 29.2789 121.69 29.2808 cv
121.953 29.2828 122.184 29.2362 122.44 29.2304 cv
122.958 29.2169 123.512 29.2576 124.003 29.2615 cv
124.173 29.2537 124.35 29.2479 124.522 29.2401 cv
124.658 29.2401 124.871 29.211 124.974 29.2867 cv
cp
125.748 31.1616 mo
125.848 31.4271 125.81 31.3593 125.608 31.4718 cv
125.154 31.4698 124.703 31.466 124.251 31.464 cv
124.059 31.4543 123.758 31.3768 123.584 31.4621 cv
123.324 31.4582 123.064 31.4582 122.804 31.4543 cv
122.692 31.4505 122.529 31.4155 122.426 31.4543 cv
122.267 31.4543 122.011 31.4155 121.878 31.4814 cv
121.655 31.4796 121.434 31.4757 121.213 31.4757 cv
121.108 31.4718 120.961 31.433 120.866 31.4757 cv
120.586 31.4757 120.131 31.371 119.883 31.4698 cv
119.642 31.4679 119.359 31.4892 119.161 31.4078 cv
119.113 31.4078 119.122 31.3884 119.119 31.3477 cv
119.111 31.2314 119.107 31.1169 119.103 31.0045 cv
119.101 30.8145 119.062 30.6362 119.282 30.6109 cv
119.483 30.6071 119.685 30.6032 119.884 30.6012 cv
120.053 30.5935 120.216 30.5857 120.379 30.578 cv
120.551 30.5876 120.728 30.5973 120.9 30.6051 cv
121.595 30.609 122.232 30.5585 122.952 30.5624 cv
123.4 30.5644 124.043 30.6362 124.429 30.5121 cv
124.703 30.5664 125.393 30.4035 125.554 30.6362 cv
125.657 30.7873 125.684 30.9851 125.748 31.1616 cv
cp
126.073 31.9119 mo
126.184 32.005 126.393 32.5827 126.197 32.6603 cv
126.007 32.732 125.701 32.6875 125.486 32.6875 cv
124.889 32.6836 124.29 32.6816 123.694 32.6777 cv
123.516 32.6759 123.229 32.6312 123.088 32.703 cv
122.944 32.701 122.738 32.6719 122.62 32.7282 cv
122.397 32.7282 121.73 32.6777 121.581 32.7514 cv
121.412 32.7495 121.172 32.7146 121.032 32.7786 cv
120.829 32.7766 120.544 32.7243 120.365 32.8018 cv
119.919 32.8018 119.537 32.7127 119.093 32.7088 cv
119.095 32.5653 119.068 31.9934 119.154 31.9352 cv
119.332 31.813 120.199 31.875 120.487 31.8789 cv
120.931 31.8809 121.36 31.8537 121.79 31.8537 cv
122.07 31.8576 122.364 31.8964 122.628 31.8789 cv
122.847 31.8693 123.072 31.8537 123.293 31.8421 cv
123.487 31.8614 123.679 31.8789 123.871 31.8944 cv
124.317 31.9041 124.786 31.8867 125.203 31.8285 cv
125.298 31.815 125.395 31.8033 125.492 31.7917 cv
125.686 31.7975 125.934 31.7936 126.073 31.9119 cv
cp
126.667 33.938 mo
126.657 33.938 126.647 33.938 126.634 33.938 cv
126.634 33.9865 126.403 33.9709 126.347 33.9652 cv
126.347 33.9729 126.347 33.9845 126.347 33.9943 cv
126.308 34.0039 126.269 34.0117 126.23 34.0214 cv
126.116 34.0195 125.974 34.0078 125.883 34.0486 cv
125.445 34.0466 125.03 34.0156 124.584 34.0117 cv
124.437 34.0117 124.237 33.9845 124.119 34.0388 cv
124.014 34.0368 123.888 34.0272 123.801 34.0659 cv
123.417 34.064 123.033 34.0582 122.643 34.0543 cv
122.438 34.0427 122.201 33.9497 122.008 34.0563 cv
121.814 34.0563 121.399 34.0078 121.255 34.0815 cv
120.924 34.0795 120.569 34.0486 120.216 34.0466 cv
119.919 34.0447 119.353 34.0776 119.119 33.9807 cv
119.029 33.9807 119.062 33.3292 119.062 33.2012 cv
119.072 33.2012 119.084 33.2012 119.092 33.2012 cv
119.092 33.1625 119.08 33.1702 119.122 33.1702 cv
119.324 33.1547 119.524 33.1373 119.727 33.1218 cv
120.069 33.1237 120.404 33.1237 120.739 33.1237 cv
121.372 33.1275 122.039 33.114 122.649 33.1062 cv
122.764 33.112 122.88 33.1159 122.996 33.1198 cv
123.095 33.1102 123.19 33.0966 123.289 33.083 cv
123.615 33.0849 123.943 33.0849 124.27 33.0849 cv
124.423 33.0946 124.578 33.1043 124.732 33.112 cv
124.926 33.1062 125.119 33.0984 125.309 33.0927 cv
125.529 33.0946 125.748 33.1353 125.947 33.0655 cv
126.073 33.0732 126.273 33.0713 126.372 33.1353 cv
126.564 33.2536 126.616 33.7189 126.667 33.938 cv
cp
127.006 35.2118 mo
126.959 35.2118 126.921 35.2409 126.89 35.2681 cv
126.727 35.2681 126.506 35.2331 126.368 35.2933 cv
126.174 35.2933 125.891 35.2467 125.732 35.3204 cv
124.99 35.3147 124.247 35.3127 123.506 35.3068 cv
123.227 35.3107 122.948 35.3147 122.667 35.3147 cv
122.457 35.3011 121.746 35.2506 121.596 35.3263 cv
121.056 35.3224 120.517 35.3185 119.978 35.3147 cv
119.824 35.3147 119.607 35.2836 119.487 35.3437 cv
119.38 35.3437 119.252 35.3456 119.167 35.3107 cv
119.124 35.3107 119.128 35.2933 119.122 35.2506 cv
119.101 35.1188 119.084 34.5701 119.165 34.4984 cv
119.221 34.4441 119.318 34.4305 119.402 34.4247 cv
119.619 34.4052 119.832 34.4382 120.04 34.446 cv
120.435 34.4499 120.829 34.4518 121.224 34.4538 cv
121.515 34.4382 121.802 34.4227 122.093 34.4072 cv
122.322 34.3975 122.566 34.4286 122.787 34.4305 cv
123.095 34.4247 123.405 34.4188 123.712 34.415 cv
123.995 34.4227 124.305 34.4479 124.608 34.446 cv
124.831 34.4382 125.052 34.4286 125.275 34.4227 cv
125.544 34.4227 125.901 34.4751 126.141 34.3975 cv
126.354 34.3995 126.62 34.3975 126.785 34.4925 cv
126.921 34.5701 126.994 35.0451 127.006 35.2118 cv
cp
127.287 36.5438 mo
127.277 36.5438 127.27 36.5438 127.258 36.5438 cv
127.256 36.5942 127.099 36.5768 127.054 36.602 cv
126.591 36.5962 126.128 36.5924 125.666 36.5885 cv
125.538 36.5826 125.352 36.5206 125.232 36.5613 cv
125.059 36.5652 124.885 36.571 124.71 36.5749 cv
124.462 36.5749 123.941 36.4974 123.727 36.5826 cv
123.553 36.5806 123.278 36.5458 123.122 36.6059 cv
122.32 36.602 121.521 36.5981 120.72 36.5904 cv
120.542 36.5904 120.301 36.5342 120.142 36.5904 cv
119.945 36.5885 119.229 36.5942 119.146 36.4663 cv
119.095 36.3945 119.107 36.2763 119.105 36.1793 cv
119.103 36.0184 119.074 35.7954 119.252 35.7625 cv
119.377 35.7547 119.504 35.745 119.629 35.7392 cv
120.131 35.6811 120.658 35.6965 121.189 35.7004 cv
121.924 35.7043 122.64 35.6791 123.359 35.6849 cv
123.785 35.6869 124.328 35.807 124.718 35.6617 cv
125.094 35.6636 127.068 35.65 127.2 35.8187 cv
127.332 35.9874 127.295 36.319 127.287 36.5438 cv
cp
127.51 37.8176 mo
127.502 37.8176 127.495 37.8158 127.481 37.8158 cv
127.481 37.8662 127.382 37.8448 127.336 37.8448 cv
127.126 37.841 126.913 37.8371 126.703 37.8351 cv
126.492 37.8215 126.174 37.7421 125.976 37.8371 cv
125.786 37.8351 125.499 37.7905 125.34 37.8623 cv
125.236 37.8623 125.112 37.8506 125.022 37.8894 cv
124.629 37.8875 124.26 37.8351 123.896 37.8274 cv
123.471 37.8235 123.049 37.8235 122.622 37.8215 cv
122.519 37.8351 122.411 37.8487 122.302 37.8623 cv
122.141 37.8719 121.957 37.8196 121.814 37.8719 cv
121.513 37.8701 121.216 37.8662 120.918 37.8662 cv
120.776 37.8603 120.612 37.8119 120.482 37.8642 cv
120.22 37.8623 119.369 37.8739 119.223 37.7537 cv
119.154 37.6955 119.161 37.6024 119.155 37.5094 cv
119.148 37.3543 119.07 37.079 119.252 37.0149 cv
119.415 36.9607 119.636 36.9917 119.822 36.9917 cv
120.014 36.984 120.208 36.9762 120.402 36.9685 cv
120.612 36.9685 120.813 36.9859 121.009 36.9917 cv
121.182 36.9859 121.356 36.982 121.529 36.9742 cv
122.194 36.9781 122.855 36.9781 123.499 36.982 cv
123.63 36.9742 123.766 36.9685 123.902 36.9626 cv
124.431 36.9742 125.04 37.0208 125.577 36.9742 cv
125.763 36.9569 125.953 36.9878 126.128 36.9413 cv
126.337 36.9433 127.223 36.949 127.337 37.044 cv
127.458 37.143 127.506 37.6335 127.51 37.8176 cv
cp
127.537 39.0741 mo
127.38 39.2389 126.622 39.0624 126.405 39.1419 cv
126.312 39.1419 126.192 39.1342 126.114 39.1691 cv
125.788 39.1652 125.459 39.1614 125.131 39.1574 cv
124.927 39.1439 124.631 39.0837 124.437 39.1594 cv
124.198 39.1594 123.563 39.0721 123.398 39.1535 cv
123.157 39.1535 122.841 39.0605 122.614 39.1496 cv
122.075 39.1458 121.587 39.1419 121.054 39.138 cv
120.933 39.138 120.755 39.0915 120.65 39.138 cv
120.456 39.138 120.263 39.1361 120.071 39.1361 cv
119.931 39.1342 119.722 39.1051 119.607 39.1614 cv
119.464 39.1594 119.318 39.1594 119.175 39.1594 cv
119.175 39.1516 119.175 39.14 119.175 39.1303 cv
119.122 39.1303 119.146 38.8414 119.14 38.7813 cv
119.128 38.696 119.115 38.6087 119.103 38.5196 cv
119.105 38.1919 119.452 38.2772 119.671 38.1764 cv
120.005 38.1783 120.268 38.2656 120.598 38.2694 cv
120.875 38.2656 121.154 38.2656 121.434 38.2656 cv
121.752 38.2442 122.07 38.2229 122.388 38.1996 cv
123.555 38.2248 124.786 38.2346 125.974 38.2403 cv
126.227 38.2442 127.386 38.1919 127.491 38.3218 cv
127.553 38.4013 127.533 38.5758 127.543 38.6824 cv
127.553 38.7716 127.603 39.0043 127.537 39.0741 cv
cp
127.634 40.3809 mo
127.549 40.4041 127.465 40.4235 127.38 40.4487 cv
127.173 40.4468 126.907 40.4139 126.744 40.503 cv
126.42 40.5011 126.075 40.4643 125.732 40.4682 cv
125.624 40.4682 125.501 40.4584 125.414 40.4972 cv
125.273 40.4953 125.1 40.4739 124.98 40.5224 cv
124.685 40.5205 124.193 40.4157 123.939 40.5166 cv
123.64 40.5146 123.25 40.408 122.985 40.5398 cv
122.723 40.536 122.463 40.5321 122.203 40.5282 cv
122.008 40.5146 121.573 40.4313 121.395 40.5011 cv
121.201 40.5011 120.784 40.4546 120.643 40.5263 cv
120.497 40.5243 120.354 40.5243 120.208 40.5243 cv
120.009 40.5224 119.278 40.565 119.19 40.4429 cv
119.119 40.3441 119.144 40.1831 119.138 40.0551 cv
119.13 39.9175 119.02 39.6402 119.188 39.5666 cv
119.409 39.4657 120.055 39.5103 120.329 39.5336 cv
120.534 39.5278 120.734 39.5219 120.937 39.5162 cv
121.399 39.518 121.825 39.5278 122.265 39.5239 cv
122.49 39.5219 122.791 39.5685 122.991 39.4987 cv
123.46 39.5007 123.902 39.5375 124.379 39.5336 cv
125.152 39.5258 126.004 39.4909 126.806 39.5219 cv
127.085 39.5414 127.367 39.5627 127.644 39.5821 cv
127.644 39.7857 127.809 40.2607 127.634 40.3809 cv
cp
127.75 41.2029 mo
127.75 41.3425 127.766 41.5132 127.719 41.6353 cv
127.719 41.7012 127.564 41.6934 127.518 41.7225 cv
127.374 41.7206 127.208 41.6993 127.085 41.7477 cv
126.882 41.7459 126.587 41.6973 126.418 41.7711 cv
125.542 41.7672 124.666 41.7613 123.787 41.7575 cv
123.58 41.7497 123.184 41.6663 123.008 41.7536 cv
122.785 41.7536 122.273 41.6973 122.11 41.7788 cv
121.924 41.7788 121.674 41.6818 121.503 41.7459 cv
121.186 41.7575 120.867 41.7672 120.549 41.7788 cv
120.057 41.7749 119.565 41.7652 119.074 41.7613 cv
119.074 41.7516 119.074 41.742 119.074 41.7303 cv
119.024 41.7303 119.043 41.7148 119.045 41.6741 cv
119.045 41.453 119.047 41.2301 119.047 41.0091 cv
119.059 41.0091 119.068 41.0091 119.078 41.0091 cv
119.078 40.9567 119.198 40.978 119.249 40.9761 cv
119.821 40.9432 120.389 40.9102 120.957 40.8772 cv
121.374 40.8791 121.785 40.883 122.199 40.885 cv
122.376 40.8927 122.537 40.9412 122.721 40.9354 cv
122.866 40.9237 123.012 40.9043 123.157 40.8907 cv
123.824 40.8714 124.46 40.8656 125.121 40.8695 cv
125.583 40.8714 126.073 40.8656 126.51 40.85 cv
126.667 40.8423 126.835 40.8617 126.975 40.8229 cv
127.134 40.8229 127.657 40.7861 127.717 40.9043 cv
127.754 40.98 127.75 41.1079 127.75 41.2029 cv
cp
127.683 43.0254 mo
127.543 43.0236 127.405 43.0759 127.248 43.0759 cv
126.994 43.0797 126.531 42.9829 126.325 43.074 cv
126.153 43.072 125.883 43.0313 125.746 43.1011 cv
125.56 43.0992 125.162 43.0565 125.022 43.1243 cv
124.532 43.1224 124.08 43.0914 123.578 43.0875 cv
123.46 43.0875 123.297 43.0681 123.2 43.1147 cv
122.653 43.1108 122.103 43.1069 121.552 43.1031 cv
121.376 43.0952 120.986 43.01 120.831 43.072 cv
120.581 43.0701 120.327 43.0681 120.076 43.0643 cv
119.917 43.0584 119.71 43.0041 119.557 43.0661 cv
119.439 43.0643 119.291 43.074 119.19 43.0352 cv
119.006 42.9634 119.041 42.3779 119.041 42.1646 cv
119.053 42.1646 119.062 42.1646 119.072 42.1646 cv
119.072 42.1568 119.072 42.1472 119.072 42.1355 cv
119.167 42.1472 119.264 42.1568 119.359 42.1646 cv
119.634 42.1685 119.912 42.1433 120.169 42.1511 cv
120.332 42.1607 120.495 42.1646 120.662 42.1743 cv
120.961 42.1568 121.257 42.1395 121.558 42.122 cv
122.566 42.1259 123.574 42.1336 124.623 42.1395 cv
125.088 42.1433 125.546 42.1433 126.011 42.1472 cv
126.277 42.1433 126.566 42.1743 126.793 42.0929 cv
126.967 42.0968 127.14 42.1006 127.312 42.1045 cv
127.425 42.1104 127.543 42.1472 127.661 42.1259 cv
127.661 42.1395 127.661 42.1472 127.659 42.1568 cv
127.758 42.1568 127.708 42.915 127.683 43.0254 cv
cp
127.562 44.3827 mo
127.56 44.4311 127.32 44.4156 127.272 44.439 cv
127.208 44.4486 127.138 44.4563 127.07 44.4661 cv
126.626 44.4642 126.184 44.4622 125.74 44.4602 cv
125.596 44.4583 125.391 44.4272 125.275 44.4854 cv
124.842 44.4854 124.406 44.4874 123.974 44.4874 cv
123.859 44.4777 123.743 44.4642 123.63 44.4544 cv
123.51 44.4661 123.398 44.4777 123.281 44.4874 cv
123.146 44.4758 123.01 44.4622 122.872 44.4467 cv
122.597 44.4447 122.314 44.439 122.039 44.4351 cv
121.876 44.4272 121.67 44.3749 121.515 44.4351 cv
120.792 44.4311 120.069 44.4272 119.345 44.4234 cv
119.252 44.4234 119.155 44.4234 119.059 44.4234 cv
119.06 44.1752 119.103 43.7603 119.033 43.5548 cv
119.033 43.5451 119.033 43.5354 119.033 43.5257 cv
119.045 43.5257 119.055 43.5257 119.064 43.5257 cv
119.064 43.4734 119.161 43.4966 119.208 43.4966 cv
119.448 43.4986 119.677 43.4734 119.902 43.4734 cv
120.133 43.485 120.365 43.4947 120.596 43.5044 cv
121.009 43.5083 121.395 43.4695 121.783 43.4579 cv
121.955 43.4695 122.128 43.4772 122.302 43.485 cv
122.593 43.4811 122.88 43.4792 123.169 43.4772 cv
123.266 43.4888 123.363 43.5005 123.46 43.516 cv
123.634 43.5257 123.809 43.5024 123.979 43.5044 cv
124.103 43.5102 124.23 43.5141 124.354 43.5199 cv
124.462 43.5024 124.569 43.4888 124.673 43.4715 cv
124.895 43.4675 125.166 43.5044 125.368 43.4443 cv
125.655 43.4463 125.934 43.4753 126.205 43.4772 cv
126.446 43.4772 127.444 43.4094 127.586 43.5295 cv
127.704 43.6343 127.619 44.245 127.562 44.3827 cv
cp
127.394 45.6642 mo
127.303 45.6914 127.211 45.7147 127.118 45.7399 cv
126.936 45.738 126.475 45.6449 126.341 45.705 cv
126.227 45.7031 126.085 45.6895 125.99 45.734 cv
125.912 45.7419 125.837 45.7496 125.759 45.7592 cv
124.951 45.7554 124.158 45.6933 123.332 45.6876 cv
123.091 45.6876 122.756 45.6313 122.55 45.7128 cv
122.345 45.7128 121.891 45.6604 121.74 45.738 cv
121.075 45.7302 120.41 45.7205 119.745 45.7108 cv
119.522 45.6953 119.291 45.6662 119.053 45.6642 cv
119.06 45.5867 119.066 45.5092 119.078 45.4317 cv
119.084 45.2417 119.033 45.0128 119.144 44.8558 cv
119.144 44.8054 119.318 44.8286 119.373 44.8286 cv
119.883 44.8306 120.379 44.8325 120.906 44.8344 cv
121.092 44.8364 121.325 44.8674 121.484 44.8112 cv
122.333 44.8151 123.159 44.8751 124.001 44.881 cv
124.338 44.8654 124.673 44.848 125.013 44.8344 cv
125.705 44.848 126.401 44.8615 127.093 44.8751 cv
127.233 44.8829 127.349 44.9197 127.502 44.9294 cv
127.498 45.104 127.502 45.5654 127.394 45.6642 cv
cp
127.308 46.8935 mo
127.239 46.9691 127.136 46.9614 127.054 47.0098 cv
126.967 47.0234 126.882 47.0292 126.793 47.0389 cv
126.265 47.0351 125.732 47.0312 125.205 47.0273 cv
124.964 47.0176 124.615 46.9246 124.392 47.0253 cv
124.197 47.0253 123.789 46.9769 123.642 47.0505 cv
123.035 47.0467 122.403 47.0118 121.761 47.0098 cv
121.589 47.0098 121.414 47.0098 121.24 47.008 cv
121.112 47.008 120.922 46.9555 120.807 47.006 cv
120.195 47.0021 119.662 46.9419 119.045 46.9381 cv
119.045 46.9284 119.045 46.9187 119.045 46.909 cv
119.035 46.909 119.026 46.909 119.014 46.909 cv
119.016 46.7772 119.008 46.2556 119.078 46.1858 cv
119.173 46.085 119.706 46.1315 119.884 46.1315 cv
120.474 46.1315 121.061 46.1354 121.647 46.1354 cv
122.008 46.1471 122.568 46.1528 122.866 46.0326 cv
123.289 46.0365 123.673 46.0869 124.08 46.1103 cv
124.427 46.1315 124.807 46.1141 125.15 46.1103 cv
125.515 46.1044 125.887 46.1315 126.248 46.1354 cv
126.568 46.1354 127.033 46.0288 127.32 46.1742 cv
127.491 46.1742 127.378 46.8062 127.308 46.8935 cv
cp
127.076 48.2546 mo
127.029 48.2546 126.992 48.2837 126.959 48.3128 cv
126.711 48.3109 125.91 48.2527 125.744 48.3341 cv
125.562 48.3341 125.189 48.2914 125.052 48.3593 cv
124.77 48.3573 124.493 48.3535 124.212 48.3496 cv
124.074 48.3438 123.91 48.2992 123.78 48.3516 cv
123.626 48.3516 123.436 48.3399 123.316 48.4078 cv
123.144 48.3884 122.969 48.3671 122.795 48.3477 cv
122.496 48.3457 122.198 48.3419 121.899 48.3399 cv
121.763 48.336 121.558 48.2876 121.438 48.338 cv
121.273 48.3205 121.108 48.3012 120.945 48.2798 cv
120.464 48.2759 119.979 48.2721 119.501 48.2682 cv
119.345 48.2585 119.19 48.2488 119.037 48.2371 cv
119.041 47.9773 119.002 47.6594 119.07 47.4287 cv
119.148 47.4228 119.223 47.4132 119.301 47.4035 cv
119.714 47.4035 120.131 47.4015 120.542 47.3996 cv
120.736 47.4073 120.929 47.4112 121.123 47.4189 cv
121.257 47.4287 121.372 47.4713 121.527 47.4674 cv
121.73 47.4616 121.916 47.4171 122.134 47.4189 cv
122.504 47.4189 123.206 47.4868 123.495 47.3666 cv
123.63 47.3821 123.764 47.3957 123.902 47.4092 cv
124.165 47.4015 124.429 47.3685 124.708 47.3744 cv
125.205 47.3841 125.693 47.3976 126.184 47.4073 cv
126.424 47.4132 126.921 47.3957 127.109 47.4752 cv
127.258 47.4752 127.084 48.1654 127.076 48.2546 cv
cp
126.907 49.3462 mo
126.874 49.445 126.843 49.5439 126.808 49.6409 cv
126.55 49.6448 126.29 49.6486 126.029 49.6486 cv
125.806 49.6448 125.585 49.6389 125.362 49.635 cv
125.073 49.6215 124.782 49.6098 124.495 49.6002 cv
124.274 49.6021 124.051 49.6098 123.832 49.6138 cv
123.621 49.6041 123.274 49.5323 123.078 49.6196 cv
122.958 49.6196 122.799 49.5982 122.704 49.6486 cv
122.376 49.6448 122.071 49.6021 121.777 49.5886 cv
120.854 49.54 119.968 49.5148 119.029 49.511 cv
119.031 49.5013 119.031 49.4936 119.031 49.4819 cv
118.965 49.4819 119 48.8305 119.004 48.7005 cv
119.332 48.7025 119.646 48.6773 119.96 48.6773 cv
120.142 48.687 120.327 48.6986 120.511 48.7083 cv
121.073 48.718 121.672 48.7005 122.244 48.7044 cv
122.713 48.7064 123.371 48.8227 123.778 48.6695 cv
124.065 48.6831 124.355 48.6909 124.646 48.7025 cv
124.788 48.6948 124.933 48.6889 125.079 48.6831 cv
125.212 48.6986 125.346 48.7121 125.484 48.7277 cv
125.976 48.7373 126.467 48.7257 126.959 48.7742 cv
126.956 48.97 126.952 49.1678 126.907 49.3462 cv
cp
126.659 50.3331 mo
126.62 50.527 126.531 50.7422 126.397 50.8837 cv
125.827 50.8798 125.201 50.8197 124.658 50.8934 cv
124.561 50.905 124.468 50.9186 124.371 50.9283 cv
124.111 50.9263 123.305 50.8352 123.128 50.9225 cv
122.859 50.9206 122.589 50.9186 122.318 50.9127 cv
122.137 50.905 121.876 50.8411 121.711 50.9147 cv
121.488 50.9127 121.189 50.8313 120.988 50.9109 cv
120.321 50.907 119.677 50.8177 118.993 50.812 cv
118.995 50.6084 118.95 50.1547 119.027 50.0034 cv
119.027 49.9259 119.309 49.9395 119.373 49.9182 cv
119.481 49.9608 119.619 49.9472 119.749 49.9491 cv
120.1 49.9647 120.487 49.9879 120.852 49.9782 cv
121.178 49.9686 121.519 50.0054 121.829 50.0073 cv
122.12 49.9957 122.407 49.9821 122.7 49.9686 cv
123.206 49.9879 123.741 50.0713 124.26 50.0558 cv
124.588 50.0248 124.918 49.9918 125.243 49.957 cv
125.478 49.9395 126.529 49.9007 126.649 50.0286 cv
126.717 50.1023 126.676 50.2477 126.659 50.3331 cv
cp
126.209 51.7193 mo
126.166 51.8493 126.106 51.9888 126.013 52.0955 cv
125.872 52.0955 125.701 52.0742 125.579 52.1207 cv
125.461 52.1207 125.298 52.1013 125.205 52.1479 cv
125.145 52.1595 125.088 52.1672 125.03 52.177 cv
124.821 52.175 124.305 52.1149 124.164 52.1711 cv
124.038 52.1847 123.911 52.1944 123.785 52.206 cv
123.402 52.1711 123.01 52.1653 122.599 52.1634 cv
122.459 52.1615 122.252 52.1304 122.139 52.1886 cv
121.942 52.1866 121.664 52.1324 121.503 52.2138 cv
121.216 52.2138 119.121 52.1827 119.043 52.0897 cv
118.936 51.9656 118.989 51.4169 118.991 51.2172 cv
119.423 51.2211 119.859 51.225 120.294 51.2288 cv
120.67 51.2463 121.048 51.318 121.449 51.3141 cv
122.087 51.3102 122.748 51.3219 123.386 51.2929 cv
123.57 51.2793 123.753 51.2638 123.937 51.2502 cv
124.061 51.2618 124.187 51.2754 124.313 51.285 cv
124.429 51.2734 124.546 51.2638 124.658 51.2521 cv
124.941 51.2463 126.1 51.2308 126.23 51.3859 cv
126.294 51.4654 126.238 51.636 126.209 51.7193 cv
cp
125.571 53.3538 mo
125.476 53.3887 125.379 53.4178 125.282 53.4488 cv
124.968 53.4488 124.672 53.4779 124.385 53.4915 cv
124.255 53.4954 124.1 53.4488 123.981 53.5012 cv
123.863 53.4992 123.7 53.4818 123.607 53.5303 cv
123.547 53.538 123.491 53.5477 123.433 53.5555 cv
123.144 53.5555 122.837 53.5303 122.537 53.5186 cv
122.38 53.5128 122.188 53.4624 122.044 53.5206 cv
121.957 53.5283 121.868 53.538 121.783 53.5477 cv
121.503 53.5438 121.224 53.5419 120.945 53.5342 cv
120.732 53.5186 120.412 53.4101 120.195 53.509 cv
120.086 53.509 119.96 53.4954 119.877 53.5342 cv
119.727 53.5342 119.19 53.5633 119.122 53.4779 cv
119.064 53.4062 119.07 53.2801 119.068 53.1833 cv
119.066 53.0165 119.078 52.8536 119.012 52.7199 cv
119.012 52.7101 119.012 52.7024 119.012 52.6927 cv
119.231 52.6946 119.448 52.6113 119.677 52.6093 cv
120.402 52.6131 121.123 52.617 121.845 52.619 cv
122.019 52.6035 122.194 52.586 122.366 52.5667 cv
122.731 52.5588 123.117 52.5472 123.468 52.5434 cv
123.634 52.5434 123.836 52.5667 123.987 52.5163 cv
124.29 52.5181 124.571 52.5628 124.852 52.5647 cv
124.97 52.5511 125.085 52.5395 125.201 52.5279 cv
125.437 52.5163 125.658 52.5511 125.866 52.586 cv
125.866 52.7411 125.693 53.2685 125.571 53.3538 cv
cp
125.141 54.4667 mo
125.073 54.616 125.013 54.8138 124.811 54.8215 cv
124.732 54.8235 124.65 54.808 124.58 54.8351 cv
124.408 54.8157 124.235 54.7983 124.061 54.7789 cv
123.729 54.7556 123.34 54.7673 123.018 54.7867 cv
122.89 54.7964 122.752 54.7769 122.643 54.8235 cv
122.395 54.8235 121.936 54.744 121.746 54.8467 cv
121.69 54.8603 121.631 54.8642 121.573 54.8758 cv
121.381 54.8758 121.187 54.8719 120.995 54.8719 cv
120.867 54.8681 120.707 54.8235 120.59 54.87 cv
120.1 54.8681 119.607 54.8662 119.115 54.8623 cv
119.115 54.8526 119.115 54.8448 119.115 54.8332 cv
119.072 54.8332 119.076 54.5695 119.07 54.5133 cv
119.059 54.3756 119.055 54.1313 119.134 54.0324 cv
119.221 53.9278 120.104 53.9569 120.307 53.8851 cv
120.453 53.9044 120.588 53.887 120.739 53.8928 cv
121.067 53.9044 121.449 53.9413 121.781 53.9374 cv
121.992 53.9258 122.205 53.9142 122.417 53.9006 cv
122.632 53.8987 122.787 53.9549 122.996 53.9569 cv
123.338 53.9587 123.685 53.949 124.034 53.9413 cv
124.305 53.9335 124.957 53.8366 125.185 53.9529 cv
125.201 53.9646 125.216 53.9762 125.23 53.984 cv
125.292 54.0635 125.176 54.3833 125.141 54.4667 cv
cp
124.466 55.9752 mo
124.406 56.0566 124.33 56.1032 124.255 56.1632 cv
124.053 56.1652 123.851 56.171 123.648 56.173 cv
123.421 56.171 122.948 56.0566 122.752 56.1555 cv
122.554 56.1535 122.12 56.1032 121.971 56.1787 cv
121.779 56.1768 121.494 56.1323 121.335 56.2021 cv
121.139 56.2021 120.871 56.1323 120.697 56.1982 cv
120.173 56.1962 119.594 56.173 119.08 56.2194 cv
119.08 56.2117 119.08 56.2021 119.08 56.1904 cv
119.031 56.1885 119.051 56.173 119.051 56.1323 cv
119.053 55.8841 119.055 55.632 119.059 55.3819 cv
119.256 55.3839 119.415 55.2946 119.603 55.2791 cv
119.925 55.2481 120.249 55.2733 120.559 55.2655 cv
120.695 55.2519 120.829 55.2365 120.962 55.219 cv
121.614 55.2132 122.296 55.2094 122.932 55.2112 cv
123.227 55.2132 123.563 55.2151 123.855 55.2094 cv
124.03 55.2016 124.22 55.2229 124.377 55.1803 cv
124.483 55.186 124.623 55.1764 124.687 55.2637 cv
124.763 55.3664 124.532 55.8782 124.466 55.9752 cv
cp
123.553 57.4468 mo
123.347 57.4778 123.076 57.4119 122.89 57.4855 cv
122.56 57.4836 121.821 57.3634 121.558 57.5069 cv
120.999 57.503 120.437 57.5146 119.91 57.4603 cv
119.642 57.4235 119.371 57.3866 119.101 57.3498 cv
119.092 57.3014 119.078 57.2509 119.066 57.2044 cv
119.06 57.03 119.053 56.8593 119.049 56.6828 cv
119.059 56.6828 119.066 56.6828 119.076 56.6828 cv
119.076 56.648 119.435 56.6053 119.508 56.5975 cv
119.731 56.5839 119.906 56.6228 120.117 56.615 cv
120.319 56.5937 120.522 56.5704 120.724 56.5491 cv
121.054 56.5704 121.379 56.5898 121.709 56.6092 cv
121.969 56.613 122.219 56.5743 122.459 56.5627 cv
122.787 56.5452 123.159 56.615 123.475 56.5316 cv
123.702 56.5414 123.88 56.5878 124.111 56.5975 cv
124.109 56.8418 123.824 57.4041 123.553 57.4468 cv
cp
123.407 58.0109 mo
123.371 58.0091 122.958 58.8311 122.671 58.8718 cv
122.291 58.9261 121.732 58.8234 121.348 58.8098 cv
120.844 58.7884 120.352 58.7711 119.875 58.7477 cv
119.65 58.7361 119.349 58.8098 119.165 58.6857 cv
119.043 58.6043 119.092 58.2708 119.101 58.1293 cv
119.119 57.8345 119.233 57.9024 119.446 57.8132 cv
119.619 57.8248 119.791 57.8326 119.968 57.8443 cv
120.131 57.8365 120.294 57.8326 120.458 57.8248 cv
120.84 57.8404 121.218 57.885 121.614 57.8811 cv
122 57.8791 122.444 57.8714 122.83 57.8869 cv
123.022 57.8946 123.231 57.8791 123.378 57.98 cv
123.417 57.98 123.407 57.9702 123.407 58.0109 cv
cp
122.473 59.3915 mo
122.415 59.3915 122.403 59.467 122.388 59.5077 cv
122.326 59.6552 122.083 60.0061 121.93 60.0759 cv
121.839 60.0972 121.75 60.1186 121.659 60.1399 cv
121.461 60.136 121.021 59.9983 120.879 60.0468 cv
120.614 60.0449 120.263 59.942 120.014 60.0429 cv
119.83 60.041 119.198 60.041 119.122 59.9013 cv
119.084 59.8219 119.09 59.7017 119.09 59.6047 cv
119.092 59.4942 119.078 59.3411 119.121 59.2557 cv
119.121 59.1937 119.247 59.1879 119.293 59.1704 cv
120.142 59.1743 120.947 59.1918 121.752 59.2461 cv
121.992 59.2674 122.232 59.2848 122.473 59.3061 cv
122.473 59.3333 122.473 59.3604 122.473 59.3915 cv
cp
121.009 61.2702 mo
120.877 61.2858 120.743 61.3013 120.612 61.3187 cv
120.082 61.3167 119.594 61.2858 119.051 61.2819 cv
119.053 60.9929 118.977 60.6731 119.084 60.4152 cv
119.508 60.4152 119.933 60.419 120.356 60.4229 cv
120.542 60.4404 120.724 60.4579 120.906 60.4792 cv
121.166 60.4792 121.426 60.4831 121.688 60.4869 cv
121.686 60.7138 121.224 61.2043 121.009 61.2702 cv
cp
119.968 62.6158 mo
119.679 62.6139 119.169 62.6914 118.987 62.4956 cv
118.932 62.4956 118.989 62.4122 118.998 62.3754 cv
119.041 62.1892 118.96 61.8906 119.126 61.7704 cv
119.196 61.7433 119.266 61.7162 119.338 61.689 cv
119.539 61.689 120.491 61.7084 120.557 61.8403 cv
120.666 62.0458 120.111 62.5053 119.968 62.6158 cv
cp
112.106 71.0576 mo
112.546 70.8249 112.949 70.5206 113.372 70.2569 cv
113.732 70.0378 114.095 69.8187 114.456 69.5958 cv
114.778 69.3553 115.072 69.08 115.406 68.8512 cv
115.755 68.5992 116.1 68.347 116.445 68.095 cv
116.521 68.0291 116.59 67.9574 116.664 67.8876 cv
116.745 67.8429 116.827 67.7965 116.906 67.7518 cv
117.203 67.525 117.504 67.2555 117.779 67.0034 cv
118.002 66.7941 118.167 66.5614 118.399 66.352 cv
118.63 66.1445 118.886 65.9545 119.122 65.7432 cv
119.221 65.654 119.276 65.5532 119.363 65.4659 cv
119.557 65.2778 119.755 65.1014 119.929 64.9017 cv
120.047 64.7525 120.169 64.6032 120.294 64.4558 cv
120.724 64.0428 121.116 63.5833 121.476 63.1219 cv
121.771 62.7709 122.064 62.418 122.356 62.069 cv
122.55 61.7976 122.744 61.5222 122.936 61.2508 cv
123.035 61.1422 123.138 61.0337 123.243 60.9251 cv
123.555 60.4869 123.871 60.0468 124.185 59.6047 cv
124.278 59.4535 124.334 59.2984 124.421 59.1452 cv
124.491 59.0444 124.561 58.9436 124.631 58.8447 cv
124.693 58.7168 124.749 58.5888 124.811 58.4608 cv
125.024 58.0963 125.224 57.7337 125.422 57.3634 cv
125.587 57.0803 125.755 56.7953 125.918 56.5123 cv
126.058 56.2253 126.145 55.9228 126.273 55.632 cv
126.418 55.3315 126.56 55.0271 126.703 54.7246 cv
127.188 53.4217 127.665 52.1129 128.053 50.7693 cv
128.082 50.6084 128.109 50.4475 128.138 50.2866 cv
128.243 49.7941 128.379 49.2861 128.476 48.78 cv
128.507 48.5221 128.534 48.2643 128.565 48.0025 cv
128.635 47.5818 128.72 47.1281 128.778 46.6996 cv
128.805 46.3545 128.832 46.0055 128.859 45.6604 cv
128.885 45.5267 128.91 45.3928 128.939 45.2552 cv
128.953 44.9683 128.97 44.6793 128.986 44.3904 cv
129.001 44.245 129.046 44.1093 129.053 43.9581 cv
129.053 43.7565 129.048 43.5529 129.046 43.3513 cv
129.135 42.0445 129.158 40.6232 129.088 39.3319 cv
129.048 38.6553 128.891 37.9903 128.823 37.331 cv
128.745 36.6349 128.693 35.9428 128.553 35.2797 cv
128.169 33.4533 127.661 31.6598 127.018 29.9537 cv
126.925 29.7094 126.783 29.4825 126.682 29.2421 cv
126.471 28.734 126.238 28.2649 125.99 27.7802 cv
125.91 27.6406 125.831 27.5029 125.75 27.3652 cv
125.55 26.9406 125.41 26.4831 125.189 26.072 cv
125.05 25.818 124.887 25.6029 124.726 25.3586 cv
124.604 25.0948 124.478 24.8331 124.355 24.5675 cv
123.894 23.8482 123.413 23.1443 122.932 22.4405 cv
122.748 22.2273 122.566 22.0178 122.386 21.8065 cv
122.182 21.5467 121.98 21.2849 121.779 21.0232 cv
121.585 20.8274 121.372 20.6645 121.201 20.4474 cv
121.102 20.3233 121.046 20.1895 120.941 20.0654 cv
120.79 19.8987 120.639 19.7319 120.487 19.569 cv
120.396 19.4857 120.305 19.4024 120.216 19.319 cv
119.983 19.0572 119.766 18.7877 119.53 18.5299 cv
119.318 18.334 119.111 18.1382 118.903 17.9424 cv
118.702 17.7388 118.502 17.5372 118.3 17.3316 cv
118.023 17.1184 117.744 16.9031 117.465 16.6879 cv
117.18 16.4359 116.891 16.1857 116.604 15.9357 cv
116.414 15.7902 116.208 15.6914 116.013 15.5634 cv
115.768 15.385 115.52 15.2046 115.274 15.0263 cv
115.088 14.8964 114.929 14.751 114.75 14.6055 cv
114.617 14.5241 114.485 14.4427 114.353 14.3594 cv
114.173 14.2333 113.992 14.1073 113.812 13.9793 cv
113.223 13.6187 112.59 13.3433 111.978 13.0273 cv
111.755 12.8878 111.532 12.7462 111.309 12.6047 cv
110.921 12.4108 110.537 12.2169 110.151 12.023 cv
109.837 11.8717 109.51 11.7613 109.186 11.6352 cv
109.029 11.5479 108.87 11.4608 108.713 11.3735 cv
108.591 11.3288 108.467 11.2881 108.344 11.2436 cv
108.15 11.1583 107.958 11.071 107.765 10.9838 cv
107.156 10.7647 106.52 10.6057 105.892 10.4138 cv
105.597 10.3245 105.289 10.2024 104.99 10.1152 cv
104.335 9.9252 103.681 9.8243 103.003 9.6711 cv
102.568 9.5723 102.115 9.4482 101.671 9.3725 cv
101.384 9.3318 101.095 9.295 100.81 9.2543 cv
100.331 9.1554 99.7978 9.0701 99.2996 9.01 cv
99.1096 9.0041 98.9157 9.0003 98.7237 8.9925 cv
98.5919 8.9751 98.4562 8.9577 98.3204 8.9402 cv
98.0606 8.9363 97.8008 8.9305 97.539 8.9266 cv
96.9516 8.8859 96.3331 8.8375 95.7166 8.8336 cv
95.4781 8.9034 95.1427 8.8627 94.879 8.8607 cv
94.5609 8.8607 94.243 8.8607 93.925 8.8627 cv
93.8359 8.8762 93.7486 8.8898 93.6614 8.9034 cv
93.4403 8.9091 93.2193 8.915 92.9982 8.9208 cv
92.8819 8.9479 92.7637 8.977 92.6473 9.0041 cv
92.533 9.0216 92.4185 9.0332 92.3022 9.0468 cv
92.1917 9.0468 92.0792 9.0372 91.9842 9.074 cv
91.9183 9.0856 91.8505 9.0934 91.7846 9.1031 cv
91.641 9.1031 91.4898 9.0972 91.3774 9.1573 cv
91.0671 9.1554 90.6057 9.1961 90.3653 9.3261 cv
90.2974 9.3338 90.2296 9.3434 90.1617 9.3532 cv
89.9658 9.3513 89.7061 9.3764 89.5529 9.4656 cv
89.0429 9.4637 88.6222 9.6809 88.1588 9.7895 cv
87.9126 9.8476 87.6199 9.8747 87.4085 10.0027 cv
87.2068 10.0027 86.9877 10.0531 86.8288 10.1442 cv
86.507 10.1423 86.2277 10.3304 85.9525 10.437 cv
85.7896 10.499 85.5859 10.5029 85.4405 10.5999 cv
85.1187 10.5979 84.8337 10.784 84.568 10.9043 cv
84.3858 10.9838 84.1996 11.0594 84.0155 11.1369 cv
83.0228 11.5538 82.0533 12.0288 81.0994 12.5251 cv
80.9385 12.6299 80.7756 12.7326 80.6167 12.8354 cv
79.4708 13.4132 78.3423 14.0491 77.3303 14.8732 cv
77.0317 15.0864 76.7312 15.2996 76.4345 15.513 cv
76.2775 15.6525 76.1205 15.7941 75.9653 15.9337 cv
75.6744 16.147 75.3721 16.3293 75.0909 16.5677 cv
74.5151 17.0524 73.9741 17.5992 73.4409 18.1265 cv
73.1133 18.4232 72.7836 18.7218 72.454 19.0184 cv
72.3415 19.1463 72.2291 19.2763 72.1186 19.4062 cv
71.9693 19.5477 71.82 19.6854 71.6707 19.8231 cv
71.4361 20.0635 71.2713 20.3524 71.0425 20.587 cv
70.8448 20.7886 70.647 20.9767 70.4686 21.1978 cv
70.3872 21.3101 70.3018 21.4207 70.2243 21.5292 cv
69.8773 21.919 69.5399 22.301 69.2413 22.7198 cv
69.0377 23.0377 68.8341 23.3576 68.6286 23.6755 cv
68.3339 24.0556 68.0024 24.5423 67.7755 24.9591 cv
67.7077 25.0948 67.6418 25.2306 67.5739 25.3663 cv
67.3762 25.6979 67.1784 26.0255 66.9787 26.3531 cv
66.8061 26.6983 66.6898 27.0667 66.5153 27.4118 cv
66.4378 27.5456 66.3563 27.6774 66.2768 27.8112 cv
66.1081 28.1214 65.9666 28.4336 65.7882 28.7399 cv
65.7067 28.9396 65.6253 29.1394 65.5439 29.341 cv
65.4431 29.5446 65.3462 29.7501 65.2472 29.9556 cv
65.1678 30.1921 65.0863 30.4267 65.0069 30.6633 cv
64.9099 30.9173 64.8129 31.1712 64.714 31.4253 cv
64.2254 33.0112 63.8144 34.5992 63.477 36.2763 cv
63.4499 36.5942 63.4208 36.9103 63.3937 37.2263 cv
63.3491 37.5908 63.2231 37.9903 63.194 38.3548 cv
63.1688 38.6378 63.1804 38.9596 63.1009 39.2234 cv
63.0777 39.4444 63.0602 39.6655 63.0389 39.8864 cv
62.9885 41.2418 63.0234 42.535 63.0602 43.8495 cv
63.0777 44.4777 63.2018 45.1097 63.2579 45.7283 cv
63.2715 45.9978 63.2832 46.2673 63.2987 46.5387 cv
63.384 47.3841 63.5275 48.243 63.6593 49.0844 cv
63.7213 49.2977 63.7795 49.511 63.8397 49.7262 cv
63.9812 50.3913 64.1285 51.033 64.3204 51.667 cv
64.3767 51.8124 64.4329 51.9579 64.4892 52.1013 cv
64.524 52.2545 64.5628 52.4058 64.5977 52.557 cv
64.8478 53.2608 65.098 53.9646 65.3462 54.6683 cv
65.4703 54.9321 65.5944 55.1977 65.7165 55.4614 cv
65.7882 55.6378 65.8251 55.8317 65.9006 56.0062 cv
66.0907 56.456 66.3699 56.8593 66.5967 57.2955 cv
66.7789 57.6464 66.9903 57.9838 67.1706 58.3386 cv
67.223 58.4647 67.2753 58.5927 67.3257 58.7206 cv
67.3878 58.7982 67.4498 58.8718 67.5119 58.9513 cv
67.5798 59.0968 67.6476 59.2461 67.7173 59.3934 cv
67.8841 59.6881 68.0896 59.9731 68.3029 60.2465 cv
68.4289 60.4094 68.5336 60.5916 68.6635 60.7545 cv
68.8361 60.9755 69.0319 61.1752 69.1948 61.3981 cv
69.3209 61.5843 69.4449 61.7685 69.5729 61.9546 cv
69.8094 62.2358 70.044 62.5189 70.2845 62.8 cv
70.4802 63.0462 70.6761 63.2944 70.872 63.5426 cv
71.1163 63.7985 71.3605 64.0564 71.6067 64.3123 cv
71.8065 64.545 71.9809 64.8203 72.2117 65.0336 cv
72.5433 65.338 72.867 65.6462 73.1733 65.9525 cv
73.3381 66.1193 73.501 66.2822 73.6619 66.447 cv
73.9295 66.6797 74.2417 66.8445 74.4996 67.0888 cv
74.7477 67.3292 74.9959 67.5696 75.248 67.812 cv
75.4302 67.9535 75.6105 68.0911 75.7908 68.2308 cv
76.0137 68.4208 76.2038 68.6438 76.4462 68.8124 cv
76.737 69.0122 77.0104 69.2409 77.3148 69.4174 cv
77.5145 69.5337 77.7297 69.5938 77.9216 69.7198 cv
78.1466 69.8788 78.3714 70.0378 78.5963 70.1967 cv
78.8174 70.3403 79.0695 70.4565 79.2963 70.5942 cv
80.1474 71.1178 81.0102 71.5694 81.906 71.996 cv
82.2996 72.188 82.6719 72.4284 83.0946 72.5719 cv
83.4803 72.7231 83.8662 72.8724 84.2539 73.0237 cv
84.3955 73.0624 84.5371 73.1032 84.6766 73.1419 cv
85.0566 73.2893 85.4348 73.4327 85.8128 73.5801 cv
85.9156 73.6091 86.0164 73.6402 86.1191 73.6693 cv
86.4468 73.7973 86.7706 73.9485 87.1118 74.0416 cv
87.5268 74.123 87.9379 74.2005 88.3508 74.282 cv
88.9635 74.4118 89.6053 74.6038 90.2315 74.7007 cv
90.4622 74.7182 90.691 74.7375 90.9237 74.7531 cv
91.2281 74.7918 91.5325 74.8656 91.8485 74.8927 cv
92.0889 74.9063 92.3274 74.9237 92.5678 74.9393 cv
92.7249 74.9625 92.88 74.9857 93.0332 75.0129 cv
93.198 75.0168 93.3609 75.0227 93.5237 75.0284 cv
93.9018 75.0847 94.2759 75.1409 94.6521 75.1991 cv
94.8441 75.2068 95.0379 75.2145 95.2299 75.2243 cv
95.3463 75.2088 95.4625 75.1971 95.5789 75.1836 cv
95.922 75.1855 96.3311 75.2243 96.6763 75.2379 cv
96.8954 75.2456 97.1009 75.23 97.3142 75.2398 cv
97.7465 75.2611 98.1576 75.1758 98.5589 75.1177 cv
98.7412 75.1118 98.9235 75.1059 99.1057 75.0982 cv
99.3519 75.0672 99.6156 75.0265 99.858 75.0052 cv
100.756 74.9237 101.622 74.8229 102.489 74.6523 cv
102.78 74.5747 103.073 74.5011 103.363 74.4235 cv
103.728 74.3498 104.092 74.2742 104.457 74.1966 cv
104.647 74.1443 104.816 74.0493 104.994 73.9775 cv
105.293 73.8884 105.587 73.8011 105.886 73.7119 cv
106.012 73.6673 106.138 73.6227 106.266 73.5782 cv
106.481 73.518 106.675 73.4948 106.89 73.4289 cv
107.326 73.2776 107.765 73.1244 108.205 72.9712 cv
108.465 72.8453 108.726 72.7231 108.986 72.599 cv
109.24 72.5021 109.492 72.3857 109.735 72.2733 cv
109.806 72.2307 109.874 72.188 109.944 72.1453 cv
110.206 72.0232 110.479 71.8991 110.735 71.7653 cv
111.035 71.5947 111.332 71.428 111.631 71.2573 cv
111.784 71.1798 111.953 71.1351 112.106 71.0576 cv
cp
false sop
/0 
[/DeviceCMYK] /CSA add_res
0 0 0 1 cmyk
f
97.2831 37.5482 mo
97.5817 37.3737 97.8765 37.2031 98.1712 37.0324 cv
98.5899 36.8249 99.0514 36.6563 99.4992 36.5167 cv
99.8289 36.4159 100.155 36.317 100.482 36.2181 cv
100.608 36.1793 100.773 36.1483 100.884 36.0727 cv
101.025 35.968 101.136 35.6908 100.911 35.6113 cv
100.804 35.5744 100.665 35.5861 100.544 35.5841 cv
100.387 35.6384 100.232 35.6927 100.073 35.749 cv
99.9569 35.7993 99.8405 35.8517 99.7203 35.906 cv
99.3733 36.0222 99.0242 36.1056 98.6947 36.2608 cv
98.3844 36.4042 98.0684 36.5865 97.7737 36.7746 cv
97.6593 36.8579 97.5429 36.9394 97.4267 37.0208 cv
97.1881 37.1624 96.8372 37.3698 96.7984 37.6742 cv
96.8101 37.6742 96.8179 37.6742 96.8295 37.6742 cv
96.8275 37.7847 97.2367 37.5715 97.2831 37.5482 cv
cp
f
91.2262 36.3403 mo
92.2072 36.6117 93.2193 36.8754 94.117 37.331 cv
94.2876 37.4241 94.4563 37.5191 94.623 37.6141 cv
94.7704 37.6994 94.8984 37.8584 95.0709 37.8933 cv
95.1329 37.9049 95.2377 37.903 95.2706 37.839 cv
95.3772 37.618 94.4078 37.0131 94.2334 36.9317 cv
93.9502 36.7997 93.6691 36.666 93.386 36.5342 cv
93.291 36.4818 93.1902 36.4275 93.0932 36.3752 cv
92.8858 36.3034 92.6823 36.2317 92.4767 36.1599 cv
92.248 36.0669 92.0133 35.9661 91.771 35.9021 cv
91.6605 35.8788 91.548 35.8556 91.4355 35.8322 cv
91.0633 35.7218 90.726 35.5879 90.3051 35.5861 cv
90.1287 35.7354 90.1326 36.001 90.3323 36.127 cv
90.5747 36.2802 90.9431 36.2608 91.2262 36.3403 cv
cp
f
116.142 38.9694 mo
116.168 39.2466 116.193 39.5278 116.218 39.8069 cv
116.203 39.9621 116.185 40.1152 116.166 40.2684 cv
116.162 40.6155 116.16 40.9625 116.154 41.3116 cv
116.146 41.4279 116.142 41.5403 116.137 41.6566 cv
116.142 41.8777 116.197 42.1084 116.193 42.3236 cv
116.185 42.63 116.11 42.9518 116.115 43.2775 cv
116.142 43.6731 116.168 44.0686 116.193 44.4622 cv
116.175 44.7045 116.158 44.943 116.137 45.1835 cv
116.15 45.2726 116.16 45.3599 116.17 45.4471 cv
116.175 45.7089 116.15 45.9706 116.142 46.2246 cv
116.152 46.4088 116.168 46.5949 116.179 46.7772 cv
116.179 46.9207 116.144 47.0505 116.133 47.1805 cv
116.115 47.4578 116.133 47.7369 116.166 47.9928 cv
116.214 48.3923 116.201 48.9157 116.16 49.3191 cv
116.144 49.4179 116.129 49.5148 116.115 49.6098 cv
116.102 49.8541 116.162 50.0693 116.16 50.3059 cv
116.142 50.4416 116.125 50.5734 116.108 50.7092 cv
116.111 50.8547 116.119 50.9961 116.127 51.1435 cv
116.119 51.3374 116.108 51.5274 116.098 51.7213 cv
116.094 51.9036 116.21 52.9428 116.038 52.9428 cv
115.923 52.9428 115.002 51.9365 114.847 51.7795 cv
113.696 50.6161 112.526 49.4277 111.383 48.2721 cv
111.198 48.0859 111.045 47.8687 110.865 47.6943 cv
110.702 47.5392 110.539 47.3821 110.374 47.2251 cv
110.295 47.1281 110.208 47.0273 110.124 46.9303 cv
109.017 45.8407 107.895 44.7336 106.784 43.6479 cv
106.586 43.452 105.145 42.0095 105.139 41.9125 cv
105.145 41.8873 105.149 41.8602 105.153 41.835 cv
105.263 41.5597 105.717 41.2573 105.942 41.042 cv
106.188 40.8075 106.369 40.5457 106.599 40.3111 cv
106.805 40.0978 107.032 39.8923 107.241 39.6848 cv
107.321 39.6169 107.398 39.551 107.48 39.4851 cv
107.66 39.299 107.836 39.1128 108.019 38.9267 cv
108.199 38.7503 108.375 38.5739 108.556 38.3935 cv
108.715 38.2074 108.874 38.0174 109.035 37.8294 cv
109.223 37.6354 109.438 37.4822 109.63 37.3001 cv
109.882 37.0402 110.134 36.7824 110.386 36.5245 cv
110.673 36.2511 110.958 35.9777 111.245 35.7024 cv
111.803 35.1227 112.36 34.5449 112.918 33.9652 cv
113.775 33.145 114.65 32.3365 115.439 31.4543 cv
115.64 31.2255 115.941 31.0375 116.1 30.7835 cv
116.239 30.9793 116.141 31.495 116.154 31.7664 cv
116.193 32.4063 116.162 33.0984 116.168 33.7636 cv
116.185 34.0989 116.197 34.4363 116.212 34.7717 cv
116.193 35.1207 116.179 35.4678 116.16 35.8149 cv
116.175 36.0184 116.187 36.222 116.205 36.4217 cv
116.201 36.5206 116.193 36.6156 116.189 36.7106 cv
116.203 36.8269 116.212 36.9433 116.222 37.0596 cv
116.21 37.1565 116.197 37.2515 116.183 37.3485 cv
116.137 37.8817 116.133 38.4168 116.142 38.9694 cv
cp
110.465 65.8595 mo
110.369 65.8595 110.252 65.8731 110.177 65.9177 cv
110.033 65.9177 109.74 65.9914 109.626 66.0593 cv
109.362 66.0573 109.137 66.1659 108.899 66.2124 cv
108.738 66.2454 108.563 66.2764 108.41 66.3016 cv
108.296 66.3191 108.162 66.3132 108.063 66.3675 cv
107.997 66.3772 107.929 66.385 107.862 66.3946 cv
107.794 66.4043 107.724 66.4141 107.656 66.4218 cv
107.483 66.4218 107.27 66.3946 107.138 66.4761 cv
107.069 66.4857 107.001 66.4955 106.933 66.5052 cv
106.652 66.5032 106.312 66.4606 106.095 66.5886 cv
105.991 66.5886 105.866 66.5769 105.777 66.6157 cv
105.644 66.6157 105.545 66.5847 105.43 66.5536 cv
105.43 66.6157 105.083 66.6622 105.025 66.6971 cv
104.831 66.6952 104.585 66.6622 104.418 66.7223 cv
104.352 66.732 104.284 66.7398 104.216 66.7495 cv
104.023 66.7495 103.792 66.7281 103.637 66.8057 cv
103.509 66.8057 103.363 66.8095 103.259 66.86 cv
103.071 66.86 102.592 66.9104 102.479 66.8173 cv
102.291 66.67 102.396 64.8319 102.404 64.4868 cv
102.398 64.3123 102.388 64.1378 102.382 63.9653 cv
102.375 63.781 102.437 63.1645 102.122 63.2692 cv
101.944 63.2673 101.564 63.2265 101.43 63.2944 cv
101.24 63.2924 100.732 63.3312 100.622 63.2265 cv
100.424 63.0385 100.314 62.3521 100.211 62.0768 cv
100.054 61.6735 99.7998 61.2702 99.7455 60.8243 cv
99.7397 60.7777 99.7281 60.7022 99.7591 60.6672 cv
99.8405 60.5645 100.224 60.5819 100.372 60.5858 cv
100.715 60.5877 102.264 60.5916 102.39 60.3725 cv
102.468 60.229 102.437 59.7792 102.423 59.597 cv
102.435 59.3177 102.446 59.0386 102.458 58.7575 cv
102.473 58.3289 102.375 57.8268 102.504 57.4293 cv
103.491 58.4938 104.608 59.4652 105.622 60.5257 cv
105.717 60.6459 105.81 60.7622 105.905 60.8824 cv
106.157 61.1365 106.44 61.3633 106.702 61.6192 cv
107.404 62.3056 108.053 63.0501 108.738 63.7423 cv
109.261 64.2735 109.81 64.7932 110.337 65.3244 cv
110.434 65.4232 110.603 65.5338 110.648 65.6657 cv
110.688 65.7664 110.518 65.8188 110.465 65.8595 cv
cp
101.777 66.7959 mo
101.692 66.9143 101.432 66.9491 101.293 66.9686 cv
101.297 66.2434 101.256 65.4737 101.283 64.735 cv
101.291 64.5255 101.254 64.2812 101.297 64.0777 cv
101.312 64.0098 101.349 63.9789 101.395 63.9323 cv
101.545 63.9323 101.684 63.9323 101.801 63.9905 cv
101.843 63.9924 101.851 64.3007 101.841 64.3666 cv
101.82 64.5217 101.855 64.6807 101.855 64.8571 cv
101.853 65.1189 101.81 65.3477 101.824 65.6094 cv
101.841 65.875 101.921 66.5924 101.777 66.7959 cv
cp
99.9084 63.2169 mo
99.7242 63.2983 99.4721 63.1393 99.3694 63.0035 cv
99.2569 62.8542 99.2181 62.6778 99.16 62.5053 cv
99.0689 62.228 98.9778 61.941 98.8711 61.6696 cv
98.7994 61.4874 98.6597 61.2411 98.6869 61.0259 cv
98.7044 60.8902 98.8323 60.8379 98.9254 60.7661 cv
99.0087 60.7894 99.0689 60.8126 99.1173 60.8863 cv
99.1735 60.9736 99.193 61.0686 99.2259 61.1656 cv
99.3171 61.4351 99.4062 61.6967 99.4837 61.976 cv
99.573 62.2901 99.7087 62.6139 99.8425 62.9085 cv
99.8638 62.9571 100.005 63.1742 99.9084 63.2169 cv
cp
98.8594 67.7654 mo
98.7508 67.7635 98.619 67.8468 98.5299 67.8895 cv
98.2642 68.0077 97.9967 68.128 97.7291 68.2482 cv
97.7291 68.285 97.7136 68.2695 97.6903 68.252 cv
97.5546 68.1377 97.4558 67.874 97.4422 67.6975 cv
97.5876 67.6975 97.7504 67.7111 97.8784 67.6724 cv
98.2119 67.6724 98.5415 67.6936 98.8594 67.7054 cv
98.8594 67.7247 98.8594 67.7441 98.8594 67.7654 cv
cp
97.1377 68.4692 mo
97.0097 68.7077 96.75 68.8706 96.5522 69.0393 cv
96.4533 69.1615 96.3506 69.2797 96.2497 69.4018 cv
95.9977 69.6578 95.7379 69.8943 95.575 70.2006 cv
95.5672 70.2006 95.5575 70.2006 95.5479 70.2006 cv
95.3714 70.0049 95.1911 69.807 95.0127 69.6112 cv
94.8382 69.4561 94.4854 69.2545 94.2798 69.1536 cv
94.2798 69.144 94.2798 69.1343 94.2798 69.1245 cv
94.2721 69.1245 94.2624 69.1245 94.2546 69.1245 cv
94.2546 69.1149 94.2546 69.1072 94.2546 69.0955 cv
94.2624 69.0955 94.2721 69.0955 94.2798 69.0955 cv
94.2837 69.0451 94.3284 69.0625 94.3652 69.0567 cv
94.4737 69.0354 94.5804 69.0122 94.687 68.9908 cv
95.0263 68.9811 95.3636 68.9675 95.6991 68.9597 cv
95.7146 68.9016 95.7302 68.8434 95.7456 68.7853 cv
95.7611 68.6418 95.7727 68.4963 95.7845 68.3529 cv
95.7709 68.2191 95.7554 68.0834 95.7418 67.9477 cv
95.7495 67.812 95.7554 67.6801 95.7611 67.5425 cv
95.7573 67.2555 95.7224 66.9375 95.7456 66.6467 cv
95.7806 66.4819 95.8154 66.3152 95.8504 66.1523 cv
95.8872 65.9525 95.9415 65.7082 96.0791 65.5609 cv
96.2168 65.4078 96.4106 65.4214 96.5871 65.3496 cv
96.6452 65.3768 96.7093 65.4059 96.7325 65.4757 cv
96.7926 65.6675 96.7461 65.9216 96.7442 66.1309 cv
96.7519 66.6312 96.7577 67.1314 96.7597 67.6336 cv
96.779 67.7518 96.8566 67.8565 96.9051 67.9613 cv
96.9788 68.1241 97.0466 68.285 97.1183 68.4479 cv
97.1455 68.4479 97.1474 68.444 97.1377 68.4692 cv
cp
93.3027 68.446 mo
93.0021 68.4131 92.7249 68.2017 92.4573 68.0892 cv
92.2421 67.9981 91.9978 67.9593 91.8019 67.8391 cv
91.7923 67.8391 91.7826 67.8391 91.7729 67.8391 cv
91.7729 67.8294 91.7729 67.8197 91.7729 67.812 cv
91.7826 67.812 91.7923 67.812 91.8019 67.812 cv
91.8019 67.7713 91.7923 67.7809 91.831 67.7809 cv
92.2537 67.7829 94.2507 67.8604 94.435 67.6801 cv
94.5241 67.5909 94.5202 67.2225 94.5241 67.0732 cv
94.528 66.1407 94.4175 64.8882 95.2764 64.4092 cv
95.4005 64.3375 95.5324 64.3239 95.6681 64.2735 cv
95.9047 64.2735 96.4902 64.3608 96.4611 64.6787 cv
96.4552 64.7544 96.3661 64.7544 96.2982 64.7641 cv
95.732 64.8319 95.6215 65.1421 95.3889 65.5823 cv
95.197 65.9371 95.2279 66.5498 95.2182 67.019 cv
95.2066 67.4784 95.1853 67.9147 95.1814 68.3781 cv
95.1718 68.3781 95.162 68.3781 95.1543 68.3781 cv
95.1543 68.4324 94.8712 68.38 94.8053 68.4052 cv
94.6482 68.4033 94.5125 68.4479 94.3729 68.4556 cv
94.0143 68.4518 93.6594 68.4479 93.3027 68.446 cv
cp
91.3347 63.2944 mo
91.0865 63.2944 90.2528 63.2401 90.1035 63.3371 cv
90.0473 63.3758 90.0415 63.4514 90.0376 63.5193 cv
90.0318 64.291 90.026 65.0646 90.0201 65.8323 cv
90.024 66.1678 90.0647 66.6545 89.993 66.986 cv
89.9756 67.0675 89.931 67.1372 89.867 67.1915 cv
89.867 67.2012 89.867 67.209 89.867 67.2225 cv
89.6304 67.2186 89.4192 67.1179 89.2 67.0849 cv
88.9887 67.0539 88.7696 67.1004 88.5679 67.1004 cv
88.4129 67.0771 88.2577 67.0597 88.1026 67.0403 cv
87.806 67.0112 87.5054 66.9821 87.2068 66.955 cv
87.0886 66.9434 86.9063 66.9259 86.8036 66.9724 cv
86.1114 66.9686 85.4716 66.8309 84.8085 66.765 cv
84.5002 66.7339 84.1996 66.7359 83.9146 66.6855 cv
83.6723 66.6467 83.4319 66.6079 83.1896 66.5672 cv
83.0848 66.542 82.9762 66.5168 82.8696 66.4936 cv
82.7184 66.4857 82.5653 66.48 82.4121 66.4702 cv
82.0649 66.4082 81.716 66.3462 81.367 66.2841 cv
81.1013 66.2473 80.762 66.2434 80.5333 66.1271 cv
80.5236 66.1271 80.5138 66.1271 80.5003 66.1271 cv
80.5003 66.1077 80.5003 66.0884 80.5003 66.0689 cv
80.5449 66.0689 80.5236 66.0825 80.5449 66.0495 cv
80.6981 65.8032 80.9986 65.5377 81.2197 65.338 cv
81.4213 65.1344 81.6229 64.9327 81.8246 64.7291 cv
82.1328 64.4209 82.4683 64.1475 82.7824 63.8373 cv
82.9375 63.6841 83.0926 63.529 83.2477 63.3797 cv
83.3757 63.2362 83.5037 63.0928 83.6316 62.9532 cv
84.4285 62.1892 85.2409 61.4486 86.0184 60.6556 cv
86.4991 60.1651 86.9413 59.6474 87.4338 59.1763 cv
88.1181 58.519 88.7929 57.8791 89.4424 57.1928 cv
89.6304 56.9989 89.8224 56.803 90.0124 56.6053 cv
90.1365 56.7818 90.0608 57.4487 90.0415 57.6775 cv
90.0105 58.0439 90.0047 58.4143 90.0008 58.804 cv
89.9988 59.0522 89.9678 59.3061 90.0473 59.5195 cv
90.1171 59.7269 90.2626 59.9033 90.3866 60.0875 cv
90.4544 60.1922 90.4933 60.3318 90.6135 60.4016 cv
90.7919 60.4966 91.3503 60.5218 91.581 60.5122 cv
91.9901 60.4966 92.4127 60.4656 92.8548 60.4715 cv
92.8528 60.7506 92.6744 61.0977 92.5794 61.3458 cv
92.405 61.784 92.2305 62.2203 92.0676 62.6662 cv
92.0037 62.831 91.9474 63.054 91.8291 63.1897 cv
91.7419 63.2847 91.6217 63.2226 91.5092 63.2653 cv
91.451 63.2789 91.3928 63.2847 91.3347 63.2944 cv
cp
79.05 49.5071 mo
78.6274 49.9007 78.2842 50.3622 77.8712 50.7577 cv
77.2625 51.3529 76.6516 51.9481 76.0428 52.5453 cv
75.8412 52.7508 75.5485 52.968 75.3992 53.2006 cv
75.3894 53.2006 75.3798 53.2006 75.3682 53.2006 cv
75.3682 53.2588 75.3022 53.096 75.2964 53.0513 cv
75.2944 52.842 75.2887 52.6306 75.2867 52.4174 cv
75.2983 51.7814 75.3119 51.1454 75.3274 50.5134 cv
75.3294 49.9861 75.3371 49.48 75.3313 48.9778 cv
75.3255 48.8033 75.3178 48.6288 75.31 48.4582 cv
75.3216 47.9812 75.3487 47.4578 75.3449 46.9537 cv
75.3371 46.7423 75.3294 46.529 75.3216 46.3158 cv
75.3274 46.0074 75.3526 45.6895 75.3526 45.3618 cv
75.3449 45.1699 75.3391 44.9779 75.3294 44.784 cv
75.3332 44.2334 75.3352 43.6866 75.3371 43.136 cv
75.3313 42.9731 75.3235 42.8083 75.3139 42.6454 cv
75.3332 42.4418 75.3526 42.2383 75.3701 42.0366 cv
75.3856 41.5791 75.3391 41.1486 75.3565 40.7066 cv
75.3739 40.3693 75.3914 40.0319 75.4069 39.6964 cv
75.3992 38.9694 75.3642 38.2501 75.3837 37.5249 cv
75.405 37.1798 75.4263 36.8328 75.4496 36.4856 cv
75.436 36.3015 75.4224 36.1192 75.4069 35.937 cv
75.4011 35.1983 75.4263 34.446 75.4185 33.7383 cv
75.4108 33.5832 75.403 33.4281 75.3953 33.2749 cv
75.4069 33.0927 75.4185 32.9084 75.4321 32.7262 cv
75.4341 32.511 75.3914 32.3075 75.405 32.0884 cv
75.4205 31.9643 75.438 31.8402 75.4515 31.7141 cv
75.4476 31.369 75.436 31.0162 75.438 30.673 cv
75.7326 30.7796 75.9692 31.1073 76.196 31.3283 cv
76.6982 31.815 77.1965 32.3016 77.6929 32.7863 cv
77.8654 32.9705 78.038 33.1547 78.2086 33.337 cv
78.5847 33.6918 78.9609 34.0543 79.2982 34.4441 cv
79.4126 34.5759 79.5193 34.7116 79.6531 34.8395 cv
79.8993 35.0742 80.1629 35.2894 80.4034 35.5395 cv
80.5081 35.6481 80.5585 35.7683 80.6729 35.8749 cv
81.2506 36.4236 81.8614 36.9374 82.4431 37.4901 cv
82.9996 38.0619 83.554 38.6378 84.1085 39.2098 cv
84.4595 39.5452 86.6795 41.6275 86.5477 41.9475 cv
86.507 42.0095 86.4682 42.0696 86.4255 42.1297 cv
86.1657 42.5776 85.5569 43.0797 85.1575 43.4384 cv
85.0198 43.5625 84.9345 43.7293 84.8007 43.865 cv
84.473 44.1985 84.1473 44.5165 83.8178 44.848 cv
83.364 45.2978 82.9026 45.7438 82.445 46.1917 cv
82.1445 46.4999 81.8459 46.8082 81.5454 47.1146 cv
81.4697 47.2018 81.3942 47.2891 81.3165 47.3763 cv
80.5585 48.0782 79.8063 48.8072 79.05 49.5071 cv
cp
92.8509 27.5184 mo
92.5698 27.5883 92.6298 27.0434 92.6376 26.8631 cv
92.8451 26.9348 93.2659 27.4138 92.8509 27.5184 cv
cp
85.1516 21.0096 mo
85.4348 21.0116 85.7896 21.0523 86.0475 20.9844 cv
86.2529 21.0251 86.4875 21.0135 86.7105 21.0194 cv
86.887 21.029 87.0575 21.0406 87.232 21.0485 cv
87.4745 21.0485 87.7149 21.0485 87.9552 21.0485 cv
88.0619 21.0678 88.1686 21.0853 88.2733 21.1046 cv
88.4924 21.1066 88.7522 20.9573 88.9674 21.031 cv
89.2233 21.1182 89.4443 21.4051 89.6382 21.603 cv
89.9504 21.9112 90.2587 22.2156 90.5669 22.5239 cv
90.7744 22.7449 90.9683 22.9989 91.1776 23.2161 cv
91.4355 23.4855 91.7187 23.6755 91.9784 23.947 cv
92.1335 24.1098 92.2266 24.2882 92.3778 24.4453 cv
92.4632 24.5151 92.5523 24.5811 92.6396 24.6489 cv
92.8064 24.7866 92.9595 24.9746 93.0525 25.1607 cv
92.9595 25.1588 92.8237 25.3586 92.7617 25.4225 cv
92.5232 25.6727 92.3352 25.9266 92.2557 26.2581 cv
92.2362 26.392 92.2169 26.5238 92.1955 26.6576 cv
92.153 26.8708 92.0967 27.0822 92.1219 27.3226 cv
92.1607 27.4777 92.1975 27.6309 92.2362 27.784 cv
92.3022 27.9449 92.3682 28.104 92.4341 28.261 cv
92.5155 28.4374 92.5543 28.6236 92.6744 28.7865 cv
92.7637 28.9067 92.9168 28.9493 93.0293 29.0346 cv
93.1418 29.116 93.1882 29.2537 93.3007 29.3371 cv
93.4093 29.3914 93.5159 29.4399 93.6245 29.4883 cv
93.7738 29.5892 93.9212 29.688 94.0705 29.7869 cv
94.2682 29.911 94.5106 29.9982 94.6832 30.163 cv
94.7975 30.3201 94.91 30.4752 95.0243 30.6323 cv
95.1272 30.7583 95.2939 30.8475 95.3695 30.9967 cv
95.4179 31.0995 95.4568 31.241 95.4625 31.3632 cv
95.4684 31.4757 95.4393 31.6036 95.4664 31.7121 cv
95.5265 31.9682 95.6293 32.3326 95.5847 32.606 cv
95.352 32.6041 94.8673 32.0205 94.6929 31.8498 cv
94.3322 31.5125 93.9716 31.1771 93.6148 30.8416 cv
93.353 30.5644 93.0932 30.2851 92.8316 30.008 cv
92.3158 29.4689 91.7594 28.9667 91.2494 28.4374 cv
90.978 28.1524 90.6988 27.8733 90.4254 27.5863 cv
90.309 27.4525 90.1927 27.3168 90.0764 27.1829 cv
89.1302 26.2581 88.1938 25.3411 87.2534 24.4201 cv
87.0052 24.1487 86.7552 23.8791 86.505 23.6077 cv
85.966 23.0629 85.4657 22.5219 84.9035 22.0023 cv
84.6262 21.7444 84.033 21.3935 83.9341 21.031 cv
84.3354 21.0329 84.7407 21.0077 85.1516 21.0096 cv
cp
90.6735 21.0988 mo
90.8907 21.1337 91.0187 21.1958 91.1757 21.3508 cv
91.4046 21.5739 91.6003 21.8376 91.7846 22.0954 cv
91.8796 22.2273 91.9319 22.3746 92.0444 22.5046 cv
92.1878 22.6577 92.3332 22.8128 92.4767 22.966 cv
92.6066 23.1289 92.7326 23.2878 92.8606 23.4507 cv
92.9071 23.5205 92.9517 23.5903 92.9982 23.6601 cv
93.0894 23.7416 93.1844 23.823 93.2755 23.9005 cv
93.4694 24.0866 93.6459 24.3193 93.7466 24.5578 cv
93.7021 24.5559 93.7021 24.6043 93.6905 24.6411 cv
93.5334 24.6411 93.3395 24.583 93.2271 24.4977 cv
93.0409 24.3057 92.8567 24.1177 92.6687 23.9257 cv
92.5503 23.8094 92.4108 23.7609 92.308 23.6252 cv
92.1083 23.3576 91.959 23.0396 91.7148 22.8012 cv
91.5751 22.6635 91.3735 22.6364 91.23 22.5026 cv
91.2262 22.4967 91.2223 22.491 91.2184 22.4871 cv
91.0671 22.3319 91.011 22.1206 90.883 21.9519 cv
90.7376 21.76 90.5262 21.6281 90.3866 21.4381 cv
90.3828 21.4265 90.3749 21.4129 90.3672 21.4013 cv
90.3653 21.3935 90.3653 21.3858 90.3614 21.3799 cv
90.3381 21.2151 90.5669 21.1492 90.6735 21.0988 cv
cp
91.8078 21.3935 mo
91.8078 21.3878 91.8098 21.378 91.8098 21.3703 cv
91.8098 21.3644 91.8117 21.3587 91.8137 21.3508 cv
91.8737 21.1764 92.3312 21.1725 92.4941 21.0794 cv
92.6648 21.0794 92.8858 21.0485 93.0254 21.1182 cv
93.4364 21.3199 93.5741 21.919 93.7389 22.2971 cv
93.8475 22.5414 93.9891 22.7798 94.1073 23.0241 cv
94.1848 23.1541 94.2624 23.2839 94.34 23.4119 cv
94.3923 23.5437 94.4078 23.6853 94.4156 23.8366 cv
94.4175 23.9451 94.435 24.1487 94.3322 24.201 cv
94.2507 24.2457 94.1266 24.2243 94.0472 24.1913 cv
93.8998 24.1351 91.8194 21.5526 91.8078 21.4187 cv
91.8078 21.409 91.8078 21.4013 91.8078 21.3935 cv
cp
94.148 21.1492 mo
94.2546 21.0367 94.6754 21.1105 94.8402 21.0639 cv
95.0225 21.126 95.4858 21.1182 95.7068 21.126 cv
95.7107 21.254 95.7166 21.378 95.7224 21.506 cv
95.7437 21.601 95.767 21.696 95.7863 21.793 cv
95.7689 21.8976 95.7515 22.0043 95.734 22.109 cv
95.7243 22.5685 95.6642 23.0221 95.6409 23.4682 cv
95.6565 23.7493 95.672 24.0284 95.6875 24.3077 cv
95.6797 24.3077 95.6681 24.3077 95.6604 24.3077 cv
95.6604 24.296 95.6604 24.2882 95.6604 24.2786 cv
95.292 24.2766 94.8693 23.1521 94.7219 22.8942 cv
94.6386 22.7507 94.5125 22.6596 94.4136 22.5239 cv
94.2062 22.2331 93.83 21.4866 94.148 21.1492 cv
cp
96.7654 26.5102 mo
96.7131 26.7138 96.5211 26.834 96.3738 26.9794 cv
96.2206 27.1287 96.0365 27.3051 95.8174 27.3304 cv
95.6022 27.3575 95.292 26.392 95.3327 26.2213 cv
95.352 26.1438 95.6913 25.7967 95.765 25.7541 cv
95.765 25.7443 95.765 25.7347 95.767 25.725 cv
95.8697 25.7347 95.9706 25.7482 96.0713 25.7579 cv
96.2517 25.818 96.8275 26.2814 96.7654 26.5102 cv
cp
96.432 23.1832 mo
96.4456 23.026 96.529 22.9233 96.527 22.7507 cv
96.5192 22.5375 96.3952 22.3319 96.4475 22.1187 cv
96.4824 21.9771 96.6181 21.8821 96.6608 21.7387 cv
96.7093 21.57 96.6492 21.4304 96.7674 21.2928 cv
96.8895 21.1531 97.636 21.2656 97.8765 21.1376 cv
98.0315 21.1396 98.1828 21.1396 98.3379 21.1415 cv
98.3379 21.1608 98.3379 21.1803 98.3379 21.1996 cv
98.2933 21.1996 98.2933 21.2229 98.2739 21.2501 cv
98.0471 21.568 97.9308 21.9383 97.7737 22.2893 cv
97.7 22.4173 97.6263 22.5433 97.5546 22.6732 cv
97.4965 22.8109 97.4363 22.9505 97.3781 23.09 cv
97.2288 23.3693 96.8547 23.8462 96.529 23.9082 cv
96.529 23.8986 96.529 23.8889 96.529 23.8791 cv
96.4785 23.8773 96.496 23.6135 96.4882 23.5612 cv
96.4649 23.4332 96.4165 23.3266 96.432 23.1832 cv
cp
98.6404 22.5278 mo
98.6888 22.3785 98.6869 22.2156 98.7606 22.0799 cv
98.8517 21.9035 99.0747 21.8589 99.2123 21.7328 cv
99.3344 21.6185 99.3616 21.4633 99.4585 21.3392 cv
99.5613 21.2055 99.7028 21.1822 99.8425 21.1201 cv
99.9569 21.1201 100.073 21.1221 100.19 21.1221 cv
100.19 21.2656 99.9996 21.4129 99.9317 21.5292 cv
99.8347 21.6844 99.7397 21.8512 99.6428 22.0043 cv
99.5323 22.1555 99.4178 22.3087 99.3035 22.4599 cv
99.2278 22.5782 99.2007 22.7119 99.1057 22.8205 cv
99.0359 22.8748 98.9661 22.931 98.8944 22.9853 cv
98.8304 23.0571 98.7664 23.1269 98.7044 23.1948 cv
98.6385 23.2568 98.5744 23.3189 98.5105 23.3789 cv
98.3922 23.5224 98.3922 23.7298 98.2351 23.8559 cv
98.0956 23.9625 97.8454 24.0362 97.6574 23.9723 cv
97.6399 23.9723 97.6186 23.9723 97.5992 23.9723 cv
97.6011 23.885 97.9792 23.2955 98.0665 23.22 cv
98.146 23.1521 98.2623 23.1462 98.3244 23.0551 cv
98.3824 22.9698 98.3728 22.869 98.4232 22.7818 cv
98.4814 22.6771 98.5977 22.6441 98.6404 22.5278 cv
cp
100.604 21.8298 mo
100.725 21.6999 100.792 21.5409 100.899 21.3974 cv
100.99 21.3083 101.081 21.219 101.174 21.126 cv
101.382 21.1492 101.576 21.1803 101.808 21.1899 cv
101.808 21.219 101.808 21.2462 101.808 21.2772 cv
101.502 21.2733 100.68 22.2951 100.488 22.553 cv
100.397 22.6751 100.292 22.9155 100.155 22.9873 cv
100.069 23.03 99.9685 22.995 99.8987 22.9524 cv
99.7028 22.8303 99.8483 22.615 99.9064 22.4735 cv
99.9414 22.3843 99.951 22.2776 100.027 22.2117 cv
100.108 22.173 100.184 22.1342 100.265 22.0935 cv
100.378 22.0082 100.49 21.919 100.604 21.8298 cv
cp
98.4135 28.7767 mo
98.4406 28.7767 98.431 28.7845 98.4115 28.8058 cv
98.4115 28.9376 98.0374 29.1723 97.921 29.0598 cv
97.7563 28.9008 97.9599 28.734 98.0645 28.6294 cv
98.2196 28.641 98.3321 28.6488 98.4135 28.7767 cv
cp
98.7722 27.1054 mo
98.7005 27.1578 98.6326 27.2199 98.5356 27.2179 cv
98.4349 27.216 98.3942 27.152 98.3631 27.0686 cv
98.3399 26.9949 98.3476 26.0604 98.3728 25.979 cv
98.4038 25.8781 98.5589 25.7929 98.6306 25.7114 cv
98.8498 25.7793 98.8362 25.9111 98.9119 26.1088 cv
99.0476 26.4695 99.1444 26.8301 98.7722 27.1054 cv
cp
99.3151 27.4777 mo
99.3151 27.6871 99.2065 27.9159 99.0223 27.9974 cv
99.0223 28.0438 98.9215 27.9799 98.8769 27.9663 cv
98.8788 27.7569 99.1503 27.6056 99.288 27.4777 cv
99.2957 27.4777 99.3054 27.4777 99.3151 27.4777 cv
cp
99.1019 24.2398 mo
99.1019 24.2495 99.1019 24.2573 99.1019 24.2689 cv
99.0728 24.2669 99.0437 24.2669 99.0146 24.2669 cv
99.0146 24.1739 99.0126 24.0789 99.0087 23.9819 cv
99.0514 23.693 99.288 23.5612 99.4528 23.346 cv
99.7591 23.6135 99.286 24.0439 99.1019 24.2398 cv
cp
102.012 34.2288 mo
102.043 34.3956 102.072 34.5584 102.103 34.7252 cv
102.134 35.2545 102.122 35.7915 102.13 36.3442 cv
102.138 36.5671 102.146 36.7901 102.152 37.0131 cv
102.148 37.7072 102.107 38.4537 102.115 39.1807 cv
102.132 39.3533 102.148 39.5278 102.163 39.7003 cv
102.175 40.1114 102.163 40.5146 102.155 40.9141 cv
102.15 41.1234 102.117 41.3425 102.107 41.55 cv
102.088 41.9048 102.109 42.2557 102.09 42.6202 cv
102.074 42.7734 102.057 42.9286 102.041 43.0836 cv
102.035 43.3784 102.059 43.6944 102.057 44.0085 cv
102.039 44.2606 102.024 44.5087 102.008 44.7588 cv
102.018 45.1931 102.092 45.6992 102.018 46.1471 cv
101.863 46.1083 101.708 46.0695 101.554 46.0307 cv
101.246 45.9512 100.531 45.8117 100.224 45.9628 cv
100.166 45.9764 100.108 45.9822 100.048 45.9939 cv
99.9821 46.0017 99.9162 46.0113 99.8483 46.021 cv
99.6854 46.0191 99.3306 46.0831 99.2104 46.1606 cv
98.7897 46.1606 98.621 46.2808 98.2992 46.4515 cv
98.0315 46.593 97.7427 46.6822 97.477 46.8276 cv
97.1765 46.9905 96.8915 47.2387 96.5716 47.3628 cv
96.5716 47.4228 96.4824 47.2949 96.4688 47.2678 cv
96.1858 46.7035 96.2032 45.7845 96.207 45.0749 cv
96.209 44.8073 96.1606 44.5669 96.1625 44.3226 cv
96.1741 44.2372 96.1838 44.1481 96.1954 44.0628 cv
96.1838 43.9174 96.1722 43.772 96.1586 43.6285 cv
96.1528 43.0972 96.1858 42.5466 96.1741 42.0405 cv
96.1625 41.5073 96.1295 40.9432 96.1489 40.3886 cv
96.1625 40.0338 96.1528 39.6266 96.1897 39.2621 cv
96.207 39.1071 96.2226 38.9519 96.242 38.8007 cv
96.2459 38.4032 96.2478 38.0076 96.2517 37.6141 cv
96.2711 37.3426 96.2904 37.0751 96.3099 36.8037 cv
96.3273 36.2608 96.3254 35.7354 96.401 35.2409 cv
96.432 35.0315 96.4359 34.8318 96.5677 34.6748 cv
96.7422 34.4673 96.9865 34.3374 97.2133 34.2152 cv
98.1401 33.7247 99.1406 33.5696 100.211 33.368 cv
100.445 33.3253 100.715 33.3486 100.93 33.273 cv
101.138 33.2749 101.322 33.3098 101.51 33.3214 cv
101.671 33.3292 101.832 33.2982 101.971 33.3641 cv
102.053 33.3661 102.033 33.56 102.033 33.6278 cv
102.022 33.8236 101.983 34.0388 102.012 34.2288 cv
cp
97.1765 29.5135 mo
97.1377 29.7249 96.6569 29.8121 96.4921 29.7094 cv
96.2459 29.5581 96.7151 29.2537 96.8179 29.1723 cv
96.94 29.2072 97.2076 29.3448 97.1765 29.5135 cv
cp
97.5546 25.9324 mo
97.4558 25.9925 97.3413 26.1495 97.2133 26.1341 cv
97.0388 26.1127 96.9633 25.882 96.8469 25.7754 cv
96.719 25.6532 96.4513 25.5912 96.4882 25.3586 cv
96.5018 25.2616 96.5852 25.2131 96.6666 25.1802 cv
96.6666 25.1724 96.6666 25.1627 96.6666 25.153 cv
96.8604 25.1898 96.9962 25.2887 97.1688 25.3624 cv
97.3704 25.4457 97.5759 25.4923 97.7834 25.5718 cv
97.828 25.5873 97.8474 25.6377 97.8299 25.6862 cv
97.7892 25.8084 97.6554 25.8704 97.5546 25.9324 cv
cp
97.1474 27.1209 mo
97.2308 27.1306 97.3142 27.1404 97.3937 27.15 cv
97.6458 27.2411 97.861 27.6076 97.7679 27.8733 cv
97.7174 28.0147 97.5585 28.1388 97.4363 28.2319 cv
97.3529 28.2959 97.2308 28.3948 97.1106 28.3851 cv
96.9438 28.3676 97.0136 28.0109 97.0563 27.9159 cv
97.1165 27.7821 97.2638 27.7472 97.2735 27.5824 cv
97.289 27.3885 97.1455 27.3032 97.1474 27.1209 cv
cp
93.4403 27.8228 mo
93.4946 27.8383 93.5489 27.8558 93.6032 27.8713 cv
93.7448 27.9547 94.2488 28.4355 94.2624 28.5867 cv
94.2798 28.7476 93.8514 29.0482 93.7157 29.0773 cv
93.5993 29.1005 93.5682 28.9842 93.5334 28.9008 cv
93.3996 28.5693 93.3027 28.2047 93.4403 27.8228 cv
cp
93.8902 25.4264 mo
93.8902 25.3973 93.8902 25.3682 93.8902 25.3391 cv
93.9464 25.3236 94.0045 25.3062 94.0646 25.2927 cv
94.4252 25.2422 94.6598 25.1879 94.9604 25.025 cv
95.0554 25.0522 95.2027 25.0522 95.2609 25.1452 cv
95.4238 25.3993 94.6618 25.9188 94.4388 25.8956 cv
94.1907 25.8665 94.0627 25.5718 93.8902 25.4264 cv
cp
93.2212 25.9712 mo
93.2232 25.9712 93.4307 25.7191 93.5101 25.6843 cv
93.5101 25.6745 93.5101 25.6629 93.5101 25.6532 cv
93.8766 25.8898 94.1693 26.3124 93.7932 26.6983 cv
93.7195 26.772 93.5993 26.8747 93.4966 26.8922 cv
93.1573 26.9426 93.3007 26.5257 93.2949 26.3474 cv
93.293 26.2136 93.2523 26.0895 93.2212 25.9712 cv
cp
95.2241 29.6551 mo
95.2143 29.6551 95.2066 29.6551 95.197 29.6551 cv
95.197 29.7055 95.0903 29.6744 95.0534 29.6667 cv
94.6172 29.5737 94.1441 29.4612 94.5067 28.928 cv
94.5765 28.9376 94.6366 28.9396 94.6889 28.9822 cv
94.7898 29.0579 94.8208 29.1723 94.8945 29.2673 cv
95.005 29.4088 95.1736 29.4786 95.2241 29.6551 cv
cp
95.0941 28.071 mo
94.9818 28.166 94.8343 28.3367 94.6793 28.3463 cv
94.5591 28.356 94.5009 28.2707 94.4234 28.2028 cv
94.2334 28.0361 94.0957 27.6968 94.1596 27.4273 cv
94.2062 27.3458 94.245 27.2644 94.2895 27.1829 cv
94.3691 26.9484 94.3361 26.9097 94.5184 26.7293 cv
94.7665 26.8456 95.482 27.373 95.4083 27.7104 cv
95.3772 27.8519 95.197 27.9799 95.0941 28.071 cv
cp
95.4238 28.5576 mo
95.4161 28.4433 95.3966 28.3017 95.4393 28.1951 cv
95.4742 28.104 95.5654 28.0613 95.639 28.009 cv
95.734 28.0147 95.8097 28.0186 95.8813 28.0652 cv
95.9647 28.1176 96.5483 28.6798 96.5599 28.7419 cv
96.5988 28.961 96.0927 29.2924 95.9182 29.3312 cv
95.8368 29.3467 95.7922 29.2712 95.7379 29.2362 cv
95.672 29.1936 95.5944 29.1819 95.5363 29.116 cv
95.3889 28.9532 95.4315 28.7787 95.4238 28.5576 cv
cp
89.4269 42.5214 mo
89.4481 42.2713 89.4656 42.0192 89.487 41.7691 cv
89.4986 41.1641 89.5102 40.5282 89.5219 39.9466 cv
89.5296 39.648 89.4152 39.3921 89.4269 39.1089 cv
89.454 38.7115 89.4792 38.3179 89.5063 37.9224 cv
89.5102 37.4512 89.5142 36.9781 89.518 36.5051 cv
89.5219 35.6985 89.5567 34.9172 89.5606 34.1358 cv
89.5606 33.9341 89.5142 33.4087 89.6033 33.273 cv
89.6944 33.1373 89.9194 33.1586 90.057 33.0966 cv
90.5223 33.1023 90.9819 33.1043 91.4453 33.1102 cv
91.7729 33.1256 92.1258 33.1896 92.4321 33.2652 cv
92.6337 33.304 92.8335 33.3409 93.0332 33.3796 cv
93.2096 33.4397 93.3841 33.5018 93.5605 33.5618 cv
94.2236 33.81 94.8402 34.033 95.292 34.6438 cv
95.5324 34.9675 95.4761 35.4174 95.5168 35.844 cv
95.6293 37.1158 95.544 38.473 95.5168 39.7488 cv
95.4994 40.567 95.5072 41.3755 95.4761 42.2073 cv
95.4839 42.4981 95.4897 42.787 95.4955 43.0759 cv
95.4916 43.7526 95.4529 44.4351 95.4296 45.0981 cv
95.4122 45.5674 95.4025 46.0017 95.3443 46.4321 cv
95.292 46.8082 95.3093 47.1068 95.1252 47.4112 cv
95.1252 47.4209 95.1252 47.4306 95.1252 47.4403 cv
95.0612 47.4403 94.3477 46.8877 94.2255 46.814 cv
93.8727 46.6066 93.2523 46.3719 92.8432 46.2847 cv
92.4961 46.2091 92.1646 46.2246 91.8098 46.1645 cv
91.5286 46.118 90.7802 45.961 90.5049 46.0831 cv
90.437 46.0928 90.373 46.1005 90.3013 46.1141 cv
90.2044 46.1103 90.0938 46.1257 90.0124 46.1664 cv
89.9135 46.1645 89.803 46.1858 89.7235 46.2246 cv
89.6169 46.2246 89.5102 46.2246 89.4056 46.2208 cv
89.4074 45.9474 89.456 45.6992 89.4579 45.4413 cv
89.4599 45.2183 89.3842 45.0186 89.3861 44.7744 cv
89.4056 44.5242 89.4269 44.2761 89.4443 44.0259 cv
89.456 43.516 89.4172 43.0352 89.4269 42.5214 cv
cp
87.6838 44.5068 mo
87.6897 44.245 87.74 43.9697 87.742 43.6983 cv
87.7245 43.3977 87.7071 43.1011 87.6916 42.8006 cv
87.6858 42.3061 87.744 41.8311 87.7536 41.3541 cv
87.7381 41.0653 87.7245 40.7764 87.709 40.4855 cv
87.7168 40.2646 87.7265 40.0435 87.7343 39.8225 cv
87.7168 39.6014 87.6993 39.3785 87.6838 39.1555 cv
87.6858 38.7968 87.7904 38.4808 87.8002 38.1162 cv
87.7847 37.9126 87.7691 37.711 87.7517 37.5074 cv
87.7595 37.3931 87.7652 37.2767 87.773 37.1604 cv
87.7886 36.7299 87.8409 36.3247 87.8429 35.8904 cv
87.8447 35.5938 87.7963 35.144 87.8738 34.8822 cv
87.9514 34.6147 88.7424 33.717 89.0138 33.6123 cv
89.0138 33.6025 89.0138 33.5929 89.0138 33.5832 cv
89.072 33.8061 89.0391 34.1047 89.0158 34.3336 cv
88.9867 34.6127 88.9693 34.9036 88.979 35.2022 cv
88.9945 35.3922 89.01 35.5879 89.0274 35.7799 cv
89.0294 36.1463 89.0313 36.5128 89.0333 36.8792 cv
89.0217 37.044 89.0061 37.2069 88.9945 37.3698 cv
89.0022 37.5637 89.01 37.7576 89.0158 37.9476 cv
89.0061 38.4633 88.977 39.045 88.9926 39.5705 cv
89.0061 40.1405 88.9286 40.7434 88.9441 41.3038 cv
88.9615 41.5132 88.979 41.7264 88.9945 41.9416 cv
88.9965 42.374 89.0003 42.8083 89.0022 43.2407 cv
88.9887 43.4443 88.9713 43.6459 88.9558 43.8495 cv
88.9558 44.1869 88.9518 44.5242 88.9518 44.8597 cv
88.9479 45.2668 89.0042 45.9842 88.8879 46.3274 cv
88.851 46.434 88.7172 46.5038 88.6552 46.5969 cv
88.5622 46.7267 88.4672 46.8548 88.374 46.9846 cv
88.281 47.0739 88.186 47.163 88.0949 47.2522 cv
87.9979 47.4364 87.901 47.6206 87.8079 47.8028 cv
87.7963 47.8028 87.7886 47.8028 87.7788 47.8028 cv
87.7788 47.8145 87.7788 47.8223 87.7788 47.8319 cv
87.7691 47.8319 87.7575 47.8319 87.7497 47.8319 cv
87.7517 47.2891 87.6683 46.6996 87.6625 46.1528 cv
87.6567 45.831 87.7129 45.482 87.7304 45.1718 cv
87.742 44.9353 87.6799 44.7297 87.6838 44.5068 cv
cp
100.994 48.1673 mo
100.773 48.1654 100.473 48.1247 100.3 48.2198 cv
100.096 48.2198 99.8153 48.0957 99.6331 48.1868 cv
99.5671 48.1964 99.4992 48.2062 99.4314 48.2158 cv
99.2026 48.2139 98.9235 48.179 98.7354 48.2701 cv
98.6365 48.2701 98.526 48.2876 98.4485 48.3264 cv
98.2526 48.3264 97.8415 48.2778 97.6942 48.3496 cv
97.6089 48.3593 97.5217 48.3671 97.4344 48.3768 cv
97.3472 48.3884 97.2618 48.3962 97.1726 48.4059 cv
97.035 48.4039 96.8527 48.4233 96.7693 48.5202 cv
96.719 48.5202 96.7577 48.6714 96.7597 48.7219 cv
96.7713 49.2357 96.3932 49.6991 95.8639 49.6952 cv
95.4374 49.6952 95.102 49.385 95.0186 48.9952 cv
94.9914 48.8614 95.0263 48.6753 94.9411 48.5687 cv
94.9041 48.5221 94.8343 48.493 94.7723 48.5066 cv
94.5707 48.497 94.3691 48.4853 94.1655 48.4757 cv
94.117 48.4853 94.0705 48.493 94.02 48.5048 cv
93.545 48.5009 93.1243 48.4427 92.6318 48.4388 cv
92.5077 48.4369 92.3274 48.4136 92.2285 48.4659 cv
91.8796 48.4621 91.548 48.433 91.1874 48.431 cv
91.0167 48.4291 90.8015 48.4116 90.6678 48.4853 cv
90.1578 48.4814 89.6382 48.4427 89.1322 48.4466 cv
88.9538 48.4485 88.7036 48.4039 88.5544 48.4737 cv
88.3993 48.4737 88.2461 48.4698 88.122 48.4136 cv
88.122 48.2934 88.1879 48.1907 88.2286 48.0937 cv
88.3702 47.7485 88.4865 47.6458 88.7657 47.4073 cv
88.917 47.2716 89.0469 47.1068 89.2156 47.0001 cv
89.9562 46.5174 91.1195 46.5212 92.0327 46.7132 cv
92.2091 46.7617 92.3837 46.8121 92.5582 46.8625 cv
93.1418 46.971 93.6671 47.0409 94.1635 47.3317 cv
94.4854 47.5198 94.7529 47.7854 95.0515 48.0278 cv
95.1272 48.0782 95.2066 48.1286 95.2842 48.1771 cv
95.4199 48.2818 95.5634 48.5009 95.7534 48.497 cv
96.0248 48.497 96.1954 48.148 96.397 48.0025 cv
96.622 47.8396 96.8431 47.6632 97.0931 47.543 cv
97.7756 47.2153 98.4562 46.8741 99.2085 46.688 cv
99.4799 46.624 99.7494 46.5601 100.021 46.496 cv
100.176 46.4708 100.345 46.4864 100.484 46.4301 cv
100.715 46.436 100.944 46.4398 101.174 46.4437 cv
101.558 46.5038 101.958 46.6919 102.256 46.9187 cv
102.39 47.066 102.52 47.2115 102.654 47.3608 cv
102.865 47.5896 103.096 47.8319 103.133 48.1499 cv
103.123 48.1499 103.113 48.148 103.102 48.148 cv
103.102 48.2023 102.873 48.179 102.815 48.179 cv
102.208 48.1732 101.601 48.1712 100.994 48.1673 cv
cp
92.0191 57.5127 mo
91.8582 57.5786 91.6139 57.5379 91.4258 57.5398 cv
91.4278 57.282 92.4864 56.5161 92.7035 56.3028 cv
92.8471 56.3028 92.9925 56.3028 93.1378 56.3048 cv
93.1378 56.5161 92.2285 57.4235 92.0191 57.5127 cv
cp
96.4281 57.5961 mo
96.4281 57.5146 97.0563 56.6014 97.1494 56.4889 cv
97.1959 56.4308 97.2657 56.3862 97.3317 56.3571 cv
97.3317 56.3494 97.3317 56.3396 97.3317 56.328 cv
97.477 56.328 97.6224 56.33 97.7679 56.33 cv
97.766 56.5103 97.0815 57.5185 96.9012 57.5941 cv
96.7752 57.6504 96.6045 57.6232 96.4552 57.6271 cv
96.4552 57.6174 96.4552 57.6077 96.4552 57.5961 cv
96.4475 57.5961 96.4359 57.5961 96.4281 57.5961 cv
cp
98.937 56.2932 mo
99.0766 56.4871 99.9026 57.4041 99.8541 57.5766 cv
99.8405 57.6174 99.7901 57.6232 99.7514 57.6309 cv
99.5012 57.6348 99.2511 57.6387 99.001 57.6407 cv
98.5589 57.6387 98.1149 57.6368 97.6729 57.6329 cv
97.6729 57.6252 97.6729 57.6155 97.6749 57.6038 cv
97.6631 57.6038 97.6515 57.6038 97.6438 57.6038 cv
97.6438 57.5069 97.7213 57.4216 97.762 57.3459 cv
97.8997 57.0842 98.4445 56.3455 98.4077 56.078 cv
98.398 55.9887 98.3321 55.9228 98.2506 55.8937 cv
97.9017 55.7755 97.4829 55.8762 97.1029 55.8627 cv
96.9012 55.855 96.4417 55.7541 96.2652 55.8317 cv
95.8852 55.8298 94.5629 55.6437 94.4078 55.9771 cv
94.3691 56.0566 94.4234 56.1496 94.4563 56.2175 cv
94.6095 56.5239 94.8479 56.803 95.0534 57.0823 cv
95.164 57.2529 95.2764 57.4235 95.387 57.5922 cv
95.387 57.6019 95.387 57.6096 95.387 57.6213 cv
95.3579 57.6309 95.3288 57.6407 95.2997 57.6504 cv
94.4854 57.6464 93.6769 57.6116 92.8703 57.6077 cv
92.8703 57.5884 92.8703 57.5689 92.8703 57.5495 cv
92.8975 57.5495 94.055 56.1516 94.1829 55.9946 cv
94.1829 55.9558 94.1732 55.9558 94.15 55.9364 cv
94.0104 55.9189 93.8611 55.8996 93.7195 55.8802 cv
93.4771 55.8685 93.2368 55.8569 92.9944 55.8453 cv
92.3041 55.8298 91.5751 55.8685 90.916 55.8026 cv
90.916 55.7231 91.9009 54.7731 92.0327 54.6354 cv
92.8703 53.7551 93.7448 52.9099 94.6191 52.047 cv
94.9216 51.7388 95.2202 51.4324 95.5207 51.1261 cv
95.6177 51.0311 95.7068 50.9283 95.829 50.8876 cv
95.829 50.8682 95.829 50.8488 95.8309 50.8275 cv
96.0248 50.9263 96.1954 51.1261 96.3545 51.287 cv
96.6162 51.5565 96.876 51.826 97.1358 52.0936 cv
97.3006 52.2467 97.4674 52.3999 97.6322 52.555 cv
98.3747 53.3286 99.1678 54.0615 99.9258 54.8293 cv
100.24 55.1434 100.647 55.4672 100.891 55.8298 cv
100.835 55.8394 100.777 55.8472 100.719 55.8569 cv
100.48 55.8569 100.236 55.853 99.9937 55.853 cv
99.9064 55.8491 99.7901 55.822 99.7087 55.853 cv
99.3771 55.8491 98.9874 55.8065 98.7218 55.9305 cv
98.7199 56.0566 98.8692 56.1962 98.937 56.2932 cv
cp
101.882 59.9692 mo
101.882 59.9906 101.882 60.0081 101.882 60.0274 cv
101.872 60.0274 101.863 60.0274 101.853 60.0274 cv
101.853 59.977 101.675 59.9983 101.622 59.9983 cv
101.165 59.9983 100.732 60.0197 100.261 60.0197 cv
100.056 60.0158 99.7707 59.977 99.5962 60.0449 cv
99.4237 60.0429 99.1949 60.0119 99.0456 60.0681 cv
98.5163 60.0661 98.0122 60.0623 97.4848 60.0274 cv
97.2502 60.0119 96.9303 59.9052 96.7034 59.9983 cv
96.3156 59.9983 95.9356 59.9673 95.5479 59.9809 cv
95.4625 59.9809 95.3579 59.9556 95.2881 59.9906 cv
95.069 59.9886 94.5843 59.9033 94.4175 59.9847 cv
94.2895 59.9847 94.148 59.9692 94.0414 60.0158 cv
93.6769 60.0081 93.3085 60.0061 92.9439 60.0022 cv
92.7268 59.9886 92.4825 59.9809 92.2498 59.9711 cv
92.1723 59.9711 92.0948 59.9731 92.0172 59.9731 cv
91.9319 59.9809 91.8466 59.9906 91.7574 60.0002 cv
91.3308 59.9983 90.9857 60.1011 90.7802 59.7327 cv
90.7628 59.6978 90.724 59.6163 90.7511 59.5718 cv
90.8655 59.3702 93.0952 59.5427 93.4655 59.5466 cv
94.0414 59.5485 94.5552 59.469 95.1175 59.4709 cv
95.8677 59.4748 96.6647 59.5311 97.4286 59.533 cv
97.8183 59.5349 98.2449 59.5233 98.6462 59.5097 cv
99.5574 59.4845 100.502 59.5291 101.392 59.533 cv
101.394 59.5233 101.394 59.5156 101.394 59.5059 cv
101.44 59.5059 101.444 59.248 101.444 59.1879 cv
101.448 58.6082 101.459 58.0052 101.463 57.3944 cv
101.465 56.9795 101.452 56.553 101.525 56.1787 cv
101.997 56.4269 101.94 57.0221 101.956 57.5418 cv
101.962 57.8656 101.985 58.2359 101.973 58.5829 cv
101.956 58.7672 101.938 58.9493 101.921 59.1316 cv
101.905 59.4089 101.985 59.7191 101.882 59.9692 cv
cp
103.93 40.3169 mo
103.924 40.505 103.871 40.6543 103.873 40.8384 cv
103.889 40.9548 103.906 41.0691 103.92 41.1836 cv
103.922 41.4744 103.92 41.7632 103.92 42.0502 cv
103.899 42.4283 103.877 42.8064 103.856 43.1806 cv
103.852 43.5335 103.916 43.8572 103.906 44.2218 cv
103.899 44.468 103.827 44.6793 103.821 44.912 cv
103.856 45.1369 103.887 45.3599 103.916 45.581 cv
103.957 45.9163 103.906 46.2944 103.897 46.6201 cv
103.885 46.9303 103.916 47.2406 103.804 47.4887 cv
103.763 47.4887 103.724 47.4887 103.685 47.4887 cv
103.697 47.4132 103.707 47.3356 103.714 47.26 cv
103.672 46.8605 103.633 46.4049 103.639 45.9822 cv
103.639 45.387 103.643 44.8615 103.646 44.278 cv
103.654 44.1422 103.658 44.0065 103.666 43.8727 cv
103.658 43.5431 103.575 43.2077 103.571 42.8879 cv
103.569 42.7463 103.612 42.6397 103.621 42.5136 cv
103.646 42.153 103.672 41.7109 103.621 41.358 cv
103.598 41.2184 103.534 41.1273 103.431 41.0382 cv
103.424 41.0382 103.414 41.0382 103.406 41.0382 cv
103.406 41.0866 103.321 41.1332 103.305 41.1855 cv
103.257 41.3425 103.257 41.5229 103.255 41.7012 cv
103.253 42.0405 103.245 42.3721 103.29 42.6823 cv
103.315 42.8704 103.381 43.0779 103.381 43.2911 cv
103.356 43.4481 103.332 43.6033 103.309 43.7565 cv
103.288 43.9872 103.266 44.2179 103.243 44.4486 cv
103.255 44.6793 103.268 44.912 103.278 45.1427 cv
103.276 45.6294 103.259 46.1683 103.228 46.6453 cv
103.096 46.6453 103.076 46.4398 103.047 46.3487 cv
103.001 46.1955 103.036 46.0307 103.018 45.866 cv
102.985 45.5654 103.005 45.2261 103.007 44.912 cv
103.009 44.6212 103.011 44.3322 103.014 44.0434 cv
103.034 43.6731 103.098 43.326 103.042 42.9731 cv
103.026 42.8723 103.001 42.7017 102.888 42.6726 cv
102.834 42.6571 102.799 42.6707 102.782 42.7191 cv
102.681 43.0002 102.743 43.3686 102.749 43.6653 cv
102.762 44.1365 102.704 44.5979 102.689 45.0535 cv
102.677 45.3308 102.702 45.6197 102.625 45.8621 cv
102.617 45.8621 102.605 45.8621 102.596 45.8621 cv
102.596 45.8698 102.596 45.8814 102.596 45.8892 cv
102.586 45.8892 102.576 45.8892 102.568 45.8892 cv
102.568 45.8814 102.568 45.8698 102.568 45.8621 cv
102.501 45.8621 102.491 45.7147 102.487 45.6585 cv
102.462 45.2299 102.508 44.7704 102.516 44.3575 cv
102.526 43.9193 102.497 43.4753 102.499 43.0584 cv
102.501 42.7559 102.547 42.4477 102.57 42.1607 cv
102.576 41.8214 102.584 41.4841 102.594 41.1486 cv
102.603 39.4599 102.528 37.8332 102.671 36.1754 cv
102.693 35.9079 102.644 35.6229 102.63 35.365 cv
102.617 35.1207 102.632 34.8415 102.652 34.6108 cv
102.667 34.4111 102.662 34.2502 102.749 34.0931 cv
102.824 34.2967 102.797 34.5449 102.801 34.7872 cv
102.805 35.237 102.759 35.7392 102.91 36.1192 cv
102.941 36.1192 102.968 36.1192 102.997 36.1192 cv
103.016 36.032 103.034 35.9447 103.053 35.8594 cv
103.078 35.3708 103.133 34.9327 103.15 34.4421 cv
103.16 34.4421 103.169 34.4421 103.179 34.4421 cv
103.179 34.4324 103.179 34.4227 103.179 34.4131 cv
103.21 34.4131 103.237 34.4131 103.268 34.4131 cv
103.282 34.4731 103.297 34.5293 103.313 34.5895 cv
103.327 34.702 103.336 34.8163 103.35 34.9345 cv
103.356 35.6054 103.294 36.3306 103.299 37.0149 cv
103.315 37.141 103.327 37.269 103.342 37.3931 cv
103.346 37.5792 103.251 37.7421 103.296 37.936 cv
103.327 38.0717 103.425 38.1085 103.565 38.0872 cv
103.575 37.9825 103.582 37.8758 103.594 37.7692 cv
103.59 37.6567 103.588 37.5404 103.586 37.4241 cv
103.606 37.2224 103.709 37.0499 103.714 36.8172 cv
103.726 36.2142 103.697 35.5919 103.757 35.0238 cv
103.784 35.0238 103.813 35.0238 103.844 35.0238 cv
103.844 35.0354 103.844 35.0413 103.844 35.0529 cv
103.895 35.0529 103.871 35.3147 103.879 35.3689 cv
103.887 35.5163 103.895 35.6597 103.902 35.8051 cv
103.924 36.0649 103.972 36.3422 103.976 36.6156 cv
103.982 37.0828 103.945 37.5424 103.941 38.031 cv
103.939 38.506 103.906 38.9635 103.906 39.4212 cv
103.912 39.7198 103.922 40.0183 103.93 40.3169 cv
cp
101.907 22.2815 mo
102 22.2137 102.103 22.1923 102.187 22.0993 cv
102.247 22.0101 102.305 21.9228 102.363 21.8337 cv
102.518 21.6069 102.679 21.4149 102.869 21.2171 cv
102.937 21.1551 103.005 21.093 103.073 21.031 cv
103.199 20.9631 103.416 20.9942 103.573 20.996 cv
103.904 20.998 104.23 20.9825 104.529 20.9515 cv
104.676 20.936 104.81 20.9437 104.934 20.8894 cv
105.155 20.8933 105.376 20.8972 105.597 20.901 cv
105.847 20.9301 106.113 20.9903 106.378 20.9903 cv
106.613 20.9942 106.816 20.9049 107.043 20.9127 cv
107.121 20.9263 107.198 20.9379 107.278 20.9496 cv
107.553 20.9825 107.904 20.9825 108.145 20.9088 cv
108.145 20.9165 108.145 20.9263 108.145 20.936 cv
108.154 20.936 108.162 20.936 108.174 20.936 cv
108.174 20.9747 108.181 20.9651 108.145 20.9651 cv
108.141 20.9806 108.133 20.9942 108.129 21.0116 cv
107.848 21.3839 107.439 21.6689 107.111 21.9849 cv
106.491 22.5898 105.874 23.1986 105.258 23.8055 cv
105.118 23.947 104.955 24.0595 104.818 24.201 cv
104.259 24.7691 103.759 25.3837 103.189 25.9286 cv
102.983 26.1282 102.776 26.3279 102.572 26.5277 cv
102.456 26.6246 102.344 26.7235 102.229 26.8204 cv
102.101 26.9736 101.973 27.1249 101.847 27.2761 cv
101.502 27.6406 101.138 27.9935 100.767 28.3385 cv
100.595 28.5422 100.424 28.7458 100.25 28.9493 cv
99.8676 29.3196 99.4857 29.688 99.1057 30.0603 cv
98.4542 30.6982 97.8124 31.3574 97.1552 31.9894 cv
96.9381 32.193 96.7481 32.4489 96.5095 32.6118 cv
96.5095 32.6216 96.5095 32.6312 96.5095 32.6409 cv
96.4999 32.6409 96.4902 32.6409 96.4804 32.6409 cv
96.4804 32.6332 96.4804 32.6216 96.4804 32.6118 cv
96.4708 32.6118 96.4611 32.6118 96.4495 32.6118 cv
96.4591 32.5246 96.4688 32.4393 96.4766 32.352 cv
96.4804 32.1523 96.4436 31.9507 96.4631 31.7452 cv
96.4882 31.6385 96.5134 31.5319 96.5367 31.4253 cv
96.5502 31.2255 96.4785 31.0607 96.5716 30.8901 cv
96.6297 30.7835 96.7636 30.7389 96.8488 30.6574 cv
97.0156 30.4907 97.1126 30.2794 97.3161 30.1475 cv
97.5274 30.006 97.7931 29.9653 98.0199 29.8548 cv
98.1653 29.781 98.2797 29.6589 98.4174 29.5717 cv
98.7257 29.372 99.0824 29.1994 99.3131 28.8815 cv
99.3751 28.7535 99.4392 28.6294 99.5012 28.5033 cv
99.5787 28.3929 99.6564 28.2824 99.7319 28.1718 cv
99.7921 28.0226 99.7862 27.8519 99.8289 27.6929 cv
99.889 27.4738 99.9976 27.2761 100.003 27.0201 cv
99.9762 26.7991 99.9491 26.5781 99.9219 26.3551 cv
99.891 26.0701 99.7319 25.8122 99.5613 25.597 cv
99.4876 25.5059 99.4004 25.4186 99.3558 25.312 cv
99.2996 25.312 99.3558 25.2364 99.3713 25.2034 cv
99.4178 25.1375 99.4644 25.0735 99.509 25.0095 cv
99.7087 24.7109 99.9142 24.3871 100.209 24.168 cv
100.36 24.0556 100.381 23.8966 100.494 23.7589 cv
100.633 23.598 100.837 23.5127 100.979 23.3441 cv
101.05 23.2491 101.126 23.1482 101.198 23.0532 cv
101.258 22.9407 101.287 22.8244 101.378 22.7294 cv
101.471 22.6305 101.574 22.586 101.675 22.5026 cv
101.752 22.4308 101.83 22.3553 101.907 22.2815 cv
cp
116.678 35.7606 mo
116.672 35.365 116.668 34.9327 116.652 34.5158 cv
116.637 34.382 116.619 34.2482 116.602 34.1125 cv
116.6 33.7868 116.658 33.4998 116.654 33.1877 cv
116.641 32.9473 116.625 32.7048 116.612 32.4645 cv
116.621 30.6012 116.548 28.8136 116.619 26.9658 cv
116.625 25.9557 116.631 24.9436 116.637 23.9334 cv
116.656 23.3828 116.616 22.7857 116.608 22.2544 cv
116.604 21.7115 116.616 21.219 116.619 20.6645 cv
116.608 20.6645 116.6 20.6645 116.588 20.6645 cv
116.588 20.6044 116.317 20.6413 116.27 20.6626 cv
115.731 20.6567 115.19 20.6471 114.653 20.6413 cv
114.304 20.6103 113.957 20.587 113.581 20.5889 cv
113.478 20.5889 113.351 20.5792 113.263 20.618 cv
113.131 20.6296 112.996 20.6451 112.86 20.6587 cv
112.668 20.6354 112.474 20.6103 112.28 20.5851 cv
111.606 20.5812 110.933 20.5753 110.256 20.5715 cv
110.066 20.5695 109.575 20.5094 109.448 20.5676 cv
109.1 20.5637 108.753 20.5599 108.406 20.554 cv
108.145 20.5365 107.768 20.4242 107.507 20.5269 cv
107.433 20.5365 107.356 20.5443 107.278 20.554 cv
107.028 20.5501 106.778 20.5482 106.526 20.5443 cv
106.153 20.5192 105.789 20.459 105.399 20.4551 cv
105.11 20.5404 104.695 20.4008 104.416 20.5094 cv
104.339 20.5192 104.259 20.5288 104.186 20.5365 cv
103.887 20.5365 103.586 20.5327 103.288 20.5327 cv
103.142 20.5327 102.943 20.5056 102.824 20.5599 cv
102.733 20.5599 102.607 20.5501 102.534 20.587 cv
102.285 20.5851 102.076 20.5327 101.839 20.5249 cv
101.244 20.523 100.647 20.5172 100.048 20.5133 cv
99.8308 20.5133 99.5109 20.4649 99.3267 20.5404 cv
99.2589 20.5482 99.191 20.5579 99.1231 20.5676 cv
99.0359 20.5753 98.9487 20.5851 98.8633 20.5947 cv
98.526 20.5928 97.9676 20.4163 97.6767 20.5308 cv
97.6186 20.5404 97.5624 20.5482 97.5042 20.5579 cv
97.3743 20.5579 97.2269 20.5599 97.1261 20.6142 cv
96.2633 20.6103 95.4043 20.6044 94.5804 20.587 cv
94.3632 20.5812 94.1305 20.5908 93.9173 20.5908 cv
93.8126 20.5889 93.6594 20.5482 93.5682 20.5947 cv
93.355 20.5908 93.1457 20.587 92.9323 20.5851 cv
92.6376 20.5637 91.9862 20.4474 91.7187 20.554 cv
91.5247 20.5521 91.3347 20.5482 91.1408 20.5463 cv
91.011 20.5365 90.8578 20.5017 90.7337 20.5482 cv
90.563 20.5482 90.3323 20.5153 90.1849 20.5753 cv
89.8399 20.5715 89.5374 20.5133 89.1729 20.5113 cv
89.0585 20.5113 88.9228 20.4978 88.8277 20.5385 cv
88.6126 20.5365 88.314 20.4901 88.1336 20.5637 cv
87.804 20.5617 87.4763 20.5599 87.1468 20.5599 cv
86.9936 20.5579 86.7823 20.5288 86.6582 20.5831 cv
86.2432 20.587 85.8284 20.5889 85.4153 20.5908 cv
85.1516 20.5715 84.6437 20.4745 84.4014 20.5715 cv
84.1396 20.5695 83.6898 20.4822 83.4746 20.5656 cv
82.9278 20.5637 82.4256 20.5308 81.8847 20.4939 cv
81.6947 20.4803 81.4019 20.4163 81.2197 20.4978 cv
81.113 20.4939 80.9908 20.4822 80.9017 20.5249 cv
80.6961 20.521 80.4131 20.4784 80.2367 20.5482 cv
80.0544 20.5463 79.7733 20.5017 79.6279 20.5715 cv
78.9454 20.5695 78.2202 20.5365 77.4912 20.5327 cv
77.276 20.5327 76.9755 20.4862 76.7952 20.5579 cv
76.5314 20.556 75.9557 20.5017 75.7539 20.5812 cv
75.6008 20.5792 75.3332 20.5365 75.2324 20.6335 cv
75.0696 20.7886 75.1587 21.5467 75.1646 21.793 cv
75.1587 21.9849 75.151 22.1769 75.1413 22.3707 cv
75.1471 22.5471 75.1742 22.7294 75.153 22.9194 cv
75.153 23.1889 75.1549 23.4584 75.1549 23.7298 cv
75.1278 24.4666 75.12 25.1743 75.116 25.9286 cv
75.1142 26.1341 75.0657 26.2853 75.058 26.4754 cv
75.0501 26.677 75.0928 26.8708 75.0909 27.0531 cv
75.0676 27.2372 75.0463 27.4215 75.023 27.6038 cv
75.0328 27.9895 75.0405 28.3754 75.0521 28.7593 cv
75.025 29.4146 74.9939 30.1203 75.0017 30.8145 cv
75.0114 31.084 75.021 31.3555 75.0308 31.6211 cv
75.0424 31.7103 75.054 31.7975 75.0637 31.8828 cv
75.0424 32.0476 75.023 32.2125 75.0017 32.3753 cv
75.0133 33.5541 74.9803 34.6786 74.9746 35.8749 cv
74.9707 36.3945 74.9998 36.8735 74.9881 37.3776 cv
74.9707 37.6276 74.9513 37.8797 74.9339 38.1298 cv
74.9396 38.506 74.9474 38.8841 74.9551 39.2602 cv
74.9513 40.0066 74.9183 40.7803 74.926 41.5441 cv
74.9396 41.8137 74.9494 42.0832 74.961 42.3527 cv
74.9455 42.6997 74.926 43.0468 74.9067 43.3938 cv
74.8989 44.7627 74.9222 46.1819 74.9339 47.5585 cv
74.9396 47.8998 74.8776 48.1868 74.8757 48.5416 cv
74.8737 48.908 74.8718 49.2725 74.8718 49.6389 cv
74.8796 49.8057 74.8853 49.9686 74.8931 50.1334 cv
74.866 51.3761 74.8253 52.5706 74.8175 53.8347 cv
74.8137 54.4047 74.7516 54.9049 74.7496 55.4517 cv
74.7496 55.6921 74.7516 55.9325 74.7516 56.173 cv
74.7632 56.2699 74.7787 56.3668 74.7903 56.4637 cv
74.7748 56.5627 74.7594 56.6577 74.7458 56.7546 cv
74.7322 57.03 74.7148 57.3246 74.7128 57.5922 cv
74.7108 57.9295 74.7187 58.3057 74.7341 58.6625 cv
74.7399 58.8234 74.7846 58.9572 74.7846 59.1259 cv
74.7826 59.2945 74.7322 59.4225 74.7303 59.5854 cv
74.7283 59.7831 74.7826 59.9285 74.7807 60.136 cv
74.771 61.6308 74.7884 63.0714 75.4671 64.2115 cv
75.9343 64.987 76.7932 65.4757 77.5746 65.8111 cv
78.1155 66.0457 78.672 66.3132 79.2595 66.4528 cv
79.6957 66.5556 80.1261 66.6098 80.5837 66.6874 cv
80.9308 66.7475 81.2914 66.8367 81.6558 66.8774 cv
82.0029 66.9045 82.3481 66.9298 82.6951 66.957 cv
83.4377 67.0461 84.1648 67.1779 84.9229 67.2691 cv
85.2777 67.2865 85.6345 67.3079 85.9893 67.3214 cv
86.1443 67.3543 86.2975 67.3893 86.4527 67.4242 cv
86.7318 67.432 87.013 67.432 87.2922 67.4397 cv
87.5888 67.4668 87.8893 67.492 88.1879 67.525 cv
88.3431 67.5308 88.4943 67.5347 88.6494 67.5405 cv
88.7851 67.5734 88.9208 67.6065 89.0565 67.6394 cv
89.4385 67.6975 89.7953 67.7383 90.1792 67.812 cv
90.2974 67.8507 90.4157 67.8915 90.5359 67.9341 cv
90.7976 68.0077 91.0362 68.0698 91.2862 68.1688 cv
91.6488 68.3006 92.0153 68.4324 92.3778 68.5642 cv
92.6434 68.6961 92.9052 68.8279 93.1728 68.9617 cv
93.3123 69.0567 93.4559 69.1536 93.5954 69.2486 cv
93.8863 69.4135 94.1752 69.5569 94.4407 69.774 cv
94.7665 70.0397 94.9895 70.3635 95.2764 70.6717 cv
95.3695 70.7765 95.4179 70.9103 95.544 70.984 cv
95.544 71.0305 95.5595 71.013 95.6022 71.013 cv
95.6022 70.9626 95.7476 70.8715 95.7863 70.8249 cv
95.8484 70.7299 95.9066 70.6349 95.9667 70.5419 cv
96.5988 69.619 97.541 68.9559 98.493 68.4479 cv
98.6404 68.3975 98.7858 68.3452 98.9351 68.2928 cv
99.1115 68.2211 99.2899 68.1454 99.4683 68.0698 cv
99.8212 67.9632 100.19 67.8972 100.562 67.8177 cv
101.258 67.6665 101.931 67.4863 102.625 67.3408 cv
102.797 67.3253 102.966 67.3156 103.137 67.304 cv
103.406 67.2555 103.672 67.1877 103.951 67.1625 cv
104.319 67.1489 104.686 67.1353 105.052 67.1236 cv
105.492 67.0927 105.94 66.9977 106.384 66.9686 cv
106.782 66.9356 107.175 66.922 107.567 66.8736 cv
107.918 66.8173 108.265 66.7591 108.612 66.7009 cv
108.726 66.6932 108.843 66.6855 108.955 66.6777 cv
109.494 66.5905 110.012 66.4606 110.526 66.3404 cv
110.702 66.2977 110.873 66.2784 111.041 66.2298 cv
111.536 66.0864 112.015 65.8905 112.495 65.7393 cv
112.901 65.6075 113.29 65.4834 113.668 65.3128 cv
113.998 65.1616 114.275 64.9502 114.58 64.7602 cv
115.126 64.4151 115.722 64.0505 116.063 63.4728 cv
116.212 63.2169 116.354 62.8387 116.4 62.5344 cv
116.41 62.3908 116.42 62.2474 116.431 62.102 cv
116.536 61.4777 116.521 60.7913 116.513 60.1399 cv
116.523 59.9072 116.53 59.6745 116.544 59.4418 cv
116.536 59.3177 116.53 59.1918 116.521 59.0677 cv
116.521 58.8175 116.521 58.5693 116.519 58.3173 cv
116.505 58.2204 116.493 58.1254 116.48 58.0284 cv
116.488 57.9412 116.499 57.8559 116.509 57.7686 cv
116.499 57.6814 116.488 57.5941 116.478 57.5088 cv
116.48 57.3362 116.528 57.1966 116.528 57.0182 cv
116.53 56.8244 116.48 56.6789 116.478 56.4928 cv
116.476 56.2718 116.53 56.1089 116.538 55.888 cv
116.552 55.1279 116.544 54.3795 116.573 53.633 cv
116.565 53.4488 116.559 53.2647 116.553 53.0843 cv
116.557 52.4174 116.561 51.7523 116.563 51.0892 cv
116.602 49.2764 116.579 47.3453 116.619 45.5324 cv
116.608 45.3424 116.6 45.1485 116.586 44.9585 cv
116.579 44.8985 116.571 44.8422 116.563 44.784 cv
116.573 44.6406 116.604 44.4797 116.598 44.3226 cv
116.586 44.214 116.575 44.1093 116.563 44.0046 cv
116.569 43.8553 116.608 43.7041 116.606 43.5413 cv
116.602 43.2058 116.523 42.9227 116.523 42.5854 cv
116.526 42.3566 116.559 42.1568 116.575 41.9494 cv
116.573 41.8427 116.569 41.7361 116.565 41.6314 cv
116.581 41.5248 116.596 41.4182 116.612 41.3134 cv
116.598 41.1875 116.583 41.0634 116.565 40.9354 cv
116.583 40.7939 116.598 40.6484 116.614 40.505 cv
116.608 40.3732 116.569 40.2664 116.569 40.1269 cv
116.573 39.3378 116.579 38.5448 116.583 37.7576 cv
116.583 37.5753 116.631 37.4358 116.637 37.2631 cv
116.643 37.0926 116.588 36.9646 116.594 36.8037 cv
116.608 36.7145 116.623 36.6272 116.637 36.5399 cv
116.65 36.2821 116.662 36.0204 116.678 35.7606 cv
cp
f
102.881 36.4663 mo
102.759 36.6485 102.797 36.8249 103.022 36.8715 cv
103.022 36.8618 103.022 36.8521 103.022 36.8424 cv
103.135 36.8424 103.001 36.5245 102.881 36.4663 cv
cp
f
102.993 38.2928 mo
102.966 38.1996 102.9 38.126 102.813 38.0833 cv
102.694 38.316 102.724 38.6262 102.722 38.9228 cv
102.724 39.2893 102.725 39.6557 102.727 40.0221 cv
102.733 40.2955 102.729 40.5961 102.737 40.8598 cv
102.737 40.9606 102.727 41.0925 102.766 41.1777 cv
102.766 41.3368 102.937 41.0943 102.949 41.0672 cv
103.129 40.6484 103.007 39.8089 103.009 39.33 cv
103.011 38.9791 103.078 38.6126 102.993 38.2928 cv
cp
f
103.445 38.6941 mo
103.278 38.9849 103.354 39.3319 103.352 39.679 cv
103.35 39.9523 103.315 40.1734 103.408 40.4022 cv
103.427 40.4022 103.445 40.4022 103.466 40.4022 cv
103.718 40.4041 103.732 39.0217 103.646 38.8239 cv
103.606 38.7406 103.536 38.7153 103.445 38.6941 cv
cp
f
96.6608 41.2262 mo
96.8217 41.2204 96.9554 41.0982 97.0835 41.0227 cv
97.444 40.8036 97.8338 40.6039 98.2235 40.4448 cv
98.4387 40.3596 98.6637 40.3111 98.8905 40.2412 cv
99.2201 40.1405 99.5594 40.0164 99.889 39.9078 cv
100.18 39.8089 100.482 39.7798 100.736 39.6112 cv
100.862 39.5278 100.944 39.394 100.94 39.2311 cv
100.934 39.0392 100.808 38.9674 100.639 38.9403 cv
100.639 38.948 100.639 38.9596 100.639 38.9694 cv
100.498 38.9674 100.253 39.0857 100.147 39.1691 cv
99.8289 39.1671 99.5148 39.363 99.2453 39.4755 cv
98.396 39.8205 97.4945 40.1366 96.7965 40.7841 cv
96.7151 40.8559 96.4126 41.0556 96.5522 41.1971 cv
96.5774 41.2243 96.6201 41.2282 96.6608 41.2262 cv
cp
f
93.9929 40.4003 mo
92.9557 39.8186 91.8524 39.233 90.5728 39.1439 cv
90.5728 39.1535 90.5728 39.1632 90.5728 39.173 cv
90.2897 39.171 90.1501 39.6305 90.3653 39.803 cv
90.5398 39.9427 90.9082 39.8903 91.1467 39.9019 cv
91.3212 39.9252 91.4917 39.9466 91.6643 39.9698 cv
92.118 40.03 92.5096 40.2064 92.911 40.3634 cv
93.2116 40.4798 93.5121 40.5903 93.8009 40.726 cv
94.0491 40.8423 94.8654 41.5093 95.067 41.4821 cv
95.0786 41.4782 95.0864 41.4763 95.0981 41.4744 cv
95.1193 41.4666 95.1388 41.4589 95.1582 41.453 cv
95.2143 41.453 95.162 41.3193 95.1446 41.2882 cv
94.9972 40.9955 94.2721 40.5593 93.9929 40.4003 cv
cp
f
100.475 42.4961 mo
99.9937 42.659 99.5051 42.7773 99.032 42.9634 cv
98.9099 43.0293 98.7897 43.0952 98.6676 43.1612 cv
98.2874 43.3066 97.9443 43.5005 97.5992 43.7157 cv
97.287 43.9096 96.9924 44.0763 96.7034 44.3265 cv
96.6317 44.3924 96.4533 44.5126 96.5211 44.6308 cv
96.6123 44.7995 96.8527 44.5688 96.9438 44.5165 cv
97.6806 44.0744 98.3942 43.7293 99.255 43.5315 cv
99.5109 43.4734 99.7591 43.3977 100.009 43.3454 cv
100.286 43.2834 100.6 43.2853 100.837 43.1457 cv
101.037 43.0236 101.097 42.6765 100.864 42.5543 cv
100.754 42.4981 100.612 42.4981 100.475 42.4961 cv
cp
f
94.9429 44.627 mo
94.7452 44.3885 94.3457 44.0977 94.0705 43.9756 cv
93.9541 43.9348 93.8398 43.8922 93.7273 43.8495 cv
93.2425 43.6227 92.7734 43.4501 92.2576 43.2853 cv
92.0831 43.2213 91.9087 43.1573 91.7341 43.0952 cv
91.5286 43.0429 91.3153 43.0236 91.106 42.979 cv
90.9042 42.9363 90.7317 42.8743 90.4933 42.8743 cv
90.4933 42.8859 90.4933 42.8936 90.4933 42.9033 cv
90.1171 42.9014 90.121 43.4074 90.3828 43.5529 cv
90.4196 43.5645 90.4544 43.5781 90.4894 43.5936 cv
90.8054 43.6634 91.1428 43.677 91.4705 43.7274 cv
91.7671 43.772 92.0598 43.8534 92.341 43.9135 cv
92.5348 43.9522 92.7268 43.9756 92.911 44.0337 cv
93.4423 44.2004 93.9716 44.3865 94.4679 44.6192 cv
94.6638 44.7104 94.8984 44.9256 95.1407 44.8945 cv
95.1407 44.7647 95.0186 44.7123 94.9429 44.627 cv
cp
f
60.117 33.5793 mo
60.8538 33.7422 61.0864 33.6491 61.2028 33.1275 cv
61.385 33.1663 li
60.9003 35.332 li
60.72 35.2913 li
60.817 34.8531 60.7471 34.5701 59.9037 34.382 cv
55.2447 33.3389 li
55.0469 34.225 li
54.8627 35.0451 55.0139 35.4717 55.6402 35.6675 cv
55.6013 35.8478 li
54.2054 35.5356 li
54.2442 35.3534 li
54.3392 35.2875 54.4129 35.2022 54.4885 35.0625 cv
54.5525 34.9307 54.6165 34.7427 54.6747 34.4886 cv
55.3881 31.2895 li
55.5083 30.7564 55.4986 30.4965 55.3823 30.2696 cv
55.4249 30.0778 li
56.8229 30.3899 li
56.7958 30.5062 li
56.2567 30.5101 55.8495 30.6303 55.6324 31.6017 cv
55.4249 32.5284 li
60.117 33.5793 li
cp
f
60.4466 26.6304 mo
62.0752 27.4254 li
62.7538 27.7569 63.0525 27.6929 63.287 27.212 cv
63.4538 27.2935 li
62.4611 29.3274 li
62.2943 29.246 li
62.5057 28.8136 62.4572 28.5363 61.7127 28.1718 cv
58.2072 26.4618 li
57.5403 26.136 57.2474 26.1631 57.0032 26.6634 cv
56.8365 26.582 li
57.8272 24.5481 li
57.994 24.6295 li
57.7787 25.0735 57.8544 25.3663 58.5698 25.7152 cv
60.1713 26.4966 li
61.6661 23.4313 li
60.0666 22.6519 li
59.3783 22.3164 59.0991 22.363 58.8645 22.8439 cv
58.6978 22.7624 li
59.6807 20.7499 li
59.8475 20.8313 li
59.611 21.3121 59.7622 21.5797 60.4311 21.9054 cv
63.9366 23.6155 li
64.6035 23.9412 64.906 23.8946 65.1406 23.4119 cv
65.3074 23.4934 li
64.3244 25.5078 li
64.1576 25.4264 li
64.3747 24.9824 64.3185 24.7245 63.572 24.36 cv
61.9415 23.5651 li
60.4466 26.6304 li
cp
f
67.8473 16.337 mo
67.729 16.4805 li
67.2346 16.2381 67.1202 16.2711 66.7072 16.7674 cv
65.7145 17.9579 li
67.4362 19.3926 li
67.6708 19.5885 67.8337 19.5807 68.0567 19.3131 cv
68.7566 18.4736 li
69.3421 17.7679 69.4566 17.5643 69.0648 16.7538 cv
69.1832 16.6104 li
69.8986 17.5779 li
67.0135 21.0446 li
66.8701 20.9263 li
67.1842 20.5482 67.2075 20.2826 66.5696 19.7494 cv
63.5643 17.2463 li
62.9652 16.75 62.6879 16.7461 62.3448 17.1571 cv
62.2013 17.0369 li
65.0902 13.5703 li
65.8949 14.241 li
65.8173 14.3341 li
65.1988 14.0026 65.0165 14.1364 64.5764 14.6637 cv
63.4208 16.05 li
65.4799 17.764 li
66.5967 16.4204 li
66.8701 16.0927 66.9185 15.9182 66.5599 15.5071 cv
66.6801 15.3637 li
67.8473 16.337 li
cp
f
79.5754 9.2834 mo
79.3952 10.1869 78.9841 10.7938 78.2609 11.2029 cv
76.9386 11.9474 75.88 11.3153 75.3487 10.3731 cv
73.8365 7.6877 li
73.4292 6.9645 73.1578 6.9296 72.7294 7.17 cv
72.6383 7.0091 li
74.6101 5.8981 li
74.7012 6.061 li
74.2533 6.313 74.1641 6.5748 74.5558 7.2709 cv
76.1087 10.0318 li
76.5819 10.8694 77.3865 11.2067 78.3094 10.6872 cv
78.9376 10.3323 79.3118 9.7061 79.3602 8.9014 cv
77.5125 5.6169 li
77.1557 4.9907 76.8902 4.8512 76.4423 5.0799 cv
76.3512 4.9171 li
78.2745 3.8333 li
78.3656 3.9961 li
77.908 4.254 77.8654 4.5545 78.2357 5.2098 cv
80.1474 8.6086 li
80.5527 9.3222 80.8358 9.3629 81.2565 9.1263 cv
81.3476 9.2892 li
80.004 10.0454 li
79.5754 9.2834 li
cp
f
89.5024 6.8075 mo
89.3222 6.8539 li
83.6975 2.6777 li
83.6742 2.6835 li
84.7659 6.9373 li
84.9229 7.552 85.2214 7.7129 85.7721 7.5714 cv
85.8186 7.7516 li
83.9767 8.2228 li
83.9302 8.0425 li
84.4401 7.9126 84.6418 7.6916 84.4168 6.8132 cv
83.5094 3.2671 li
83.3349 2.5904 83.0576 2.255 82.321 2.3752 cv
82.2763 2.1968 li
83.8313 1.7974 li
88.8297 5.5472 li
88.851 5.5414 li
87.9436 1.9972 li
87.74 1.2022 87.4763 1.0548 86.947 1.1906 cv
86.9005 1.0102 li
88.7327 .543 li
88.7774 .7213 li
88.186 .8745 88.0581 1.1673 88.2383 1.875 cv
89.5024 6.8075 li
cp
f
94.6056 5.1381 mo
94.6443 5.9019 94.8421 6.1211 95.3656 6.0959 cv
95.3734 6.282 li
93.1262 6.3944 li
93.1166 6.2083 li
93.6284 6.1812 93.8145 5.9757 93.7757 5.1788 cv
93.5818 1.2836 li
93.543 .4984 93.3589 .2986 92.8237 .3258 cv
92.8141 .1397 li
95.0632 .0291 li
95.0729 .2153 li
94.5493 .2405 94.3748 .4887 94.4136 1.2429 cv
94.6056 5.1381 li
cp
f
100.93 6.7085 mo
100.76 6.6853 li
99.5109 1.3941 li
99.319 .5973 99.2065 .285 98.6249 .1843 cv
98.6481 0 li
100.903 .3006 li
100.878 .4848 li
100.432 .4247 100.184 .6341 100.304 1.1479 cv
101.289 5.3553 li
103.243 1.6811 li
103.509 1.175 103.454 .828 102.89 .7523 cv
102.916 .5682 li
104.724 .8086 li
104.699 1.0045 li
104.234 .9424 103.838 1.2526 103.412 2.0572 cv
100.93 6.7085 li
cp
f
110.805 6.8287 mo
110.63 6.7648 li
110.69 6.218 110.621 6.1211 110.016 5.9001 cv
108.56 5.3669 li
107.792 7.4705 li
107.685 7.7575 107.747 7.9087 108.075 8.0289 cv
109.1 8.405 li
109.961 8.7191 110.192 8.7579 110.822 8.1143 cv
110.999 8.1802 li
110.33 9.1786 li
106.091 7.6295 li
106.155 7.455 li
106.617 7.6237 106.875 7.5559 107.16 6.7745 cv
108.505 3.1022 li
108.771 2.3733 108.682 2.1076 108.18 1.9234 cv
108.243 1.749 li
112.48 3.3001 li
112.121 4.2849 li
112.007 4.2442 li
112.11 3.5483 111.924 3.4222 111.276 3.1856 cv
109.583 2.5652 li
108.664 5.0799 li
110.307 5.681 li
110.708 5.8264 110.888 5.8109 111.154 5.3397 cv
111.328 5.4017 li
110.805 6.8287 li
cp
f
116.197 9.0177 mo
116.618 9.2931 li
117.575 9.9252 117.038 11.3367 117.232 13.165 cv
118.3 13.8688 li
118.401 13.7137 li
117.577 13.0797 118.384 11.1369 117.823 9.865 cv
118.741 10.1423 119.367 9.8631 119.745 9.2892 cv
120.202 8.595 120.082 7.5462 118.905 6.7725 cv
116.763 5.3591 li
116.662 5.5142 li
117.081 5.7915 117.17 6.0319 116.718 6.7164 cv
114.562 9.993 li
114.097 10.6949 113.822 10.6968 113.42 10.4331 cv
113.319 10.5863 li
115.198 11.8252 li
115.301 11.6701 li
114.873 11.387 114.834 11.0885 115.254 10.4486 cv
116.197 9.0177 li
cp
117.917 6.408 mo
118.463 6.7687 li
119.266 7.298 119.462 8.1316 119.004 8.8258 cv
118.609 9.4268 117.866 9.8011 116.982 9.2193 cv
116.342 8.7986 li
117.917 6.408 li
cp
f
126.17 14.6909 mo
126.038 14.5591 li
126.632 13.8378 126.428 13.1165 125.986 12.6647 cv
125.525 12.1974 124.937 12.116 124.524 12.5233 cv
123.7 13.3356 124.602 14.687 124.592 15.953 cv
124.586 16.5716 124.383 16.9264 124.088 17.2172 cv
123.386 17.9055 122.258 17.8977 121.567 17.1959 cv
121.1 16.7228 120.943 16.0946 120.798 15.9473 cv
120.722 15.8697 120.614 15.8678 120.458 15.9453 cv
120.329 15.8116 li
121.534 14.625 li
121.664 14.7568 li
120.848 15.5769 121.242 16.5231 121.624 16.9128 cv
122.153 17.4479 122.816 17.5003 123.301 17.0252 cv
124.07 16.2672 123.25 14.7141 123.258 13.7253 cv
123.262 13.1844 123.466 12.7694 123.815 12.4244 cv
124.501 11.7496 125.449 11.7806 126.163 12.5038 cv
126.632 12.9789 126.682 13.3744 126.851 13.545 cv
126.921 13.6148 126.952 13.6148 127.091 13.5392 cv
127.213 13.6633 li
126.17 14.6909 li
cp
f
126.702 21.3878 mo
126.071 21.824 125.99 22.1071 126.287 22.5375 cv
126.135 22.6441 li
124.852 20.7944 li
125.005 20.6878 li
125.298 21.1105 125.571 21.1608 126.227 20.7053 cv
129.433 18.4833 li
130.081 18.0354 130.151 17.7736 129.846 17.3336 cv
130 17.2288 li
131.281 19.0785 li
131.128 19.1833 li
130.829 18.7528 130.527 18.7373 129.906 19.1658 cv
126.702 21.3878 li
cp
f
129.817 27.0686 mo
129.131 27.3827 129.001 27.5979 129.224 28.0846 cv
129.055 28.1621 li
128.132 26.1457 li
128.301 26.0681 li
128.487 26.4754 128.716 26.6595 129.503 26.3008 cv
133.842 24.3096 li
133.462 23.4855 li
133.115 22.7217 132.735 22.4735 132.117 22.6984 cv
132.039 22.5297 li
133.342 21.9326 li
133.42 22.1012 li
133.385 22.2137 133.377 22.3242 133.398 22.4812 cv
133.431 22.6248 133.493 22.8128 133.602 23.0512 cv
134.967 26.0313 li
135.194 26.5277 135.359 26.7293 135.589 26.8398 cv
135.671 27.0182 li
134.37 27.6134 li
134.319 27.5049 li
134.746 27.1772 134.998 26.834 134.583 25.9305 cv
134.188 25.0657 li
129.817 27.0686 li
cp
f
132.285 34.6786 mo
131.549 34.8357 131.345 35.0354 131.458 35.5608 cv
131.275 35.5997 li
130.798 33.368 li
130.979 33.3273 li
131.079 33.7984 131.235 34.0543 132.111 33.8682 cv
134.034 33.4552 li
135.785 31.7161 li
136.367 31.146 136.466 30.9347 136.384 30.45 cv
136.568 30.4112 li
137.078 32.8038 li
136.898 32.8425 li
136.753 32.1698 136.501 32.1446 136.181 32.4703 cv
134.581 34.0757 li
136.326 34.7193 li
136.873 34.9152 137.327 34.8395 137.216 34.3277 cv
137.398 34.289 li
137.757 35.9661 li
137.575 36.0049 li
137.443 35.5415 137.28 35.4097 136.671 35.1808 cv
134.209 34.2676 li
132.285 34.6786 li
cp
f
57.7749 49.6312 mo
55.9872 50.145 54.9965 51.954 55.5142 53.7494 cv
56.0299 55.5448 57.8349 56.5587 59.6207 56.0469 cv
61.3734 55.5428 62.3429 53.7397 61.8309 51.954 cv
61.3016 50.1159 59.5605 49.1174 57.7749 49.6312 cv
cp
58.0289 50.5599 mo
59.7719 50.0558 61.197 50.6259 61.6061 52.0412 cv
61.9609 53.2821 61.1911 54.5947 59.3007 55.1376 cv
57.8428 55.5583 56.1772 55.1841 55.741 53.6718 cv
55.3513 52.3165 56.2742 51.064 58.0289 50.5599 cv
cp
f
60.2682 61.786 mo
59.6032 62.164 59.4985 62.4394 59.7583 62.895 cv
59.5955 62.9862 li
58.4787 61.0317 li
58.6415 60.9406 li
58.9014 61.3963 59.1825 61.4486 59.8572 61.0647 cv
63.2444 59.1297 li
63.9288 58.74 64.0161 58.4763 63.7563 58.0207 cv
63.9172 57.9295 li
66.0442 61.658 li
65.0767 62.2106 li
65.0069 62.0865 li
65.5944 61.5746 65.5419 61.3924 65.2046 60.8049 cv
64.4155 59.4186 li
62.1373 60.7196 li
62.9458 62.1311 li
63.1785 62.5401 63.4732 62.5731 63.9366 62.3715 cv
64.0238 62.5228 li
62.4941 63.3933 li
62.4088 63.2421 li
62.7868 63.0016 62.9051 62.6817 62.6879 62.3017 cv
61.8717 60.8708 li
60.2682 61.786 li
cp
f
72.2737 73.8573 mo
72.1302 73.7371 li
72.3687 73.2408 72.3338 73.1284 71.8356 72.7192 cv
70.6373 71.7362 li
69.2141 73.4657 li
69.0203 73.7023 69.03 73.8651 69.2995 74.0861 cv
70.1448 74.7802 li
70.8545 75.362 71.06 75.4743 71.8665 75.0769 cv
72.01 75.1952 li
71.0502 75.9184 li
67.5603 73.0566 li
67.6786 72.9132 li
68.0586 73.2234 68.3243 73.2446 68.8496 72.6029 cv
71.3314 69.5783 li
71.822 68.9792 71.8258 68.6999 71.4129 68.3606 cv
71.5292 68.2152 li
75.0192 71.077 li
74.3541 71.8875 li
74.261 71.8119 li
74.5887 71.1894 74.453 71.0092 73.9217 70.571 cv
72.5277 69.429 li
70.8312 71.4997 li
72.1806 72.6068 li
72.5102 72.8782 72.6847 72.9228 73.0919 72.5641 cv
73.2354 72.6824 li
72.2737 73.8573 li
cp
f
76.6284 78.1074 mo
76.3027 78.8112 76.0216 78.9236 75.5659 78.7123 cv
75.4883 78.881 li
78.1873 80.1237 li
80.4208 81.1533 81.9312 80.2498 82.5885 78.8208 cv
83.271 77.3415 82.9103 75.4084 80.7388 74.4061 cv
78.1097 73.1943 li
78.0302 73.363 li
78.5072 73.582 78.575 73.8787 78.259 74.565 cv
76.6284 78.1074 li
cp
79.4068 74.059 mo
80.4887 74.5573 li
82.2841 75.3852 82.3383 77.0681 81.7121 78.4292 cv
80.9986 79.9764 79.7054 80.56 78.2977 79.9105 cv
77.7122 79.641 li
77.1868 79.3987 77.0666 79.1388 77.4737 78.2567 cv
79.4068 74.059 li
cp
f
87.6431 82.0568 mo
87.4763 82.8032 87.6102 83.067 88.122 83.1795 cv
88.0813 83.3616 li
85.8827 82.877 li
85.9234 82.6966 li
86.4236 82.8072 86.6582 82.6559 86.8307 81.8784 cv
87.6702 78.0686 li
87.839 77.2988 87.7129 77.0584 87.1895 76.944 cv
87.2282 76.7618 li
89.4269 77.2465 li
89.3881 77.4268 li
88.8763 77.3143 88.6436 77.5121 88.4807 78.2469 cv
87.6431 82.0568 li
cp
f
98.9642 84.0732 mo
98.778 84.0752 li
94.305 78.6851 li
94.2837 78.6851 li
94.3322 83.0766 li
94.338 83.7107 94.592 83.9356 95.1601 83.9298 cv
95.162 84.1159 li
93.26 84.1372 li
93.258 83.9511 li
93.7816 83.9452 94.0316 83.7786 94.022 82.8731 cv
93.9813 79.2125 li
93.9755 78.5145 93.7835 78.1229 93.0409 78.0647 cv
93.0389 77.8805 li
94.6463 77.8631 li
98.6094 82.6909 li
98.6326 82.6909 li
98.5919 79.0303 li
98.5822 78.212 98.3612 78.0065 97.8163 78.0124 cv
97.8144 77.8262 li
99.7028 77.8068 li
99.7048 77.991 li
99.094 77.9968 98.9001 78.2528 98.9079 78.9837 cv
98.9642 84.0732 li
cp
f
105.578 79.8174 mo
106.148 79.6623 li
107.21 79.3696 108.052 79.7844 108.294 80.6686 cv
108.538 81.5527 108.071 82.1247 107.458 82.2934 cv
106.966 82.4291 li
106.491 82.559 106.287 82.4 106.064 81.5896 cv
105.578 79.8174 li
cp
105.293 81.9153 mo
105.496 82.652 105.378 82.9216 104.872 83.0611 cv
104.922 83.2395 li
107.703 82.4756 li
108.841 82.1616 109.484 81.3724 109.234 80.4669 cv
109.011 79.6565 108.189 79.1349 107.208 79.1989 cv
107.202 79.1796 li
107.96 78.6754 108.222 78.1383 108.04 77.4772 cv
107.829 76.7056 106.989 76.1782 105.537 76.5776 cv
103.261 77.2038 li
103.309 77.3822 li
103.817 77.2426 104.048 77.3842 104.259 78.1539 cv
105.293 81.9153 li
cp
105.514 79.5867 mo
104.81 77.0254 li
105.411 76.8606 li
106.39 76.5911 107.001 77.0022 107.21 77.7603 cv
107.42 78.5203 107.02 79.1717 106.136 79.416 cv
105.514 79.5867 li
cp
f
118.244 76.789 mo
118.077 77.6963 117.676 78.311 116.961 78.7297 cv
115.648 79.4937 114.58 78.879 114.035 77.9445 cv
112.482 75.2843 li
112.063 74.565 111.792 74.5359 111.367 74.7841 cv
111.274 74.6232 li
113.226 73.4812 li
113.319 73.6421 li
112.877 73.9 112.79 74.1657 113.193 74.8559 cv
114.791 77.5935 li
115.276 78.4233 116.084 78.7472 116.999 78.212 cv
117.622 77.8495 117.988 77.2174 118.023 76.4127 cv
116.123 73.1574 li
115.759 72.535 115.491 72.3993 115.047 72.6339 cv
114.952 72.4749 li
116.858 71.3621 li
116.953 71.523 li
116.499 71.7866 116.46 72.0871 116.84 72.7386 cv
118.807 76.1065 li
119.217 76.8141 119.504 76.849 119.919 76.6067 cv
120.014 76.7676 li
118.684 77.5431 li
118.244 76.789 li
cp
f
122.996 70.4992 mo
123.349 70.1424 li
124.154 69.3262 125.433 70.127 127.268 70.2917 cv
128.163 69.3824 li
128.032 69.2526 li
127.248 69.937 125.501 68.7678 124.144 69.0703 cv
124.594 68.2249 124.443 67.5522 123.954 67.0713 cv
123.363 66.4877 122.31 66.4024 121.321 67.4068 cv
119.516 69.2331 li
119.65 69.365 li
120.003 69.0063 120.259 68.9656 120.84 69.5415 cv
123.634 72.2966 li
124.233 72.886 124.181 73.1574 123.844 73.4987 cv
123.975 73.6286 li
125.556 72.0271 li
125.422 71.8971 li
125.063 72.2636 124.761 72.2423 124.218 71.7052 cv
122.996 70.4992 li
cp
120.771 68.3063 mo
121.23 67.8391 li
121.905 67.1527 122.764 67.1236 123.355 67.7092 cv
123.869 68.2152 124.09 69.016 123.347 69.7702 cv
122.808 70.3151 li
120.771 68.3063 li
cp
f
133.278 61.786 mo
133.183 62.1349 132.648 63.116 132.501 63.3584 cv
131.068 65.7102 129.172 65.6288 127.94 64.8804 cv
126.046 63.7267 125.858 61.6406 126.661 60.324 cv
127.12 59.5679 127.549 59.4322 127.799 59.0231 cv
127.9 58.8543 127.9 58.7516 127.803 58.6159 cv
127.906 58.4491 li
129.482 59.4089 li
129.391 59.5582 li
128.287 59.0793 127.308 59.7211 126.864 60.452 cv
126.195 61.5513 126.649 62.9667 128.115 63.8586 cv
129.684 64.8145 131.407 64.5857 132.181 63.3157 cv
132.413 62.9337 132.633 62.3637 132.156 62.0749 cv
131.578 61.722 li
130.926 61.3245 130.601 61.3322 130.335 61.7704 cv
130.209 61.976 li
130.048 61.879 li
131.368 59.7133 li
131.527 59.8102 li
131.209 60.3338 131.376 60.6245 131.841 60.9115 cv
133.278 61.786 li
cp
f
133.106 54.5598 mo
134.847 55.0619 li
135.57 55.2714 135.853 55.1589 136 54.6451 cv
136.179 54.6974 li
135.552 56.8709 li
135.374 56.8166 li
135.508 56.3552 135.413 56.0896 134.616 55.8608 cv
130.868 54.7789 li
130.155 54.5733 129.872 54.651 129.714 55.186 cv
129.538 55.1337 li
130.166 52.9602 li
130.345 53.0126 li
130.207 53.4856 130.333 53.761 131.099 53.982 cv
132.809 54.4745 li
133.755 51.1997 li
132.043 50.7073 li
131.308 50.494 131.043 50.589 130.895 51.1028 cv
130.717 51.0504 li
131.337 48.8983 li
131.516 48.9507 li
131.367 49.4645 131.56 49.701 132.274 49.9084 cv
136.022 50.9904 li
136.735 51.1959 137.026 51.097 137.175 50.5832 cv
137.354 50.6355 li
136.731 52.7858 li
136.551 52.7334 li
136.689 52.2622 136.59 52.0179 135.791 51.7872 cv
134.05 51.285 li
133.106 54.5598 li
cp
f
57.4705 42.6377 mo
57.4705 42.9421 57.2223 43.1864 56.916 43.1845 cv
56.6135 43.1845 56.3672 42.9363 56.3692 42.6318 cv
56.3692 42.3275 56.6174 42.0832 56.9237 42.0832 cv
57.2281 42.0832 57.4724 42.3333 57.4705 42.6377 cv
cp
f
135.742 42.6474 mo
135.739 42.9518 135.49 43.1981 135.186 43.1961 cv
134.882 43.1942 134.637 42.946 134.639 42.6416 cv
134.641 42.3372 134.889 42.0929 135.192 42.0929 cv
135.496 42.0968 135.742 42.343 135.742 42.6474 cv
cp
f
10.1966 106.283 mo
7.8642 106.283 li
7.8642 118.103 li
7.8642 119.029 7.9768 119.655 8.2048 119.978 cv
8.4319 120.302 8.8731 120.464 9.5283 120.464 cv
9.5283 120.909 li
4.0894 120.909 li
4.0894 120.464 li
4.7655 120.464 5.2249 120.278 5.4684 119.906 cv
5.7111 119.535 5.8325 118.907 5.8325 118.024 cv
5.8325 106.283 li
3.604 106.283 li
2.5379 106.283 1.763 106.453 1.2776 106.794 cv
.7931 107.135 .5201 107.698 .4585 108.485 cv
0 108.485 li
0 104.959 li
.4585 104.959 li
.8694 105.344 1.6382 105.535 2.7658 105.535 cv
10.8259 105.535 li
11.9874 105.535 12.8004 105.344 13.2632 104.959 cv
13.7486 104.959 li
13.7486 108.485 li
13.447 108.485 li
13.2546 107.637 12.9113 107.058 12.4181 106.748 cv
11.9241 106.438 11.1839 106.283 10.1966 106.283 cv
cp
f
27.7772 118.021 mo
27.7772 113.556 li
19.4025 113.556 li
19.4025 118.021 li
19.4025 118.931 19.5308 119.567 19.7891 119.925 cv
20.0465 120.284 20.512 120.464 21.1846 120.464 cv
21.1846 120.909 li
15.6278 120.909 li
15.6278 120.464 li
16.3004 120.464 16.7589 120.283 17.0042 119.919 cv
17.2486 119.556 17.3708 118.924 17.3708 118.024 cv
17.3708 108.435 li
17.3708 107.49 17.246 106.845 16.9973 106.5 cv
16.7485 106.154 16.2917 105.982 15.6278 105.982 cv
15.6278 105.535 li
21.1846 105.535 li
21.1846 105.982 li
20.512 105.982 20.0465 106.167 19.7891 106.538 cv
19.5308 106.91 19.4025 107.541 19.4025 108.432 cv
19.4025 112.809 li
27.7772 112.809 li
27.7772 108.432 li
27.7772 107.488 27.6567 106.844 27.4166 106.499 cv
27.1765 106.154 26.7241 105.982 26.0601 105.982 cv
26.0601 105.535 li
31.565 105.535 li
31.565 105.982 li
30.9097 105.982 30.4546 106.161 30.2015 106.519 cv
29.9485 106.878 29.8219 107.516 29.8219 108.435 cv
29.8219 118.024 li
29.8219 118.942 29.9485 119.578 30.2015 119.932 cv
30.4546 120.287 30.9097 120.464 31.565 120.464 cv
31.565 120.909 li
26.0601 120.909 li
26.0601 120.464 li
26.7414 120.464 27.1982 120.287 27.4296 119.932 cv
27.6611 119.577 27.7772 118.941 27.7772 118.021 cv
cp
f
43.5645 111.355 mo
44.023 111.355 li
44.023 115.09 li
43.5645 115.09 li
43.398 114.434 43.1978 114.025 42.9621 113.858 cv
42.7254 113.693 42.2097 113.609 41.4149 113.609 cv
37.6011 113.609 li
37.6011 119.113 li
37.6011 119.498 37.6861 119.769 37.8568 119.926 cv
38.0276 120.083 38.3179 120.162 38.7288 120.162 cv
41.4149 120.162 li
42.3761 120.162 43.0401 120.11 43.4076 120.005 cv
43.7742 119.9 44.0845 119.705 44.3376 119.422 cv
44.5907 119.138 44.862 118.677 45.1506 118.039 cv
45.6092 118.039 li
44.901 120.909 li
33.8264 120.909 li
33.8264 120.464 li
34.5172 120.464 34.98 120.287 35.2158 119.932 cv
35.4515 119.578 35.5694 118.95 35.5694 118.05 cv
35.5694 108.435 li
35.5694 107.499 35.4472 106.856 35.2028 106.506 cv
34.9584 106.157 34.4998 105.982 33.8264 105.982 cv
33.8264 105.535 li
44.901 105.535 li
44.901 108.105 li
44.6132 108.105 li
44.4555 107.37 44.231 106.884 43.938 106.643 cv
43.6451 106.403 43.0097 106.283 42.0312 106.283 cv
37.6011 106.283 li
37.6011 112.862 li
41.9003 112.862 li
42.4853 112.862 42.8849 112.757 43.099 112.548 cv
43.3131 112.338 43.4682 111.941 43.5645 111.355 cv
cp
f
65.4589 117.685 mo
65.4589 108.432 li
65.4589 107.532 65.3385 106.906 65.0984 106.551 cv
64.8574 106.198 64.4318 106.008 63.8199 105.982 cv
63.8199 105.535 li
69.2458 105.535 li
69.2458 105.982 li
68.5906 105.982 68.1364 106.161 67.8833 106.519 cv
67.6293 106.878 67.5028 107.516 67.5028 108.435 cv
67.5028 118.024 li
67.5028 118.924 67.6276 119.556 67.8763 119.919 cv
68.126 120.283 68.5819 120.464 69.2458 120.464 cv
69.2458 120.909 li
65.4589 120.909 li
65.4589 118.76 li
64.0166 120.446 62.3082 121.289 60.3338 121.289 cv
58.7086 121.289 57.431 120.804 56.5009 119.834 cv
55.57 118.865 55.1046 117.585 55.1046 115.995 cv
55.1046 108.432 li
55.1046 107.515 54.9849 106.877 54.744 106.519 cv
54.5039 106.16 54.0428 105.982 53.3615 105.982 cv
53.3615 105.535 li
58.9183 105.535 li
58.9183 105.982 li
58.2284 105.982 57.7612 106.156 57.5159 106.505 cv
57.2715 106.856 57.1493 107.488 57.1493 108.406 cv
57.1493 116.191 li
57.1493 117.449 57.4942 118.439 58.185 119.159 cv
58.875 119.88 59.8362 120.241 61.0679 120.241 cv
62.8942 120.241 64.3573 119.389 65.4589 117.685 cv
cp
f
83.0517 105.982 mo
83.0517 105.535 li
87.6906 105.535 li
87.6906 105.982 li
86.9478 105.982 86.4329 106.156 86.1443 106.505 cv
85.8565 106.856 85.7118 107.488 85.7118 108.406 cv
85.7118 120.909 li
85.2411 120.909 li
74.3493 107.541 li
74.3493 118.338 li
74.3493 119.099 74.5036 119.644 74.8139 119.971 cv
75.1242 120.3 75.6417 120.464 76.3672 120.464 cv
76.3672 120.909 li
71.7014 120.909 li
71.7014 120.464 li
72.4442 120.464 72.9469 120.269 73.2087 119.88 cv
73.4704 119.491 73.6022 118.806 73.6022 117.827 cv
73.6022 108.828 li
73.6022 107.857 73.4254 107.16 73.0709 106.736 cv
72.7172 106.312 72.1339 106.061 71.3217 105.982 cv
71.3217 105.535 li
75.2672 105.535 li
84.9256 117.502 li
84.9256 108.511 li
84.9256 107.567 84.7921 106.91 84.526 106.538 cv
84.2591 106.167 83.7676 105.982 83.0517 105.982 cv
cp
f
95.4109 105.535 mo
95.4109 105.982 li
94.7556 105.982 94.3005 106.161 94.0474 106.519 cv
93.7943 106.878 93.6678 107.516 93.6678 108.435 cv
93.6678 118.024 li
93.6678 118.942 93.7943 119.578 94.0474 119.932 cv
94.3005 120.287 94.7556 120.464 95.4109 120.464 cv
95.4109 120.909 li
89.88 120.909 li
89.88 120.464 li
90.5526 120.464 91.0112 120.289 91.2556 119.939 cv
91.5 119.589 91.6231 118.95 91.6231 118.024 cv
91.6231 108.435 li
91.6231 107.49 91.5026 106.845 91.2625 106.5 cv
91.0216 106.154 90.5613 105.982 89.88 105.982 cv
89.88 105.535 li
95.4109 105.535 li
cp
f
112.359 105.535 mo
112.359 106.008 li
111.231 106.008 110.299 107.004 109.565 108.996 cv
105.028 121.119 li
104.592 121.119 li
99.8314 108.642 li
99.3858 107.488 99.001 106.761 98.6777 106.459 cv
98.3535 106.159 97.8907 105.999 97.2874 105.982 cv
97.2874 105.535 li
102.87 105.535 li
102.87 105.982 li
101.973 105.982 101.525 106.327 101.525 107.017 cv
101.525 107.244 101.581 107.501 101.695 107.79 cv
105.458 117.712 li
109.029 108.131 li
109.178 107.721 109.252 107.367 109.252 107.07 cv
109.252 106.344 108.794 105.982 107.877 105.982 cv
107.877 105.535 li
112.359 105.535 li
cp
f
123.622 111.355 mo
124.081 111.355 li
124.081 115.09 li
123.622 115.09 li
123.456 114.434 123.256 114.025 123.02 113.858 cv
122.783 113.693 122.268 113.609 121.473 113.609 cv
117.659 113.609 li
117.659 119.113 li
117.659 119.498 117.744 119.769 117.915 119.926 cv
118.085 120.083 118.376 120.162 118.787 120.162 cv
121.473 120.162 li
122.434 120.162 123.098 120.11 123.465 120.005 cv
123.832 119.9 124.142 119.705 124.395 119.422 cv
124.649 119.138 124.92 118.677 125.208 118.039 cv
125.667 118.039 li
124.959 120.909 li
113.884 120.909 li
113.884 120.464 li
114.575 120.464 115.038 120.287 115.274 119.932 cv
115.509 119.578 115.627 118.95 115.627 118.05 cv
115.627 108.435 li
115.627 107.499 115.505 106.856 115.261 106.506 cv
115.016 106.157 114.558 105.982 113.884 105.982 cv
113.884 105.535 li
124.959 105.535 li
124.959 108.105 li
124.671 108.105 li
124.513 107.37 124.289 106.884 123.996 106.643 cv
123.703 106.403 123.068 106.283 122.089 106.283 cv
117.659 106.283 li
117.659 112.862 li
121.958 112.862 li
122.543 112.862 122.943 112.757 123.157 112.548 cv
123.371 112.338 123.526 111.941 123.622 111.355 cv
cp
f
133.056 106.126 mo
131.444 106.126 li
131.444 113.151 li
133.332 113.151 li
134.459 113.151 135.344 112.828 135.986 112.181 cv
136.627 111.534 136.949 110.678 136.949 109.612 cv
136.949 108.572 136.593 107.731 135.881 107.089 cv
135.168 106.446 134.227 106.126 133.056 106.126 cv
cp
132.689 113.792 mo
131.444 113.792 li
131.444 118.021 li
131.444 118.931 131.573 119.567 131.831 119.925 cv
132.088 120.284 132.545 120.464 133.2 120.464 cv
133.2 120.909 li
127.669 120.909 li
127.669 120.464 li
128.351 120.464 128.812 120.284 129.053 119.925 cv
129.293 119.568 129.412 118.933 129.412 118.024 cv
129.412 108.382 li
129.412 107.473 129.294 106.845 129.059 106.5 cv
128.823 106.154 128.36 105.982 127.669 105.982 cv
127.669 105.535 li
133.973 105.535 li
135.529 105.535 136.772 105.914 137.702 106.669 cv
138.633 107.425 139.098 108.389 139.098 109.56 cv
139.098 111.447 138.041 112.704 135.926 113.334 cv
136.391 113.631 136.844 114.039 137.287 114.559 cv
137.729 115.078 138.309 115.943 139.026 117.15 cv
139.831 118.49 140.459 119.368 140.912 119.785 cv
141.364 120.203 141.835 120.428 142.322 120.464 cv
142.322 120.909 li
139.176 120.909 li
138.53 120.131 137.748 118.989 136.831 117.483 cv
135.852 115.898 135.085 114.887 134.53 114.449 cv
133.976 114.012 133.362 113.792 132.689 113.792 cv
cp
f
151.421 105.313 mo
151.854 105.313 li
151.854 108.918 li
151.395 108.918 li
151.29 107.921 150.93 107.143 150.313 106.584 cv
149.698 106.025 148.922 105.745 147.987 105.745 cv
147.158 105.745 146.488 105.955 145.982 106.374 cv
145.475 106.794 145.222 107.353 145.222 108.053 cv
145.222 108.699 145.432 109.289 145.851 109.822 cv
146.271 110.355 147.179 111.04 148.577 111.879 cv
150.202 112.849 151.295 113.697 151.854 114.421 cv
152.413 115.147 152.693 115.977 152.693 116.912 cv
152.693 118.117 152.265 119.149 151.41 120.005 cv
150.555 120.862 149.526 121.289 148.322 121.289 cv
147.624 121.289 146.734 121.097 145.652 120.713 cv
145.207 120.556 144.924 120.477 144.802 120.477 cv
144.549 120.477 144.353 120.674 144.213 121.066 cv
143.754 121.066 li
143.754 116.912 li
144.213 116.912 li
144.222 118.057 144.595 118.974 145.331 119.665 cv
146.068 120.355 146.93 120.7 147.914 120.7 cv
148.848 120.7 149.596 120.451 150.158 119.951 cv
150.72 119.453 151.002 118.789 151.002 117.958 cv
151.002 117.337 150.77 116.743 150.308 116.174 cv
149.846 115.606 148.88 114.873 147.411 113.976 cv
146.212 113.237 145.412 112.652 145.011 112.223 cv
144.609 111.795 144.313 111.326 144.12 110.814 cv
143.929 110.303 143.833 109.741 143.833 109.129 cv
143.833 107.949 144.219 106.992 144.992 106.257 cv
145.765 105.523 146.773 105.156 148.014 105.156 cv
148.695 105.156 149.438 105.291 150.242 105.562 cv
150.617 105.685 150.88 105.745 151.028 105.745 cv
151.15 105.745 151.233 105.719 151.277 105.667 cv
151.321 105.614 151.368 105.496 151.421 105.313 cv
cp
f
160.791 105.535 mo
160.791 105.982 li
160.136 105.982 159.681 106.161 159.427 106.519 cv
159.174 106.878 159.048 107.516 159.048 108.435 cv
159.048 118.024 li
159.048 118.942 159.174 119.578 159.427 119.932 cv
159.681 120.287 160.136 120.464 160.791 120.464 cv
160.791 120.909 li
155.26 120.909 li
155.26 120.464 li
155.933 120.464 156.391 120.289 156.636 119.939 cv
156.88 119.589 157.003 118.95 157.003 118.024 cv
157.003 108.435 li
157.003 107.49 156.883 106.845 156.643 106.5 cv
156.402 106.154 155.941 105.982 155.26 105.982 cv
155.26 105.535 li
160.791 105.535 li
cp
f
173.004 106.283 mo
170.672 106.283 li
170.672 118.103 li
170.672 119.029 170.785 119.655 171.013 119.978 cv
171.24 120.302 171.681 120.464 172.336 120.464 cv
172.336 120.909 li
166.897 120.909 li
166.897 120.464 li
167.573 120.464 168.033 120.278 168.276 119.906 cv
168.519 119.535 168.64 118.907 168.64 118.024 cv
168.64 106.283 li
166.412 106.283 li
165.346 106.283 164.571 106.453 164.085 106.794 cv
163.601 107.135 163.328 107.698 163.266 108.485 cv
162.808 108.485 li
162.808 104.959 li
163.266 104.959 li
163.677 105.344 164.446 105.535 165.574 105.535 cv
173.634 105.535 li
174.795 105.535 175.608 105.344 176.071 104.959 cv
176.556 104.959 li
176.556 108.485 li
176.255 108.485 li
176.062 107.637 175.719 107.058 175.226 106.748 cv
174.732 106.438 173.992 106.283 173.004 106.283 cv
cp
f
189.511 107.725 mo
186.052 113.177 li
186.052 118.021 li
186.052 118.958 186.171 119.6 186.412 119.945 cv
186.653 120.29 187.095 120.464 187.742 120.464 cv
187.742 120.909 li
182.132 120.909 li
182.132 120.464 li
182.892 120.464 183.398 120.28 183.647 119.912 cv
183.895 119.545 184.02 118.915 184.02 118.021 cv
184.02 113.177 li
180.744 108.079 li
180.202 107.231 179.761 106.676 179.419 106.414 cv
179.079 106.152 178.607 106.008 178.004 105.982 cv
178.004 105.535 li
184.02 105.535 li
184.02 105.982 li
182.964 105.982 182.435 106.222 182.435 106.702 cv
182.435 106.921 182.54 107.191 182.749 107.514 cv
185.789 112.171 li
188.223 108.312 li
188.581 107.736 188.76 107.243 188.76 106.832 cv
188.76 106.265 188.421 105.982 187.742 105.982 cv
187.742 105.535 li
191.962 105.535 li
191.962 105.982 li
191.395 106.016 190.955 106.141 190.645 106.355 cv
190.335 106.569 189.957 107.025 189.511 107.725 cv
cp
f
19.4658 146.223 mo
20.3308 146.223 21.0927 145.684 21.7523 144.606 cv
22.4119 143.529 22.7422 142.245 22.7422 140.754 cv
22.7422 140.082 22.5671 139.517 22.2178 139.059 cv
21.8685 138.602 21.4316 138.372 20.9072 138.372 cv
20.0682 138.372 19.3167 138.908 18.6528 139.981 cv
17.9888 141.054 17.6569 142.315 17.6569 143.763 cv
17.6569 144.513 17.8207 145.111 18.1483 145.555 cv
18.476 146 18.9154 146.223 19.4658 146.223 cv
cp
21.6145 137.586 mo
22.3313 137.586 22.9606 137.887 23.5023 138.49 cv
24.0441 139.093 24.3145 139.8 24.3145 140.613 cv
24.3145 142.037 23.7771 143.46 22.7023 144.88 cv
21.6275 146.299 20.3525 147.009 18.8755 147.009 cv
18.0547 147.009 17.3838 146.716 16.8638 146.131 cv
16.3437 145.545 16.0837 144.799 16.0837 143.89 cv
16.0837 142.299 16.6583 140.852 17.8077 139.545 cv
18.9561 138.239 20.226 137.586 21.6145 137.586 cv
cp
f
30.9314 137.874 mo
30.8395 138.608 li
28.9742 138.608 li
27.4773 146.447 li
27.0838 148.561 26.6495 150.098 26.1728 151.059 cv
25.6961 152.02 25.027 152.764 24.1663 153.293 cv
23.3047 153.822 22.3799 154.086 21.3918 154.086 cv
20.0717 154.086 19.0315 153.846 18.2705 153.365 cv
18.677 151.491 li
19.1356 151.491 li
19.4233 152.863 20.2043 153.549 21.4776 153.549 cv
22.4362 153.549 23.2804 153.201 24.0076 152.507 cv
24.7366 151.812 25.3355 150.202 25.807 147.677 cv
27.5094 138.608 li
25.6233 138.608 li
25.7022 137.874 li
27.5935 137.874 li
28.2574 134.624 li
28.6076 132.894 29.1788 131.701 29.971 131.046 cv
30.7632 130.391 31.7071 130.063 32.801 130.063 cv
33.3089 130.063 33.9174 130.181 34.6272 130.417 cv
34.7053 130.089 li
35.2427 130.089 li
34.7321 132.513 li
34.1947 132.513 li
34.0803 131.238 33.5169 130.6 32.5019 130.6 cv
31.207 130.6 30.3316 131.693 29.8774 133.878 cv
29.034 137.874 li
30.9314 137.874 li
cp
f
49.4411 137.153 mo
49.8996 137.153 li
49.8996 140.888 li
49.4411 140.888 li
49.2747 140.233 49.0745 139.823 48.8387 139.656 cv
48.6021 139.491 48.0864 139.408 47.2915 139.408 cv
43.4778 139.408 li
43.4778 144.911 li
43.4778 145.296 43.5627 145.568 43.7335 145.725 cv
43.9042 145.881 44.1946 145.96 44.6054 145.96 cv
47.2915 145.96 li
48.2528 145.96 48.9167 145.908 49.2842 145.803 cv
49.6509 145.699 49.9612 145.503 50.2143 145.22 cv
50.4674 144.936 50.7387 144.476 51.0273 143.838 cv
51.4858 143.838 li
50.7777 146.708 li
39.703 146.708 li
39.703 146.262 li
40.3938 146.262 40.8567 146.085 41.0924 145.731 cv
41.3282 145.376 41.4461 144.749 41.4461 143.848 cv
41.4461 134.233 li
41.4461 133.297 41.3239 132.655 41.0794 132.304 cv
40.835 131.955 40.3765 131.78 39.703 131.78 cv
39.703 131.334 li
50.7777 131.334 li
50.7777 133.903 li
50.4899 133.903 li
50.3322 133.169 50.1077 132.682 49.8147 132.441 cv
49.5217 132.201 48.8864 132.081 47.9078 132.081 cv
43.4778 132.081 li
43.4778 138.66 li
47.7769 138.66 li
48.362 138.66 48.7616 138.555 48.9757 138.346 cv
49.1898 138.136 49.3449 137.739 49.4411 137.153 cv
cp
f
60.326 131.924 mo
57.4032 131.924 li
57.4032 143.273 li
57.4032 144.366 57.535 145.113 57.7967 145.515 cv
58.0594 145.917 58.5829 146.118 59.3699 146.118 cv
60.9552 146.118 li
62.843 146.118 64.3278 145.508 65.4113 144.289 cv
66.4947 143.07 67.0364 141.408 67.0364 139.303 cv
67.0364 137.066 66.4444 135.277 65.2604 133.936 cv
64.0764 132.595 62.4322 131.924 60.326 131.924 cv
cp
53.6293 146.708 mo
53.6293 146.262 li
54.2881 146.262 54.7431 146.081 54.9954 145.718 cv
55.2467 145.354 55.3724 144.723 55.3724 143.822 cv
55.3724 134.233 li
55.3724 133.314 55.2467 132.676 54.9954 132.317 cv
54.7431 131.959 54.2881 131.78 53.6293 131.78 cv
53.6293 131.334 li
60.7394 131.334 li
63.3674 131.334 65.4693 132.081 67.0451 133.575 cv
68.6209 135.069 69.4088 136.969 69.4088 139.277 cv
69.4088 141.539 68.6625 143.344 67.1691 144.689 cv
65.6765 146.035 63.5989 146.708 60.9362 146.708 cv
53.6293 146.708 li
cp
f
76.9722 131.334 mo
76.9722 131.78 li
76.3169 131.78 75.8618 131.959 75.6087 132.317 cv
75.3557 132.676 75.2291 133.314 75.2291 134.233 cv
75.2291 143.822 li
75.2291 144.74 75.3557 145.376 75.6087 145.731 cv
75.8618 146.085 76.3169 146.262 76.9722 146.262 cv
76.9722 146.708 li
71.4413 146.708 li
71.4413 146.262 li
72.114 146.262 72.5725 146.087 72.8169 145.738 cv
73.0613 145.387 73.1844 144.749 73.1844 143.822 cv
73.1844 134.233 li
73.1844 133.288 73.0639 132.643 72.8238 132.298 cv
72.5829 131.953 72.1226 131.78 71.4413 131.78 cv
71.4413 131.334 li
76.9722 131.334 li
cp
f
90.6315 131.78 mo
90.6315 131.334 li
95.2704 131.334 li
95.2704 131.78 li
94.5276 131.78 94.0128 131.954 93.7241 132.304 cv
93.4364 132.654 93.2916 133.286 93.2916 134.204 cv
93.2916 146.708 li
92.821 146.708 li
81.9292 133.339 li
81.9292 144.137 li
81.9292 144.898 82.0835 145.442 82.3938 145.77 cv
82.7041 146.098 83.2215 146.262 83.947 146.262 cv
83.947 146.708 li
79.2812 146.708 li
79.2812 146.262 li
80.024 146.262 80.5268 146.067 80.7885 145.679 cv
81.0503 145.289 81.182 144.605 81.182 143.625 cv
81.182 134.627 li
81.182 133.656 81.0052 132.958 80.6507 132.534 cv
80.2971 132.11 79.7137 131.859 78.9016 131.78 cv
78.9016 131.334 li
82.8471 131.334 li
92.5055 143.3 li
92.5055 134.309 li
92.5055 133.365 92.372 132.708 92.1059 132.337 cv
91.8389 131.966 91.3475 131.78 90.6315 131.78 cv
cp
f
102.202 139.027 mo
100.743 139.027 li
100.743 143.536 li
100.743 144.532 100.853 145.211 101.072 145.574 cv
101.291 145.936 101.711 146.118 102.333 146.118 cv
103.607 146.118 li
104.501 146.118 105.23 145.818 105.794 145.22 cv
106.359 144.621 106.641 143.819 106.641 142.815 cv
106.641 141.671 106.236 140.753 105.426 140.063 cv
104.616 139.373 103.541 139.027 102.202 139.027 cv
cp
100.743 131.924 mo
100.743 138.438 li
102.334 138.438 li
103.446 138.438 104.331 138.147 104.988 137.566 cv
105.645 136.985 105.973 136.201 105.973 135.213 cv
105.973 134.174 105.651 133.365 105.007 132.789 cv
104.364 132.213 103.454 131.924 102.281 131.924 cv
100.743 131.924 li
cp
104.054 146.708 mo
96.9693 146.708 li
96.9693 146.262 li
97.6246 146.262 98.0788 146.085 98.3319 145.731 cv
98.5849 145.376 98.7124 144.74 98.7124 143.822 cv
98.7124 134.233 li
98.7124 133.297 98.5919 132.655 98.3518 132.304 cv
98.1117 131.955 97.6506 131.78 96.9693 131.78 cv
96.9693 131.334 li
102.769 131.334 li
104.43 131.334 105.738 131.677 106.692 132.362 cv
107.645 133.047 108.122 133.953 108.122 135.079 cv
108.122 136.729 107.091 137.89 105.029 138.563 cv
105.029 138.628 li
106.2 138.864 107.155 139.382 107.893 140.182 cv
108.631 140.982 109 141.902 109 142.943 cv
109 144.08 108.547 144.991 107.643 145.678 cv
106.737 146.364 105.541 146.708 104.054 146.708 cv
cp
f
122.691 143.483 mo
122.691 134.23 li
122.691 133.331 122.571 132.704 122.331 132.35 cv
122.09 131.996 121.664 131.806 121.052 131.78 cv
121.052 131.334 li
126.478 131.334 li
126.478 131.78 li
125.823 131.78 125.369 131.959 125.116 132.317 cv
124.862 132.676 124.735 133.314 124.735 134.233 cv
124.735 143.822 li
124.735 144.723 124.86 145.354 125.109 145.718 cv
125.358 146.081 125.814 146.262 126.478 146.262 cv
126.478 146.708 li
122.691 146.708 li
122.691 144.558 li
121.249 146.245 119.541 147.087 117.566 147.087 cv
115.941 147.087 114.663 146.603 113.733 145.633 cv
112.802 144.663 112.337 143.383 112.337 141.793 cv
112.337 134.23 li
112.337 133.313 112.217 132.675 111.976 132.317 cv
111.736 131.959 111.275 131.78 110.594 131.78 cv
110.594 131.334 li
116.151 131.334 li
116.151 131.78 li
115.461 131.78 114.994 131.954 114.748 132.304 cv
114.504 132.654 114.382 133.286 114.382 134.204 cv
114.382 141.99 li
114.382 143.247 114.727 144.237 115.417 144.958 cv
116.107 145.679 117.069 146.039 118.3 146.039 cv
120.127 146.039 121.59 145.187 122.691 143.483 cv
cp
f
134.14 131.924 mo
132.527 131.924 li
132.527 138.949 li
134.415 138.949 li
135.542 138.949 136.427 138.626 137.069 137.979 cv
137.711 137.333 138.032 136.476 138.032 135.41 cv
138.032 134.37 137.676 133.529 136.964 132.887 cv
136.252 132.245 135.311 131.924 134.14 131.924 cv
cp
133.773 139.59 mo
132.527 139.59 li
132.527 143.819 li
132.527 144.729 132.657 145.365 132.914 145.724 cv
133.171 146.083 133.628 146.262 134.283 146.262 cv
134.283 146.708 li
128.753 146.708 li
128.753 146.262 li
129.435 146.262 129.895 146.083 130.136 145.724 cv
130.376 145.366 130.496 144.731 130.496 143.822 cv
130.496 134.18 li
130.496 133.271 130.378 132.643 130.142 132.298 cv
129.906 131.953 129.443 131.78 128.753 131.78 cv
128.753 131.334 li
135.057 131.334 li
136.612 131.334 137.855 131.712 138.785 132.467 cv
139.716 133.223 140.182 134.187 140.182 135.358 cv
140.182 137.245 139.124 138.503 137.009 139.132 cv
137.474 139.429 137.927 139.837 138.37 140.358 cv
138.812 140.877 139.392 141.741 140.109 142.948 cv
140.914 144.288 141.543 145.166 141.995 145.583 cv
142.448 146.001 142.918 146.226 143.405 146.262 cv
143.405 146.708 li
140.26 146.708 li
139.613 145.929 138.831 144.787 137.914 143.281 cv
136.936 141.697 136.169 140.685 135.614 140.247 cv
135.059 139.81 134.446 139.59 133.773 139.59 cv
cp
f
158.683 140.05 mo
158.683 140.495 li
158.001 140.495 157.514 140.65 157.222 140.962 cv
156.929 141.272 156.782 141.809 156.782 142.57 cv
156.782 146.707 li
156.424 146.803 155.753 146.89 154.77 146.969 cv
153.787 147.048 153.026 147.087 152.484 147.087 cv
149.643 147.087 147.431 146.389 145.845 144.99 cv
144.259 143.592 143.467 141.749 143.467 139.46 cv
143.467 137.861 143.814 136.419 144.509 135.134 cv
145.203 133.851 146.173 132.832 147.418 132.081 cv
148.663 131.33 149.985 130.954 151.382 130.954 cv
152.221 130.954 153.134 131.102 154.122 131.4 cv
154.75 131.583 155.231 131.675 155.563 131.675 cv
156 131.675 156.289 131.504 156.428 131.164 cv
156.913 131.164 li
156.913 135.699 li
156.48 135.699 li
156.306 134.44 155.736 133.433 154.77 132.677 cv
153.805 131.922 152.675 131.543 151.382 131.543 cv
149.758 131.543 148.425 132.193 147.385 133.49 cv
146.345 134.788 145.825 136.463 145.825 138.516 cv
145.825 140.77 146.426 142.641 147.627 144.125 cv
148.829 145.611 150.339 146.354 152.156 146.354 cv
153.877 146.354 154.737 145.806 154.737 144.711 cv
154.737 143.044 li
154.737 142.098 154.613 141.437 154.364 141.06 cv
154.115 140.684 153.676 140.495 153.047 140.495 cv
152.457 140.495 li
152.457 140.05 li
158.683 140.05 li
cp
f
172.091 143.819 mo
172.091 139.355 li
163.716 139.355 li
163.716 143.819 li
163.716 144.729 163.844 145.365 164.103 145.724 cv
164.36 146.083 164.826 146.262 165.498 146.262 cv
165.498 146.708 li
159.941 146.708 li
159.941 146.262 li
160.614 146.262 161.073 146.081 161.318 145.718 cv
161.562 145.354 161.685 144.723 161.685 143.822 cv
161.685 134.233 li
161.685 133.288 161.56 132.643 161.311 132.298 cv
161.062 131.953 160.605 131.78 159.941 131.78 cv
159.941 131.334 li
165.498 131.334 li
165.498 131.78 li
164.826 131.78 164.36 131.966 164.103 132.337 cv
163.844 132.708 163.716 133.339 163.716 134.23 cv
163.716 138.608 li
172.091 138.608 li
172.091 134.23 li
172.091 133.286 171.97 132.642 171.73 132.298 cv
171.49 131.953 171.038 131.78 170.374 131.78 cv
170.374 131.334 li
175.879 131.334 li
175.879 131.78 li
175.223 131.78 174.768 131.959 174.515 132.317 cv
174.262 132.676 174.136 133.314 174.136 134.233 cv
174.136 143.822 li
174.136 144.74 174.262 145.376 174.515 145.731 cv
174.768 146.085 175.223 146.262 175.879 146.262 cv
175.879 146.708 li
170.374 146.708 li
170.374 146.262 li
171.055 146.262 171.512 146.085 171.743 145.73 cv
171.975 145.375 172.091 144.739 172.091 143.819 cv
cp
f
%ADOBeginClientInjection: EndPageContent "AI11EPS"
userdict /annotatepage 2 copy known {get exec}{pop pop} ifelse
%ADOEndClientInjection: EndPageContent "AI11EPS"
grestore
grestore
pgrs
%%PageTrailer
%ADOBeginClientInjection: PageTrailer Start "AI11EPS"
[/EMC AI11_PDFMark5[/NamespacePop AI11_PDFMark5
%ADOEndClientInjection: PageTrailer Start "AI11EPS"
[
[/CSA [/0 ]]
] del_res
Adobe_AGM_Image/pt gx
Adobe_CoolType_Core/pt get execAdobe_AGM_Core/pt gx
currentdict Adobe_AGM_Utils eq {end} if
%%Trailer
Adobe_AGM_Image/dt get exec
Adobe_CoolType_Core/dt get execAdobe_AGM_Core/dt get exec
%%EOF
%AI9_PrintingDataEnduserdict /AI9_read_buffer 256 string putuserdict begin/ai9_skip_data{	mark	{		currentfile AI9_read_buffer { readline } stopped		{		}		{			not			{				exit			} if			(%AI9_PrivateDataEnd) eq			{				exit			} if		} ifelse	} loop	cleartomark} defenduserdict /ai9_skip_data get exec%AI9_PrivateDataBegin%!PS-Adobe-3.0 EPSF-3.0%%Creator: Adobe Illustrator(R) 16.0%%AI8_CreatorVersion: 18.0.0%%For: (Marc Wright) ()%%Title: (UoE_Centred Logo_black.eps)%%CreationDate: 02/12/2014 15:13%%Canvassize: 16383%AI9_DataStream%Gb",Kk@3F5Zg`/@g]JuNU]>;b31ZM0O?e+r""%FYQl+J(pAK!6rKH;[>\%4UaE!lYGnX=!Bh"O@N>.4[Ujfr,BYS/Ts#._V&WT_f%0U8BM,fPH]Ob:ZMfX4_9ZUpShoscuDib2/VMR+Q9)R+4Q:[t)X:9+"l@_5^+V5i28Au2@MG;mC,VGM[O7FHt5QU7Gr(*pF:oK^#J%!=MKa-.?chCM3TH7?faJA."XN0<"PD=*PH=_WZ2Gbe5")5Y4Q6ot\?CC]GZB4hWp8G6qZUs$\"^`RdSg-O[VBe:(Ru+j3c]--5PZ%GrS:A>aus_5+H*'GUgZ7N&Um38<?I2ZInG!Kq=+!^eeQ($#7JDi4JY8[5L8]eKh[bcS-e50:%W^/;-e18eK#ij!e/I@1Z02eI[4K%KF^JE-HZ\/dW2P@p`H./aY3jkr)CC8p7%e(eSb!Z('kPV;!_/]M9V#6V7/*7"[jd2+)1XP.[1,4<U>:YQC<4mUCB1VjV+#C'B,!#%)]bGm`-,:p7\^*.""St7\M-ILiZ,k5_I-)7'FuOV:PL;6otmQB,YdNoPK$Cp%gWcadlN(rY6ZKM>].24g)K<2\X.`T;)9PiUV\JA%#JqaX1B$7@J'*iRp:['M<`&j4/UM594@K+S"FA;$CK[V?-_UqIb((ee#4&6;]dhq3hpE7e]\cRUO8aSgP<eM))o<#STeEC3@^?S/%mE8DBF4dWgTkM"a<Q+C7=RA[8R*]%3]^ca6YnE(k"W]5=659J#J*V7:6DLmH#nA(*Mdb]lBSl`<rn"o-:94Om1n#qkq=ZJH.<S<l%Q$WH!MG9craC/&NK0*fF!ac'q*WmOd./%O5+G)Ju!TZL":_apkNs_a[rZ.9(E0\N'N83m9L!,Y/e@Vr6dW&*A;(8S2)1<3QhA[$8%@_:4AJLc3g:uR?]AQ\H;!8?UQ"n:HkeI)#4"0nW.#r_KQlUu0Ve.;=6/U_/`B!_"W$_=areYsLCms9KGDaB]ZT2nBq2S(JMopSL1%K%t-@RptVX[jU1V%!>>:[0@1g/kk\9Vt=3W<SpOi(!ktMkur#4JR/ePqMh([:e5>DTU?HG]a5\k@A).%kl?o#5RWt@Hn=EX!72NM%<d"22kZ,5H[".3bad!DL:4n&*^I*G=T;Io?_&r0e&btH8./Frr_Pc@J-R)fJFY?*:)H\A,@&d%3?j?]'M;u]s$PjDtG`jFf;t5^@%Qj2+\aepP`=9mh`C]`$c#C%<<<;8PV9%%^2TfEC0M5Nm2*<mph)2;%H3M,?M8g2As=s:r8C*Cpm.KGJT\StRQ_!rDF_?D:7!!&U&%PA28Y"(MEI-K?A6eCt)cK2P;j19'q8nt]HScsbW>aG/uRa@cSR@BNI]QB36h$#b?g-io-ki`L@MS1+'G4MQWGR7t1!XL:d$LCD@k%n2dMX$3$Va!/seo&faIs.WI^D$q759";b+^Gb$_q9r`n0PL9gFNAdGs#?I-g9ViFY,Y`N&8WM@/;b=)F`K:@TPR]sZ$V$3Z,ZP1c%Oq0W`0Lk?3ELLH<1@Rk9><8iLAh\Oock&d2.<WQka(ZrS<Z1sdjWq[([Ak[1;90,q->?(&V!,&C!60g7>`5,\.X?I-_."[WP_pHu%nL>SZP%)qWnL6qs3aQ/=I(1*C$43gg`KU-DV\k1ULRABQ0ab6P[\>T>dJu;8OQ1U^imKq\C@a]1gA'osL(p[5AL#!'&=3BGO]"kO%.?0+uW_P$t9N#.VOOY4kN?r:(SZ9\s4KlV58:o9WOAF9(,iRu`5V>VR&^.#$3shcT6]P`CQ'7*3.:/K(Q;XL_#:+k,a>8^<K:XH]%;Q#P7Z^cVP$:mQg=_1j.-C%^<:`2_'O939r=c]eKeO4-Ze7DV[.9>ORn1.(G,L?QV+",TI!DoT+G^.Soj4"ZkB!<n,S@Ko'7_m'.%*19-I^nG:PXUt9hlMRI;TEe(<#.$e!.&8g+.d30DFk5]>=U/eW``W4N;BmC\-)G=K'WI(X<s9';AY=bo6W#<5.Lpoh8hg^-YYn";%Q$!>sElt<\>#\D%R%feWhHh-$BV/0[(^632P>hmQ1p?3k3;KKar%mu6!>c;2V(U.@6)`Ga/=d,0Y+tNh;$)oIA5uBWOcl#6S:k^V%n.1S7!Qn<?,le'(>]t=i._q;-e>`YJ#U0=&M^3(H21c(*BpI53/>^bq<96\PAS[;M3OM!MX9)+mPSFN4_*k!)"I&mR)?;0\K+#&[%<gQ^`$O<0L!C1-\)$(;V.KHt2#Yp)sP8^klV.a[Q6\/gI((u"X=)4ZM[6:J(BJK^LPu=Z7eZMe#WKCbBg1-XE+@/su#0'+d]P^2j%Krj9"cn&@`TTH(8)C8C@\`'D70377-!`_dkKn.:Q6;CBaTTE/""mh(Vo_,rK4dRGDp4OnE9SP,IUpuX!+DD7B$>Z#,Ufp/9WbW1E%0a_qBfPJ4#A:Oq^[1j0sVFAYTBSn7Sepq8<`Lt9`.VSt"dBlMN:^f1m[W3gK=6oG(GZK[E+m^UJ;F79J;?O`"66CeWljZe4YdCk2%P8(29!ZOBF(7V$i*<8o$.KEK]JeSbdSApY,;B6JW<3F6f/<j1-HbfQZ2$WA%Zs&ej;P_m1@MXS_:,S"R0oYg2P1Bn+-u'8-C3ged%WbN\MBOZRh<'(F$",>@J9kjc$l"gRrN'75A9W0IE)hFlG=eJG;%GN/OW,k5)`YBa"a/b`K,`MgMBj.R[V6n(E>Y8;['P!ft49-Fi%>+54aA0mMh'bN]hVcgEh!g6;_L+-+9JRTt&aZj0TnnMH_gcV\?J.e7$LrF@m%KORU9s=^U5m:Xi\>dhd"9bbC@4?fTQ4Zog38631%>m1A/XZ2?91`EZ'<RW^68^.HM.?`0c5j9d'L%1Epbn5T*Tctf`$'I-G)2=5h$32+u<5u!WPen,GfTqCT!=F+@f:YG^L6_j7`.<iK%>0\\&N#!,)%(_N-<13rE"/1_T#[p_kJRXMeAs!;[X]h(R[*E>uHRORVD]$MOVZU<dNU7<_[?/c=%h3/V/Q>`>C)e/moZg?feeq:j%=s:ei>%(;BHo.he;&WP4?u;r:T2Vfq:mfb?5&`+c&SW0[K1X>Q:20cBJ.H-3/IWA-l\Hjo11&!9l#*=\@u:UI'WKSnJ-!N&<^2hM%f4nTGeeW[s+HpPGQIITrPD\:kTq=p'%\4ngI>@H[;FiU4&u/Hn'b6/_<"Y8Bm1pTE7S)&^"Ss[K@KtIW)]#>r5*0"PUNXVP1th%m%f)_np#[BjbLmK=qOs\oR,c-G"8M"pg=D5-jJ4GaO!<A$b$P'EKk<l1_+nV[XcOm\2R,cuUeq(l1)-C6i+nqhs\7T$t2kSU0OX)@b%0ggR*Wg#e+e/W`Tp5*COU#HbPX%k`N.m=jR4Yr(P_!sblP$f&*M$Q0(28:Z0!q*3H%:G`gMSa!th7is2&;o[[);X!O%MT"e49E=7%\r&Tmj%qkU18"\/`C-I$/rGdW!Ws\^Y6Tm''Ndi'I0pf2.:`sdJB1_b7gOu^eX.\fPL':01;GIq#<EG+Tjsqk%V6A+0FV2r%Dqoa%FUJq1_b+EBfB])R5TmIYSlO!aW.u&p3<ak3Pq"Ke=C)(0gfZ,'HHo*)Ua^!=BW`Hhm:ZQ!PTFW@)M;#>"G[t$'#nEq>u>T\<#dB@%hQilkfp%@06NE:%kthAaOOb,J'PmCP$]GMD(G+(_JeNrZKnUq`LbM@$.gDFE-mB(i;)EkMY_\EM!:)D)U8u+>""T%(!GDn^^`b&4%^/Vk8#-*sj6UVb6Rhuo]Wo"0l9j.Ue#eZ$HWLAd-@o7UfOap&=ZB0W2U)'aC!6PP&-XJAN<CI4?8C=eB8>uW(B^RR3-j5tY9Y<Cd%64ndI/tpu&!%No^2$AFWFCD6]Q(aCVE![#?@ar[?aBP[9;scgk7KuF!.]::h@IQUi\kSVOV)tS_=F?"S<a:O5n7#O$73Ms>EgjPU%F'A>a$1(_.?!;A<_()4DRN]e9MT_Jeeq7ion['4M!QGkLetm(I?*^Qsl[_Bc;p6rBQ/YjoL)?m#N(U'e%]dVaU&CFU1uF'[WIZM&%$k2$K@^S`3UC'p,XBA.7/b!tk63A^(A2U+ol82h,MLZG\WnnOobSn&a72Sj_^M&nf.8gf`'NC\rF^Q1cIqi8H+EYK!%Lj-8X9pi,%BbhKg%tSEA29k!/!(\]CU\f/?DVRO5M:]sP6Ul#!_'uV>BiT_^-tOEL6<a$r3Q6$BL-4`^5]mrqb@hpdEhi^M!i.:W[2;+3(n3Ac%U*<@ZM%W8u!<L-N*fJNW!MGgV[()sp!HL5Z_Eo7HK$[28i1(`@2l,5n&MO?_i^JqY@A&J%Wc8,qi\_DUh-L+W18=rub^:3$0q8G5%gL^G>&4;E]RcP!cS#S^30d8L?a6N1s8?ETPCPJAI`Y83o)67[qJO8;PBR5Y86\-qIW^TZbaQ"0J8E_>!Qk<NgQ;Cj-(abmj],-3I%$#Nq9[:"mjZ='!J^o%RR;l8c:(2a5.%';tApnTh,Pj\#20T)s@=8<WCd;!?D+Mr.X[ce0bFUY<2Xe`Ng"m$Z)>H-=##>Cf&<bMXd%Kdhc,$DF!:7&Zi#'T\=)ghsnrRa\::EZg_eh<\VX7[N'ZV_'6I,;a,XR3nKOJ6EP`Ne]Mo+[-lO$/aTihp@LdUj:-%r(eo_l4o8X%BJ2L*Y$#qbrAM_G@Y>22AF^n%$-F_WI;FdA2gFuS'2,SC,m&.1@Q#,0b=p18K6uT]4/`X?2F@iW=G@4kD*nD_,S]((,2aLBXh\G0%MH'gS32B4>:)"We"f.=t)j#],--r(HrW..mT*4)8XL0ZPg$AWhFb)7K4u&?XYgE4oC$THW<)PH'/(1AS,UnEk#R47^:DhqD!hH,e%b@jVNhnVphqo;#,1T0FNe*Hu?RAjs?K/!n6dForVL4F90DW&DT,b]T8?1/RJ9`QN)d!l4hR(,:B3Kn2%r7/ZYXrfR>dJmCp2Y[sg%_ibt(IS];s?3ORd$apu([mm\NMhm_!E8n+X1VU[I]g)#=bBbR/&jukYJua'i$Ap]t@'9?!B_I_&Ddqc"Xlit/nhR9T`hHI?T4FI@%2ep#bCm<H'T8jLI56#'Oo%ujqnHU"o5@8qrKT>Sk:<MUk<CctJ%WGo&BPI)&W2:)4d`p(,n3Z-ofVk3S$Q#=@STTl':PtP+p#Sf\%.CQ9$/esVJQrC*Zo@`I9>]<qq.RI2faPo]3&-8C`D65uB6OFXCG/&0+m0UNqI(hErq/jR5K#GW&(;'Ml^>@G@Il^>AWRP_UW]o_#%^oNB._qZ4/8[Ge?O[(OTO<03;90\UQ&Be[*i]Ub3=nq(BJ`k)D-:[9VZI"eGlrc%]9JdtOg-5)GXPmRC:WK=Xp#W3`YFP(%7k4R?%?cY+ge:&4)j7d,R^G,_!L\^Y7aGKTZk02SL7%@lGhIPV#oCaNUgLL4oDm(c$^p%aK8WE-soCoJ[puunpYZL59h4(s%1O!d"m`jP#%RCi3Qh*'m>\pFHsRLXNp7XZ).0*ingmIC9B-mS^(S#&';-N3qQpV*kkl>Eek'7Vmh6U]QBR^pf^Bi*m^r\aZMaXC/XI32C(%)0Rp%f`_1=^Y<T2m>QYW[+NgZ/6'M'Mm\CbY\X$&WqI1-.L;533l=V`H<9HE^+nB7,7LK+iLA1TL8P0Tk\A8tDi,KdWCHnEnO&.JmE`8Z%Z-hfleUCGYZVnEi'AE5^DQr(9ln&C[1B1]OC5YGeBf,a0/@!M$Fo-2bW/@FO&7g>q)U/E`#e7[XEo-On>G!,$-Ul>#Op$?\UD*&X%P=,CU-JNs/;*f0s+#YbOqa)6t-oK_l'/`>S(%Fi"UoK:ce[UtjHg#fo-4CVOR.NOqJ4aFN1V_Eq$F35Y.Dc'h0tdC:)b^nGX%of.%oM4Ek6;KE^psSL,.te`<ddf]WN!T4_L^8$rpXTt(ptNC/Uc8JBQq:AJT<f.0ks;BlHGa0g4%CLnUo<,-@H(u].<6o\Y9Ke''H'2&%RHlr[`SVWMm)[PXQJcsL1.6T',=>%=KI/hF).:!LG0':48eT6<;DTPUir?6,28A1n-o-gR?S2_o7N[,3[HaAJ\$ZEfp$b'>SDWh3%(Hs$#Hph_5N6&B:R&?,&H%YQVrg=t^A1#m)8?@4Y@>:D?1Z?4;mjIDFKNSisj1Chp%?S%WiLCr?SRRab*?12Vj7TB5EVk0*p9BU^%l-.fk+:TZ'Y$oZ+UrtX^'>`.@Nro:pc#-CGh4cT`==JE848UA3gL@K72T9DBhfH$\Vm!p0m*1>pOW834kt(XjiA,CTYk3aTb)=&:%<YKuZjr9^"fW/i:9aH,?VTh!@27f?U:_d2D]6>`HVFVT4"98dU@ra'3UTjH!Gi2ZOngc?DkVmn<8?4qjr&+""0A'Q_P:Z=00psqf%Q\B.tVjdCJ(3t\-UHF5hQNU]c8J_BZiJ*1*!8*\:"1bu85j*dbNFjufq5<?k9Wuh@/c>.D%4kH5'BDE"XONltE*lDX2[H655c!(H%MZWVBG2RXI:SeuDO_Ze@g^L<r/@G!C#Z^kOWu[[b.e!a%r2gC(p?/>0@@Ic3ApX2aB`+57g0/ncVQu"_?Yh!'[77@i.fb$EK?k?c%fSd&tQU,+F.FA*P=Ck]Oj3J<bqm5a@4N]cZVC#[2OpLGE9DGfn@Aic>\l`]j(hUXTTB`mG%"jV_Zpd2kLLDMUh#$I\/.<X2-=*j(%S's(d[fB1XE>\U6RN70O*J^%'LRB0<d?2B@,c9T]9E8oen],(POU^htNl0db12Y=alo9sAXA$cV)"M#o%MM**9Y/IF2TK7q0psqf%2`hN0j;!+-EL6`B1[+u!gDl!ba(3m,^ps)fVWTd3J5mJO^V4@kVt&?R!(Z-_ZgcRYiU>U50a3d1pBL+USPT9^NTn?I*4k(j-!7e_%b@[+_'nm`=RGD$La7JDZZ$k)VWrq1A1QuM/&rljV,oS]41Pn#RBJYK'i=[^qK7]MJp8nId#j6:VcXub7T9X%F")TC2B(Babc_b'@%R5]7pK'gF)1U2[or)e-"Vdg6U`\oem_u7bpK8oefD>nO`8J9u-p),srhoc#?n4YDth9c#-*^V>7rY(d?VXWap=<?WaPC0[gP5Nc+%VsCLP7_:"u)smiYZs"5,U<q'e\/`<6im[GpY'8Q@47Ek">eHru$CL:*CC6qBRpDHAKAY9dR6omdak<46Q9/#/H_SC<-:NU0,ksra%_7r_648@]-n0._];aJ.9;8L!iAl<HDch/?o,lIM@?=0c:GtEG$:[/2$j^10Os61$7C`?u$;Q^,DJdIcZ<N4N2]"mi!n,%)"oZDig%L>rsS"RLBl]?g21Bd-s8caQBK&b.k6A4D6DBLM@OfDAX*0Dq[.K<c@,nd?!@j@8U?-2-hNbOd70J4B1,X3P/'bquEHDgO"o=ENd!%CiKk@Vc.YeBU/WXgJ2otR^;DBcehJ-G'i@f4*e9*4PNX1$[@*W(I_rjag:AF-i@T2ag:AF*-2d2-r\&r+ObD?Kfn*VSo#Xs[ZIC=%e2=(,a8nYhV*Ht^>M=K$CAT56S'l4[r0iVs[iY;cX29cVYu.keS(nIM>,,EmGK$Z5#*)S#T<eaUID.:aXg7eD*>lN,(9+^h7*EM?%f2_*6q(Cq^+?KP<HbHbYgFVPH$bFT7DS]olhlrP<hBk2P2LG@F3[/L"gU$]*Mdh#H=I8"ocuG%HC%GCnC5T]!=fcI4ZI"'>VSF`.%pNL8/`=@oc:%1ZGJ=NUXkDP952IaQ')QeJ7k=IinLM?Fr/DcS++F!S`C:CB-&X--5PS7'7:=56FIkS._&Z\0]b(8RgK+5R\B*Q=1%s'H#0VBN0#)Ld7bj5\10K-8o"">qJK.#f;q,;Eb-`9f*n1Q1#3i\n-Qbq*`gMqcJ82No#f;55s?gdVb4T^^2WDBhlQ'0D-,N"WVq%$?c'oG,G;u+B1r*\>CqeoptQtpgttj6hp>\:rSbCMO`Lr&cT@'2"2*Fn2iJr&Xi,M2"3.#RGFS,KaK[#0uf&OStGVYaep*M]qWmC%gFA]WcH2=#'<XE0pJ4MPm[W)t2&3]D-pMRsok.*$1G,VJG43po[%A&?)gFPZG>8;Z^__,WrHD$8>8K)\hLq?iqqlk`#Q%,ng$JhS%@0t.5ngD_<`dV$rp':W)`h+nd>PO$LkQNads%PJ:9KL'aom0^+6'dVO=s-[#D<ub40`<pMJDk/64*gsl1+V8Z4n4qU2U/BB8J;]k%-2AnaT:I_h9<J'Ra1<.9S:3D3!KO:][6G\,(n&=^#iCI7$6(H#-MVcO=.$DqA5M<Y^1s+-"Z8b*;'sq&Rl7H^8qS%]mh4-c7q<Cb%Qid#+g=UljeG**nkXh2-=\rTDe<naY`]rUSon3=#aM+EZ<gSMT:M?=k%K+]/8n6(*ep@2ZZ]9%lqdq<E="MGP7pg(6nP*Y#X%u6i%qY*`7I5WFg+sTBo8gj=)Y'.R&%f#HnJD>0dP6mhUU"t8q^B^I^C\4Vj!Glgb$J$ggRK9;0dUnrT_X+S'fk![;ES1p9a*qm'-fH!j%dMJSINUL`$2n&"WeA@OeW:K,lp$`F-fr[t4pjLu#9s[K^n7Tj`C"&CONps5)qC=k,EaQ!ARt0Co.?6C"HY$s?hZES_;\J7&OrlRi%[5pec^>\mm!'!]nq([8E-N!EP4s%&:A!=5b@FukZ5.;ebmqmrRffo:&RhWe"hke+PlSEAYEO[-(+n8>6M9jtjRCbD#mTpIh0Q[#$%%c8D?1P]o2nBDreJ(il!Fq)0\_tST*V.&9G0V'7,2L70?Ds$T74MI6(2tQfV*oFI"plaO]isUCdFEi0fo"4[E5qn^PI?W^ah+1H2%<>P)srHEAZYW[d+]d)O+]cRh7!Ihn,G@id?9Utu9]>i;-OkG^1,?br<4V6L;I*M*JQrl(DDZ]6"GliAgdM/_MRpi-al3Pp0n'=IR%QuKP/VhlMU<bm3aC$-VbSPM:Z"[ZhTR&L'%iY:q2pPaogE_XlU#=a?fJdJn(]'(Walus(\s,Q%lNNW?eHsWgP'`sa-Q8YALn:&+U%8B,SJ0;HQA`/+dfHaD$/Q=G8jb(HZrWK!LEa*.XQm63b\(>F$"bB9L.#$[kR7PfgD"C-PmaZJI=.j-m&;-QbPZ='r@*tk($O$MZF%;iAs<U,9<;&cUBqo`K"jlLd@^.AWF3hT],/A7O^>8.D,g>M3A'C&j1n$&0*npO>\K:O=9DYdlI?n-`!M#K8Iu?Unjh6XXUbS6<<W%e*eA:rJ#PpH=ehTm%oQFQY,C.pr?3/A]#599AaeLi*2e6*^TtRPj0f15/ag9/+n+Y?$Fac^oF$!.Y`q=cda^]7-KIs"CI&"It\HO%p<VWEC75_X^Anj3DY2dh@XtouVFc=C%<PCYo)+f/LRX90;/#_nF_84+1*uUHlV;h!4lNsc+-?l]SbPinVE;OhG7N`49tL<4WbQ.G%o,FXRl%qdR?>5ot>Ni6uN@C6Q^GgZl=pX$Y.\^j2q<U%fQi6fq0NSa3_t35XV:d.fA!ijR!'jt"0/3ofSI?1sInmcC-+G@uhscu,%<db<#aJ;K+IF,@eIqEGa*PJ<qT5"co/J@(c\>\Im),:,tEncgbnI`Z^5plPjO4^qPjPs/?;4ifrq*1))3d'%aI*Y0-__8OAhbFJo%Q;5#5JGTdpWlgrR`UbqTWI2-!MuTsP1n*.9/A#V*-1(!<C#c$=27C8rgqKnKEhOXP6AT/Mk.)j=nE5$7!h*(*HeSY]IN9tKBkd0]%=)mofe]TD)-Jr^+`ORZ7r\rE]rbS-RiAr4`'lfQ8WZrk3fn#RkAQ`\jlPQfr9[7taT(.mc;]$iE'JbUN3Xo,t10kQ&=3okLlHGob%F6R:X!p4#k82At0SXn:>14V%C4OE[qOn9eg]]@g)r>@"cP_:>9B2Z>I5bP/u@S1W0Hu678+$sT\"G9Q8Q2\-?;DT$#'Ph,2_p\"=%&.qZiJ%*0[rK)#hk4T>\is>SR',:BT1Z?gP_\3Wb_4$^a(e)L0,Y<_^3_h">3nt'>'J*\cOqYMSAeaLsSB?eb2B'^upd`8Jn1U%0%"*lh?Jr1PiK2,oES=sXt.lboa*(E64$%b!60b6Q#JoIZQAY=ZEH=q@S^rm8iTKofVOcn[5^t-7JDQ)BQFunn*XPHGfhc2)q!b>'P%,$H3E;:HK]581qF1?iP]hn#%uHA"BN!a+Of@<l&bZ/On=q"=oV$mH&$m&1gk"sT1r!Ha<90lt#oPYKsp(7I:%Ns0AU*)3nN$,G5J%O@2'jOea>&GY$7O+R;J,SSplVC;8Z).5F-YP#UP3WR<(()r7*E\h'm+%M39W,.s.6mMT$OaEVPKF>9WuTODA59)2A$p;,'roSus#%R]]3s0q=C'h7)mQck]qV3IEI2J:R=l(03V2Kk@[]W`\_)bq^D?,"rX.:+mYP#BDo"eceH)DZaP-_SH20!@u*e>o%qq!^nN*.d:5\%BOIj@G)8J7IfCZo_Jo`B5S"6C@j[?HXt0#6[>lg9$R-,\T1d'$O&=gG;UGoo_>g%A3meFrc+r;a$B1T(_H1TQ1M^BWM6Q[q*,-T*%IZW9fe[)!Ie"U0)"<WtQ!SE,r&`Xg6?lJXZ(GP7iHo7Z<8fY=:hehujO:8/I8=Y6n,-qeNNF/FR21`DsI_2Jl5T.h\$&s+1WDHDc%)*$o7=p5d6f8XYML_^88&43?D<8RdCa9^Tke_D.-(r&4f4uCSs[Ge^IIKufE]h>U[!PqTb+-gRj"i<gLladb]5U$q+UtBYF:cN1k%WgS'=%)BRb-]3N2Rg_.@QAd&se6g$M/%'0k7Lo`$%k*M>!>^t;I<9m_eJ7\j`:eIN\I0=!@1[:k7WhuZ5_<0Q"tNkjV?;"8Qj;?5%VV&&2$1@uuAmgFONe)u5hA)/L,6+9;mDCZO&*cNk<k20r:K#C^P6]9?0=@umcdCoh+rD<upG[BPNi$9#jCG5'f%>Lp7l(K&.eVdf%UB=Uf0cE;o;.Z>t"]hAQkkPl_MfD_.En-R5E@T'qfghl@)N$e7L>%91IuQdsDRCp_K.N:")bgb\B2[^,V'n1<l6Wn)Td6=se-,Rf%QGf^]E8&gY2bF"@$;-`QNmL&YLc@)*eOo>A1),d*2>ecC4b#cqYK>i1:b)+,]dK"G/i?h'VCn2%*2=BIY3(D4nY@]APbi79$o2FG%okTr#^@lMCBSsSc7>!!h6DS@?7j#r]m1Z"XgMY)=)Cec^\3t8^c.B2(R*g933XB2HT7B,L[+'6S!/@H7:uOUT*:AGergtM!B62+Y%$LSq6#iqdr^Ep=83M@h9."h4P$8<`A!='i9^k[8U\$@7"0OHm=.Q;,$DW?4]R".$D",jE.$$%W!?i4aI>k$\^FL+6m<ki@+JXBpd%A@SLrWmR(s/MUL]X1nZgJG#l=hNk21;SNHk-hTPn<BEfVF9IOt*?;0hN/jRp%oW]bU&2"QW"aA9;U8B:BK"Au$`B,genN(Q(^_6p%38O$piCfjPjG$F<,fNS/=4.+"]qWN90rht1U=dJe$_1Iu-C[]W8b\[L)6.U\A$E[Io`=9>+%S>qFs>Laf7FKe:dJWChFl%dTGWaT%Zt`eaK/:_k*"br.KK?5($#fnn%S&2L9i4*@)m>70[=__ZgM%"E:0$ZpH&8E+&Nf@LSuL[sZm:m`(Xn^C8W"\OW>(DfMd2bqH/:B6%9<hWc/sQI1!>XQ7*uI$78nhcZ3N.E6'"]H(>G-aWD>:,U1.JpUY=Q&*,,<k`V,O`bCRSML$LM1e[q')n'C-BEYq*u3`,JlWY8>L9%)EjeBBJt/T8B(oiP$qYGPf-nC'0[#^YC5A0$l>b#cE5(jh;H5_mW2Nt_d<U&#5Bei;MMi,g6)N<EiIlCq'F,<9p^j;?O#tlnug:C%Ps1A6jf^,0:0VJFm09!cdf_]uoQsUQNC'[+VM.#]?Bk`CHmAo6?uZ2';V9eI5BH3H:&g$6nCj$/@Li_D#2B^)=no_;qSeD"m<<nT%lYj')1eFs3?eEH9Wq]6_n#aKeXoLU7BOh2\_d/:PSM*ULad8V[PjcDah>6RHf#D(@#2Nmd3pj5?9JS:?7VSa6)m4*'`]GV_'O&bb%'uM:m`d*kZr:'R=W1bS`I*khBIPFllGN+?P7HsoU$6;jc&bO+[Yg(cDaV/YPBgaOXAIb$=q.aGL'F4DkU]%FmK7hF@M9u5mlm_*]%1N;O<bLJgR;I;S?QIljc^`",6*;kWQ=O;YR36TECfcKu4_Y#6<1=[0%E(::f8A@R'",!a^mfq<SUD'e&cpIX`/;p]^f<k%@l0t"L%Ko?(gZ!UtJ-ct>)ckOi$@^&F]TntbT0WB#K-J:ApfY_#a;2,m"_q<YVgo.nk6M47[&B([&D!(c`km2%o0_Z>rZNCAU8j/lGa6@&)%K(//.K]1cp@\G5Bo!Qh^FPd)k;10/kP#i7SG_QW[86P4;!_P0J!G.@k2oB)b%2RH\R'<+-j7m/hH%HCDELHqB8r$rRPO!<0ERMaJ%:&M1?<i'tV8D<?W&!.R9qa*[<qD:KRb'eh]*#WQ*PsG!"*4kgH,O*j/o\icN2>XHEV:_'%I<E0E*`dFkOVW$>J-)jdYUT9^m$bd&%ql/4re$g.?[Yh%CV$0Rq>+G>6SUSn_NAWo'9VEn%:[?p*'S1&N#T?3)?pr&[k@!2rLP:2`WSr15RY+AO=4LnR\jATB^hBS<J_>ph%HOCT8?P8h564`^1,#s=DUgVdgold;BVHK,oF68qRcXl=W_HrL'jp_hkJT.U-&`)tDp!,Wc<KE_uMW9XZ#u&JVk&j&h%EPZajB0sO%[BinsqRpL9/V\W3Ik"VY`Nbrb+SLf^+ZE])61(E<.bu8E84bfoNPUL&X4/%]dZ#f>>miu!9XeAu]&Q'PN^8$Xf*aDZM[_RL*?Kf"%?Q5dk<6.d:?qRGd,u]2KoRN;`DkT0Y6kWG1Nlu78gFF1T_7`kO!f+&%OV;;4itP/NRm^#:9e4GsIhPI#;k+e+<7M-&IBX'<bbInD%ZPo9WZ^1<`$PB_u>p_#$=qH=-LqWp*DZ-GR*GaXqU"sL;Kk<\K):$lij#*Y7`UH<'J@[4X,5r4EK7(ms9Do@-DS'>!E$B\4)7V/R%g;ruW'!Oq\`D42$26n.Y=8i&T9hO0$a7t+D%Vj4@iS5`.8sQopbq'7i=5+Lr]kUP^2GNnGF!V]#7IH$Gau6JK62$c'pI;%^o`)OI%2+0L!fsEgk"8-&fK7S[t3"9dNDQ*!J_P9%[;WY,gQbnK_1(J)M9)2r<QrOA=7&cjs$&NH:rQ(A^&*m($"AY6WAR1@YY'!?KXY<j/%$QZ(Fl6or,*@:$gLNV'baf"*\f8kcu(g[u9$T@Z5ZOB`.iUifkX\]0p;CTCD.:oL<8gmXHQVR#iatR?mSTn)T38`2N$qE;4BHp#K%9kME'F!kS$[c3a:/bRu5R*em>gA:DY<Gf1%@!JCub+_u-;ET=O<WF"g@&Sc$USXIOio<Z+QbsDsJM*dFUZoUsTMA.[%0S-(<Ii`e%`g&^%'c_d[l3m!fA?6b>((XBmZpM7f0(+s]rH?_hMMSR_C-hb91Q;>pE?i9Y1bG@e=&h8qTuN3UmK3N5V,"/];k`M#jACW2j?@LT%!n=#tKj@q5_Oup5"fVr,Uah,'kFg=nL*;SI4f=aPZBLL8<)^6We0UH`U*[>1\>hU4Rdsc^TG!=uep8YRe6_fB!(p;aL=[]E-kUcs%PlU2tkTG[oSJGC<AiJ>@?<_dlN$DsfPq!4kb#ALL#&]f0:-e+3*a&(MH]Z-OV:P"SFibV.FK&l.)V1&+YH@PD99A&C;S=-<%6#3#%G#)U=N4M_kjk;9<J]\^@db9G,;7gJ($\!4M_\ema=;MuNX9c,`nq6UGe'VWsWmHE7!5$FXBA#qp)2P56i`+>@iL3l(Q@`fic:<M[%<ksa^_*eA&(5e,-oUY<`]@pD1O#e&)i]*?+\JBt_6rW<fIppoTF70iElSY-&_Aq.k<i^'jL/dG[RT8aNUU+W4WX2Bs)nU%%2a8;D%=+<8]3cDTfjuE'pH@XKa6a3:G>5AD!fUQ//8T"N@eqYoY9f]?qL;7#n^3eJ^oOUPXGq^SHBa?g00@;I=h#'@TYNf.,]p@TmSU+;"%n`OH3kk-FjAtTsURb2Ji[f%T\/>P6dO70If@&5g(']O,9p)C3(q;d,40TuX^M00r)C>m=-E)$V+eDWGBMbF,qNVUuJ5S$n1["*O`%.i\*F6K^>sasIQbVS&tplG]s$Tj(D'j]9o*[3Y2l^o_-g&k]B#9f^Md+]C\'!'Wf[f2Sep3]6Z7@5YH.]cIAg:_tm!e!Nt%7Z^J8%\NSl$]+%<1Y;ml*ga4\@9klRTjFj-#$3N^(fSsMP]>M9@0ru[BFiX<e!:P-NS5_oX6-#p">&.f/qe3;"7-O?Oj8XnF_(\1'fS(e5%rY(bi;6Gh'n0mLWI`jp?&kLZAKc8GW@A-t*2m0g%Wg#t#0F@l9N>eL,"+)8.:J,.FBNIeVs1\D_Pn/YpAfmFuOrPNO;7[TlE2:HX%iMA(a=tjaR`[##`Hk<E/(AU`898\HoomI\E&UIp^Xl$.cKgrD,`Q)r?@.To@m55S`2Af83*ZhQ'F40NcEdIGhU$Xm>8_1'_HsY1P%E:g.?D]6q?*h^o=P6fNS\a#'.ZcYJ?UU_$c9JB&9CsKnVD3L7I9a01EPmB#;GjkH:%T(EUr8TlDp6AI=RLRMTFqfiQ50E"e6'b])%'7W[GHWeh?_;e9/9OmBU$"4aI%lTYFP:b`J-)XXFWkO$rU=3!Gf&_a+C'8==n^/jj6S4KP%:%>=coVj=LpD6W#5\r4K1-tSQ8H^*%He0)^*Z2r%RCR*C?4NYpQ``k_[)Y2fjs$ek*E/2dhrW;=hQsDaF/Doe<pI+8%\cua((<uS><A:),U#:1dI%a734lZIAh7V+)++"0%lsY5u:k_9iPillRfj1)4qA%(k;S.,Z=/!A_<+c:o[p>IgFD6JRG&TFkE``EsD:BM2].,d13rG59lgjY?PWI]Wm4'feCo$W"emJhH%*IX9Kr!"EN(eeVQpEkVp^EF$J%-GQR_nY*IG.9(#Jclb@@C+ns3tD^)=KL<?!J'Lhk4(.0#p;e.dgGH&e.6blTFh`,,,?uE%(fQU%]u%rk)O?E7_k8g!Bc@o^iLU0<<5ieYm@ajFVXOh&[KFGJ%2<g6m8r3'n.+25'K%S[.)!$>fE@4$=K3=r2nIssq]/uK&]ZfhWcFlp%j8*FFD)s"u,F4Q?Od<\'.2k^U#E3Z\Z/?,O`&mg3WN05=?DFp!IIIq65gg\<_-\"O%&0oi`;.:R"r@tb(u2!]he7@if.;e&iu.X#%],DMd$U?/uL_Y10%!Mn0%4]Un1%A"F@Bci[;)6H:U=j8fA=D2ZS)XtrrkWESea0$\bQ886oUr'jVe1)/:j"uY%F+Q>Qa2C%WFSbW%N!qp+]B;ftCKiaPbF?B9q@UD_*m<olqlR>efCmus@;\6>S8AQ%mNR"#OCo@fp9++5:79ptPK2e64h4q]$@1nn'd4H,JKVP7T=NQr%@W?>X3PN)6[GL09FcWLi.'g=-1+-k&Nd@,FK8Yr,/Oh:&)r!I)>Wfau3mcDKm1/d/jU.+ZmXDp;qtZIbmUPSIQ?:PL+-q4kCHLlL%^Q;q@D_aPHb;Z+cY"fs:*.]\^I%@m`G^)oKZghi*:<iGiT(]VL$Vu*gh0<]e[iXcMUAM?E."[7Tp]2]f=+@g?1<mMpm7'81f#tdI%pS<K_5F-=io&O;!CNoSDJHLY^bs&m+9Am:UO5+12E%VesrEN$_@LI$a%(AR*+,]PPUMJD-20feY^+h:1>NlF,[$E^Vs09#!?+qe!%`W#/Jp!LY2B!j,$_quAJq>/4&dPFH?"AWhcrn(mH+4W-kaR4(B?@2%::J+8%E;V55Rn%C=.)Kk.5OG<%e`GB9p??1@CHZPo3%iU\%dqQ@=8?TXEO?1<pm\kIAaMofig^R!-2B(8%!9TV1h2]M+`CuIG[M0/<:*P&<_l\W^r&UJ:JpBA(?l+!rXRs06F^9@HTIL=F#jb;J%!YF'o<u9eZ4Kpd272sZh-hG'h`mgi1>rs4NVhNT)6J,HkbcT^EYSS((GXbM+Pu*.4bTAV(pU-R/QMT@e:&\7oSmB\B:k2Dee0.r*%\&@"G:4AbVmCmJ=E,N+n2JYP'T$^6s!s\8?1J+tj:apI]&)bPH!#aV,KU"q0PpPTK\JIYKTFuGdp7D4c9p]ocf5gQ&nOHmsQ5;>n%jm$=@+SW1*0#(D5l/H1F1gQtl0`,SPl#$O/WSQ`UJ*clO&h0m4Z:pnJ%:H/I>X$L]lqY^R9DKL#-NGZuXR.QThC(/_+bq9;(NSn(%_qZ:Jp14!dMV0u&fgR]]8iC2q9]#(2>"7MDmA.*5DPk$8-Y6a1W).#GD7^lAjI0V63(e(=+8\GnJ[<6pUqP#nDa%GjlLbBRBq%[-%h6i*SQ02OX)9B(DGU%(';u`!s$dkfr9(n7X]['Z8XjrpibNjg`gtpNcU6%_i`lW]+jbQ=*D(G=T!'0^3Sickl#n$,O':LD![#WVu%c^E6K[XOGbaQ#mpOKGqYORR@ZKDeK-h7bUOZb;Riqoh?O@G<\p:]u_D4O<E07mt_S`>4[l1f</?OTn<kY?(nBXnVNNo+dj(gLSTG%'\PV89(d"qgL-_^N'.lSQ%d*X"05.9A#TVkq/QWkYLBoHU\c:<e(7)4a(Xs"EjE:6H`=F$V&r4<6t8;^:]T"3&(l""<-mB4/ftFS%I-T]L'\QY7nrGgl3r*p_N%-B`)n05#qg?-Srir8AJ/G(2."Za/@JL%^a6i!\A[A^XY'2$/!:dPBE0kLDnau?WW?$k`7(DshAZs<0%SS(_^b+qI;X=iW"l/cQ9%_+&(?<64F&/mgr[RIu0aboJd3rAFD]1(29>-@uR\hE0sbLLGp`JY\NfXHcS452<G^8=QhHgPXEED_@e%c+tmkh!so#XK[scY+Vs0Qe0cr;S@Ih(WeLpLcCp*#D57Oe8Ac]ft4C4\Dk?h-!>N-9%-FSMg9&KnMs81B2A6ZD`_?`PM:amg"7V&%UY/qdCaTq%[S^e61AGJd$H4Q2M#LpX-e&=t\rBnZ*FrS]7KJe2MA<X3/9a\!gir=naqg)\YW=>Vl!7k.V)&46dL5Ef$=ZdQr/TWC%'30UY.A@uZ0`YGYS?t$cLo,bX*#,2D)4#+`?q)dTKUkMMaA/;#5?3S,La=Q+;4C;T'qqmJOA`%d#H(D'rOR9JPG!TmWV<]0_SqnT%*RC_(Sd=(-KHdj]:te0D)6a\kLe^ukCa6$?57o<WkC$hKTnmhDGFXthkEIA^7_e1i.@hB,.Vm7J@:1Vo=SYA*b#g.e265Zp8uuk5%;oC[73OTBe@HDPXU=qRa'[]L^D*q7"abCPKY&uR(UFl=WlVsDkKC;Ja`\OSV`i;Im+XPPHXKngdYc%p?AW\IP'G)8s=Bnan`o+C6%&BVcT6TXM:GFSdY6;;+;@*9*ULdJ?u]`U+29/]5AS>4sUo';Z`lufrN"SbbreU)\TS\D2?*Wrb>\78GSl14Le]<Fegn"IgOAH)h[%,T1/f[RpKCZ;l/6Pum]<M;m;orqc=R;e<4&P<!'W$LD)^\K4kpcnSA@(SHB39Wf8T",Gtt__)&?DrngcS)Q?p:C:h4IIRU=!EOm)%OFn+%Unf5ebK&3"9^[0"K/*+`GnJMlmF#"Ge2qL.f1lrUldo`WO,nB>VrDa9E5%PH%Nih8l18_g#]1F/\nY@R"$BCnKip,f)&q@C%p$+<W4W[nkNo\_4:&r_aK;ZWZn]_6APLYe$7GddNkG#&HIOAq9W9qX8mQ8A#I0X]:!Ep;.mf7oYgsqU5S?$"=98Q..!LV.-O/uf/%e(";J[km+1$AB[9B?42K&2hGE^.k49E^+JKZAkJm@^FpK]E7tRPlrqsq8%';2$jaFB%TVR)-^i>)5+c;<e5ZHc[oHQirM6Pf@\6K%d_Q+#o)fhEkKDPf[C^7LZ*V-;cBXYi(16,C/Gj\.E.ic^1XAAW!0J@F8h\!<_25J[e\u5@Lmq>J[%j^DK)pi7:#K.kp:o/S2[u"$%(QYm&U"W]/a3+sbgV;e6^`Ca""LZRGg;.+>XZY=-'P39c[;LJ!jQ]f^q`mmmEn!]5YAbWT<1sf['uBRU[Iin,='X_[Bm$,2Dte`X%&\aN.B7F]F1%C@bW[C<)MrGenjfWa'3r&Zc8G_>IFButie?fb+@[EAdm_)sV&gt_bNo;5;@h.#e4.)B$gZ.)/g<T]@Mmfp_ia;uN%a-l\N2.5,SlNY[Q^duXik+14t1Ht#R!+M_SC(a@"S3^oI)po/RnN$5)m[b.dl-.A_SbU1Xm^;PXF\q5o2NR=hJc#4#B8(c*0(%8>%JpH%8WP,>m*mF_SJaI-C'&f"SUCTVMmCm`?BTi0!+B1W[cN4)DmcIk;A7]]NC,p/=P#9?`r+<WLr0]0E$$W%pN@%MIgnV]!%V!"k%[KeKQ&\_D0l>A,,e8(@-mPP*ajBgO[;=s!XJn!2%\I'RII(@ic&BMPg?mQUiMTsC4/pU6pmG'k,%RS,'nkELf9\c*tH$MdL"S8q:%*qaUEb?A_#j6Ys@Y+j)*I%d*26\Ae:`B#)=,F>prgsbJt/105lk9#eW?$1,`\SY>uhJ=R5R\qpCo,XLC/;D1_P<&*\pOLb[h>GtV%>;p7IA)4tt`%EZiV"Q]a4rTp`K?EN:`biO#8s.b`n'5!$&Yu\@f'h5n"P]`aeXAl?q!#IAR(rOCSCfhd608<^E5F0A1+IKQ5+OXD%kH::%AYA71(\9:Jq^GT"kN\a3IU,#%ViuJlLO?M^>d9\iC1QlmndYdP5L4HcB@lD=aW=t[4uPCqXlu>rj88*#A`@F!nXQV3)8B;X%o3sIn'QpdR!%[2B'c8?[=,!!c[tMFnC?M>q-M_e%mpigV)B[mBp!]m4k;?!U>d(2>@#BLu<aP]['qu>U@f&Po:(A]TKW\\@OO%C(%ArEU?p%!RXmVJENm;7#kEY(+9*h4$CP=o1PX0.^aQ&StLnhF8.5*dGgqrL.FADbktS3U\TWJ)$PXa`2$2U3tEBYmFUAmc@IrJBq,%m/pabghHVj]_=.j2AWmW`qF+jDkdjUfNn2o5C8^0hUS_q<n/kY<hoMQ402a(1X$<Y)jpE`KfPegLl4UlB_R0EGV&Jd,?UMT3*9k7%m,mhI\t47SG[e1B:-8p.TuO)5$<_cg=C%0LU3kNr=cC#/e\.6O,jm`pb?GieWk>]@._I;`PlQ8KO87t2]den*%aoF5Q`jq#US5cK%ko0M^/shpe/;n*6:^;?A7]FmKEM<_ImE\:h"`ghDaJPS[M7@bS$fkE-]q!S^L<=3*pN4->k4m,$T)"L_!@0ISCDEcR"R%>;`7jNg%h)kdG=S[:;I;`o!Es$MqZV;u2J.OO*bIsYZF#SSkYl2Wo@puC+GnqgUp`o.erU:6*+*kuPGO1n([G_^VFTQZKoE&tDmWeoQ#+:oA%/$.M@Hg0QPZ=`BDqtR7YX0q_Fo:?+&=VOF&oCl<Rr[L6:qXKk.EN6a"Ta9G]1[/PTc6"obQ.8?W5PZI@("1A#4:6ktedIjn\<XOC%Q;'L(NfUX^MQ''NP[]>/=cX=Vd[0RZK\f+Jj=_n5m6Z+H_aZ]/gnE)R%*5&QE<X_Okn;.eGjb?G4q"0_Q%?Bpqo-1a*mo<8F5F&6%k#U)*i5/g:2EV.&L].>,E&V>09<Ufd'^(W0F3iRseR$2*qkb!7ZOf99V>7U@Z\:`KGZlRb3XcQP2ra-ES[iAA?<#/ln=*ioTfp%F%='E\B_7tW9X]TtiYnpMVBcdP;+$l_c4ih+@mqF,;\]RFSPp[tN83=)4meT)8!Pl4M44de2-Q-Zq??QH;/g&W:bC#hGhTf3ISs'tg%U1LNRI%C^Q&&(9$>lZic<)+k/5OM&8T2K(1]_>-cHRFLp0`-3Ta:ppePgE0;pJ,f"o=$=#Wnh+8V8DN?3Xa.S-3@G/]dDHLg_BSL%[CQO^*aP0g22<;tWP[fo]]$X:X>.'8maUNUkj^iTSn,3/0-1qfLM"+sl-pGdO^dK\1TgK&:QqW^GL604\C/_WW0\HL9Ah]]cAUpb%s,%^o-qQFCfP5MZg<-e<#b,Yha(^3N[fF]4[OqU":2;3bcI8oK'Id?\<:^jh+QcV+]QEb0(Od@LB3K(D-3^NR0pD:8HZfd/\ma=%%[fJ;Th#O<KU"!Gb,Ta%9!0d<L9[h'RI/]@sD[T5:NgO8O);s`Z:YXroUFNBZ$:rNg^7"fmZac>`XBkI=8'tuNDM&u[qaThIcpFU,%^:/2DVtGGe#M/[CnTs2*_5_+K]MO7HDEWEQq>rKa[7-P'nPR%k*'W_-g%[kP"W/Z<o#B@(V-j#f9XWdsU\2n(Hh1.h(,I<-&,BJ(%6\K]6!6X7YR]A)a(>.J`DnGMeN$g0i1nN<+_/+3p\W,d['&4"$Zd0#md\_R]^^+XdH!0.KS)Zmt[GUAf@fsN>3tuT,\gt8]\`9H_%O.<`Q4E!n1ZMAu(5Xj9d5^Y[@fT"&L&oML;Q3Y^c_*R%VpCo.E/W43+AfQ^G7?K9m@o*<.Gq\lW!r]7in)(%cO82C.I?T"P/i@In%9,Cj%bgNo+,,`p>aeQBP7F2f\p?c;SUQ@+rFZ*",IE<BGAD%KV^W]]a_L$1.Of3;)FC*2Kf+7J!GS4"*!KJfJTPbCjWE=Nh`^9B]%fKp9&hK.d##DkdMT17Ru(Vo$4No^W8oI8.Zjd"'ek#P/5:i$\MJUf9Db;J><L*@(,TGR3fj@UQrjB-7DpM,kWlM'k$8nF92=6WBB%j9N<gZ1;dUR3@PGb?H@ioqr5fpK=M-"D8=OJF7i%!/g/kX<-IQ\)J^l[[i'L]9geR,U7I*EM:$/3GP(')[Pq8@=a[s%X*EfZO91n%nOEcm8W/U,(XX:/:L!0cZ'GB[HF7(8OAXpp?X0bsNooV[)$?^ULLdSQl=m%,$BZ!>_Zj>K%+\Nhl2J)]X%Q6(.!4Me^K*dO-3^0^%jo'Y@o:/"Y?V)-A&!$]AkH"RWkLB;.?0:DEUWp[!qXoRP(EH720A4j`(!_m,lW[d8mWtc^6e29[f_r2Ld7qF**Tsu2`nc5l\(VAn%)b7d<WI_h'NP5DdmqH3U5>jISl#%)PODYio\YHQdUq,Z#D_YV$XOlAZJfAH+/T&`c_23Ymp=bfYdf%,OD*H#:l#N):!FBCJGh@k?%OI"=(_&/[DKoW#hpGSYH10j^\9]hpQT.&XdQ^W7-%2b0C`>[[L`YLhl@Z':U9D^(Wj#BqaDMc,?fqZP;>E7Oq;u*t+-LoZi$&e`I%N=<gQ!:R,6OP.Y/__U/:[FOP4N`_7JOa9gKAQMI]'=?nQ\URW4LQU$k8cR\.T%QTLRuG5IkTFV!S3pB"g+q8P_CtGdhs<3]9egLu%'8baom53`$XHMU"<jpMdNmJiW+`$"f\@*hlfVQ`[o_Y;TB.Fq!MNr730HFLuL1S,Ma#mhk!;mCpkqq,_c#,1@26N.l;?m`empZ!K%QmlZeEtG5=L7@ib0aL*k@LQkmC#;8@`21#_n^-:L:@\VpI/cfj8?AB%J/[_#n2H6X]%E\K%i>(\keea\>OH'QgU.!0Y].-)!+raq%dD&RpgR%9]g^8J64VpaB!s9!gf(Z;WQ*YgdDZ-[<55hG#kLTJKV7H9JgY?%m32MGLp0AAT&!l;!"k0<ZVdOJSGHabjm*M.7SH9_*%FcR"FU"qKa.rk&&!k1aeGIB$dp!27<hD*pD8KDX'`!b!VF.JX>mtohJiN?G<:2a4UeMPl)''J6h$kcIV;=QD7*;i>SW#p'ckN)L1%gU2;Lbk`X`/H_G)V@gdfmlUH`i_S;/\oUZj3GNhP5%go/:NTP4eF(2i1\c%+8^s'oEZ.):]!B!%]p9b0WFI-gPS=b'_k\4'e:-JE%hReS55sqpeLN79/=anMrm`"FS<.AatIr<@N)sWZM/k^&j:7hR+SmL8G7^n[Y[soYf<]btEVpF^XdB1lMKk;WNDfc>W!2J;N\VKUi%oj,tUdu3VTSW3!RO]//nRoO(DV:-\DcW:p,R8[a'RCc[t5cgP<Fuj!/Z&@E!b*c2+7%o!l1HG^2@d]OfL_NMHZs0FmM#E&)/*B\%%@scCSQ2%I[VdNgPIgW:2D/jjS2QQI^Y?=5`JgFRA>A*V(I\MkJ@&GN-EuKO9[SO5FTMn;e70](+o2`]8dq&&t^?=(H+?qMJY+7T_%76oToQ#/1\2!WZKBfGuY]6/G88.Tp-F/N76dI&d!,bn+sUM9-smf+CS/(*1.-`9_k[Pfep0P)%955P#D;l<I/0R"$qiHVEe8Ds;1%MiTQ)\I5<1M1X5:Ep[u5oN^0ASVA<j\2&7PZ%'#tml[X`2al^iEErX:EZJA^h<"SONP'J?W6o<-K"=[*]U(5c>k=$F"\Ycf42f5a%:W#q/#;A;cs599g0&tG1ERLkFW)G)r/`!-r;lBHSMHd")`-LsejP9"io)3Pj0$1Os5qf1kdOEF$iJKZZfk6<_QVJV>U3p'HETsjf%/"Q#kE1r(4Y1H(FiS&!K4A3>tFa?S`5;2KX3X*2Fh4F,Zf?q.8?,o]Y@b48US_g0;RgX,)2Mh8'D'8YFEBQAtJ'M%qUQ1m/<T[(_%4+6""/g&b-KtSnj540'0cY:D0e+:!Cc70CoNh-0BDkjJ+cJLdg-BL]?^iaF1:6l:,GM)06!7RH:HY`5PXX`OVj23L5qIKJ,mIZrV%7@gH)+*IJN_R3q(.F@e9!t0Z]MJF//0+U-M+6:pl,')O"]`anoFmYRYcT23e8u:;!m[?ia7Yo#"Kk[K`hSt[X4BrHnr)Ec@)BTZH%Oh#$Xb2%VD$[pMRcsh_XgePe*PYQGEj-Zstq=7Bc&J+O%e]EZY;l\H@UU%Q_m$&@&oU:4;7=O+U[T5]'7rrhTbAr&+e#LBQmHYb2%+4f8_dac7&nT@*T!P_iR]!_g;G=cuV9'!Hrle9rgHVhSLllA3%hld7fr5iOG`T(b$8(IS(l!3g[T7*X+b[TB+lZrO/Vu,)o2:!4K%#:N'+hXVQYf&]Qhh"@`'>Gj<S[X[H_PHV1"&+07hS^E8Zf50@ClcimYdGlbS(c<`(nGV8skPk-<q69#\p$"VcDL<J#fQ3:fF`76V%qCK4,"j27+a6BWs0p9)-$1=q)j7OqsY8Np?gqTHJd#nXQaRbIP:"QQf9-*99p$:D]=uN@.I?=a_2RdqBo<*MFfO`q[7H@Y'Y8s);%#0"f_mY!3l?IDS]AZGpodqN#$5/Ll#rU%YQY3m;MCmT53A2]W2]#cO[8#>#/>,e$Lbq8V)Du7Me6uP(i\:#pX%.=W*=BIJgR)oA8%82Rb*.ps:Yo0B&=?<Um34ARPI(Lr?i"oTDSVE51X14Xf&6D>4k3Ho(^/9.+n0*<m&[L^mo>[I(TVbVe2h]Q2d7=L7iVsH_u!^3)%%UK^BhGE8nt!n4SF]6=V\*6Us_FpgI(=09sMVRb0X\J91`9PMmJhI;X'F]r!Q=thu@ScuM$oknJ:Vo^l2rAU9/AQGDX4.S#1EJltl%m1rk)/tE&n&6Srs>WTQFEU=Iu1;CTF]&JUKJ!Wo]B`MrV_6)0ZUJo.sZOlouptED[BN&$"dN\V#Y5]89c)&tXKRNQ"C=65d"![8F%FX-9Z:R.6efJ;Lk$mIDuS&*1r189d@QJ(6kDmRsa/o_0=6JDTK46q/+*s;P<r5clYZb!aYU_:@c!R!))D?<4#Y,l31m[5g7n66CB%%J$H1RpZ<R?PUDL9+b_+pK+a4'I-`I^bhYB;Fdccg,$d@JC#O$P*(RjA#C!BPuW_[5r$EE5]nd-]aps&-*E#XS4UAM\Hr,<TMoLR%.5D,^GfZ#aipqXq5g"oV^`i1-,O1?_;or`MQ6@!SSjQ[(f<<8<pu=ZJq:1jj3jNf?d<DA]@rJ*B5D7d]iDnY%"8W1182"j%T,8D+%is1)/c/8*)e,7&8\',uUcPs2dj+&4.?3AHE)Bj*h5skJu?3_X>qdP(I,i/265@@TO>pAl9h0gZ^LE]#cen,nSF)5qW;9VZ.(O8-5%6e&G^D']]Y/=YkF5OPUV78MbO4W<eTp]m=K]62dn5^gE`!lEVD`g7C7CligckY3.f>2)R=dU*3arH)>CS`>/!il^FHp!h;-3t#pr%Y#OD#%]IA/SPU9`8fuQ+2_Iig:fDUPAI7mg0bCCm]Najg4Q_@Jrpc.4q[SNIs-S_t&2Hn-CkSHCB3sa^)d:hg')ZaKlBf=UrgYA$%jSW;&_Uuq=BPAc9@F`hpW4HfR:D4Z38l3PG=QZ2>E`)W^W)1DQR#UQfq>E0$h\GK-hi6qg^+,mEotC/Rd9,%'7mBrjLiu6=b<fLV%@%]1ErY$2I-I`b.*`sA8!?%i^$i7S-LqTk-^rS"tMW9:'k"dF-,SP+Eg9tFB)&2\0'#dbU9Zb#@'kS%@MOj)^HpIAY5.R-X=`?8)%FCW_K@^KgRpJfIC0k&9ZWXK+3gilXhTGIk1ajYRi\'+#%@]c*LY.?:K3%/e'9ipcIUVRi]2!A1ejnY`*!.:"9RQk_CcI_2;<Ia0V%6dD<Ha%@N+F_klPiE@s\OS:dsY_;b\6@jY!j.mMP5)N4tU_l65`Dj7H0!t:;a7]+UW%AC&Dm(F>@i\L9gR=nuE&)+_jB->E%bndB%k/u9XX!^(<=8$eR"$4S<5Lsh6ASujW;5aReZXb#7ZT[GF*C:HHXtX.8935A)HoN!Z+;P1m=r4n?E>XKBj4X^sA6XYZfPJa)#%HRk%FcXkh2\bD$q[P+@!/7R1Q3suNeWml2E6Lk,\/W]7JAiV9VU7SM?[K:u;6aOL_]"%d57_%jCM27&@h9R[!A71(%p'e?j:Aj5a]/?)%r][1Z!4IK?>':MY/iLpP0=it]r92u&nu4At,7trXr68:fgK1M8/UrR7onLE2Hl<?#8CWtjD?Ig5>^URrp3T82;=c>n-Ph?>(daV.%_I@NJ`;gb1Z7iXZ*d)<N:+u1/^;#lo'4!p:P1Gb\`J96qd#/jj7G#q?,!h`V,C;u43=mkUP')rcXWskM59+E3e3M9qQ#6U4Vh*LN%Z=eDLa2PLBaeQT#V&Tgcre%X^Yg-*,ca_:5g>'Z'qh-.WKW/lXmkJ8ohXMLt_Z8tH6u8A]JL/`P25Lt=VKCu<;TrrNqf^n,9%1CR%CC<?(ikMEQ`u]S*^1u"-;;C!;=N60O3a'=PW,7L=0:cUK"*)r'ZUP-dM3']!H*-[J6gs7R)[[b#b&\3rTnn&K'26lFFW507!<C3X%L*@Ifn[E(j#8E``8m]<<A`76dp&)g`;Wc)D+`+lF6?m@g'k)u(_AiQq>P@#j3s]SrMo.1bnQ#p3]/R#h^+Bf)8R\)G\B>ONl++[9%mhAs!KHf&f0KIJdMKZEuJMZjl"bJM.p[ju<!1H[eQAn,e.T*#94i62tRl>)g2dokERr`Cs.Ys!Ug^=0.`hRG0)Z(tdqC+c.*hOr3%95Q%S3m<N8!;2Rif@$<["(_rT9j_B2/.'B:p0Be!M<;<PSK0[h0t]mVTMG?WLqaeDO_EZ?EGf;[l1Sj+M.Z6@R("e@1^IYhU,f>1%?T<T_RVjS-i/B;9+;@PEl#BAff#rcPO5k$a==;>9K2sl?p"6d\Q-qCnb)_gq6%f11)Iijbo?>ba?"Xj1>!#.Q-IbO@ibgA6;"j9S%Qi2>^0aiQ[\7.ohD<o-cq8Z!L`s7frY>smt*,qu&X[+?Y9K3'65WH_k&0*6fg35C!#EMP?]Nuqq*E]O2esc:0QsCXpILKsY:_q]a%G4t^(*(u7UnR[7g\aB9=I/)FBs"m.M?Q0@DQ!r@dcnDjej08!gX?#L]i*$Q+nZqV'[2=EMJphQlU?P"jZZ$b#XS0>s/p,k00sfgJ%L,S\TL"8E$+"K&ND0Utc*6D1s)OAg0m%Fm5kHHXVJQiti40\&sRR^s:VSS@3&W84([,Pt#)S@)J?uS%)p4gDFm_!Cs.KElFmSWU!%@f+`ri&6GrE\:^0/=T^*V</V9K$4f##[IZpR>:]40IRHqe_el`X//G?VNt%3Q0rn6^!NTt$q.*rTC)!6n!$e_*^RS-k#,Y\Y)DCZ%N2LLnYi0bD*65H[*hSB=6;m&W`KR]tKY=mc6A0EJ^cHk$J@V$an2pa1&VIKm#j:R^gQ5ZA"?I(Rb?bP9Wb_\`ie2CH/1fIp>lCAA%jmEN.V,1\UdEA'@jlc#t;0(m51[&Ya2[l6EkFFo:m-p%,6g("+L[lt9O@/3%6"eFX*'T/'4+f."),Ca5G6Zkg[c!6-FP[mW5['0o%LX%u6DD5:6\/[Qu$p)Q\Je<%e]JJcQ4,N6@6fcVimT5F?6YAKB4K,Hk1[qI0m>es9CUWQa1U-:VqmIYN[@$EUZls"oo8+56igoDF%S0HT7/p53U(tKkYlVAlEh_o-!p=?4lU2X4V.X@XBZd[$-:E3u4=V^nnd3:7_]Hk-fgUbEab'NV?LS`qlT/5Jl3JWNb&lZp^7'6S&%h)6OV_gU+,&T"3=7'8ZJ,tQISS([/<>R+$Y!n`;%,ak<&^ZW7(ZoVaLiZ<ukMp:5Kc%UP^`W3D.N)UuCe3]9_LI'^Yh0_-[6^Yu5%IM$(K82!Y[)`^l?\)-Y^q=+dO^>\#;L,c<rSGRjV%%kOc"D_#F?nFj$;"4(uZ,B#Gk4C]&8FYD@1aLijdu\L2BncEQ16SjCB81O0%LuiV1!%2_th*baHd<f.G^Sg/_QkKJ#>J%g3B+"pe"*60.>\DYIO3`,p_2tB+jmhk)q(H^O7PRfiX=#$*BA`k;(W%=I\.6WJ3nsSC%k4)S!QsNiMprjh=@!^tJA+O>Mh`E2TYq6%Xo=bCE"dIL3A-gEV(5*gjJi[IZ'_BP9#tcq5XcVHTZUqN38D4-[]q#[UVUptoPIZ)O%AiMjC<H#pBP3nboA2(V'#et19)ZYYAZ/2YD>p<kl`ENuRn<)"agQ+ehY3=6XhLW/BVsPgUKhr<HH^O6(^)MU=;Zn-tm@"gQP@0#T%8DW<I>:3^;4E7Dnj31pc_9JVHrQ0WP_KkM=fWsT9eXP<b`9RH^8mabh`O$j1p,[[E+tM(ta3&-e\nCm7fbqe%p.7L>8WU2MSH/gj%^O7`'GLu#om'3Hp`6KDNHRo`K+(B3%FoTFG:;+'s;<VP$NeJ[n_E5YH`e>Uf"r/[5UCYHZku@s'-mI\+,l=,^,L?`I,3.Z/=X,]o%,6+7=7V%M\7:c$0V]Bimk!okb[#RhO`=V8ojuFQFQgeH#)!O&=)s$ROW#:%qlY,@8$qs$0$p4[):[)Q6Ll<o1'rI[a)Nd>=H.Ie1%gDtKeKLlA?c3Zqp%_E^+Vrn1Tc@NKA'RTO9eD70]cY4:;@i<p>$_ul1*oii&0V,apo3+2q,MsH;CZLJ5kic_oDFaCs6kOKoDHtCo%*F0LeTB;?TE6b^!"+0.[%31gZZn?atl@PU5+7t^=@B`X#I*Z7eg2L.E)=uL,e6sH,jF:MYhHh(;5+KrII:LET;tcC@)0+]^LC:i9%L<53l3hZm:fuBKl2p)G,r-UK-N7@CZ_a0?%*1>aAq/BAKklttRHoV(*%Eqe2iUYr4cG5K$+)]F=pH?q`6p@,jAj+_R:3PR0iaMGt%7Q;&qZRoVVfso<q?5[YQ.(k$]iS*a,B6o+G=rYn[YX*gn)3&mC"bPd*JJH%W1I@,8k.a/@Qs4jMGEJW\3XZVTDUSrAiq]`5aG-A3%b(NNf#k6J#aI*7a)lI-@d5[.5,>bV2EO"K1e'[6Lei9K"OD_EONt5pop!MG(6Er9(0]&i3-V,GW>:(/>1[7sV#`=*O#1'YXJ@TO/%]%od5&XQgI\.TXUGb+Vsd^D5m>r,A#5K8kK9$[<=U4T#"9$Z2i`Xst(aa"*B$2)G3($7rDU`45niFYb$WAe>08A,m>7dA6#1/`%\%Y(8KVHl2Zped8Zg")U'&i,HbN+Ig9gL(;g#_d'8nDZtlBg31-.E!e3&/m<'rWGk5["[,7'SGmu6,Hu0a_P+K9^\9p$.\*8@3VHE3%Vl7K-;rJErBf-@u;rR3S6fSefa5#rf2o7qOf]P_KVqZ_bZG_L1:sE]\!3e1@49;e?i&-7!Z!jqX%Vm^(6P@<(I\/]Q>d"GlAY\..%._T64!=m5Y,-3.9Jt,+a\/2jskI@&4),OZ:V7NjOZ1c/[h"p\bIP-q`TBBZRHlbIaSqXr8c)nbZ/AiQVF)0>$dG0'91(/TI-T1]g%I6*^2"'0nuOlqkWV^;(ZabXcq>"aS_1J_lWc?X&,o1NE9`Pl=.)0Te"eE_f]VsM:;<N#ZNQL&e`O^Zk40DtIbYcFC]>WZ48O'\i(%S^sk[G4oaR9Zbe`/_P""9f.Nt4TTB^A$Mk?C<s+o<pj3S"U*\*c`eW$4E9N3.=.'DZ:-pgjdg[/fQA)+:A<@i>T94D^;hTj\Mq"l%pu5VNSh.Ks$M^HE[57!'leL>qXDF;)Ok707^SqmOP.e',>jEQif4mMD>A[`'m)$earq>-V?LgfrGPXJ90^7dUD)4Vg/Y)%_Q%k",%q^Y657rAS";R9Q2%XUSS3PTA0#PGLZ4''>^JpE<m5Pg*#huIDmgf&R$-Eus,X)Yctk@FO[p6*GfP2))84*&5.iH"]`,e_OA^j"1,%?!T(<F+)p6^5_Ll3S20t\i#M=1:ZTGU<4U-:?Ri"@r:(@%H%aG@G=9nRckSY.<5/pe+XjtLD.r/G+*1=NA6pJ5!g*1*]X]dOA4p!%#AB^Jpp0.S!a_2%36.1Vk7hr[\9W,5Cc\Hr+SIUKUM&%9jjL]qFYeD'*IcLaP\`Ac:ul:KKK*Pl3T\\7T2?RTS'G`?7Yt<01Rl\3%DmnrREFdOdLo$#,VnL^0ZK[m"l.g;KL<l_Q]P@':A)kk3F.-CPh]GoXSPq/s^i%$1flU!"F@a9-24Mm*rXci'24Mn3;ArIlSJ*F'%*T!Krl't$7^F:-ZRr3$Vo<emW:i*XX3Z![53Le;CQOZ*t$9Oa&8M5b;Sk\C49,I/I`\D-bSU8Z'34%k>Ekb<)l^5!BHu>Jq;`:2q%%-\PofWs`qrQ5_Ykra.Ga-]Ta`9!S7&@iXSE(J)91Si^Gee==u;n!CK3e2tdYASCROoXkB>QB?8ReW,V-dMQj(IPi:k@F(,=Vnuh%=6F$upqBgb9;c@Q+dr%eE9QA$=?%pa_=oIP\o65@$D/L+U;6"gHbX];*>/i<RkdpT#3BIup^B`X0OR`0m-H[,'BTm*_O*cheK`f9%ff^OH<9:SrM&-@8m?p&$@bqXO"Yn+>T=OQ=B>ff-!M?oDGqI59d+sdTNs5t&Im,m61Nso'PDt@c7S$HUT",e#U58Kd>mTa5b,EYA%l"Au)2NA=(NI9AGZ20LJEJ#DM_o@CW&1h4\"hf9%@3iVA9lA""Z")B1^d1e$nMmQ\+HaraGn5&K)U,`/oGW1V1ckLThiJAuiFKb#%A>L<Y*]jdPL^_u70[2;e$X8)U7)I-Qbu%Nu8mCi*)GebsoKX4q$ZnGCfG`da-ie'gVkJu"bgTDFBcb,!cJ+EtR?&jC-hh4M2TNu*%aD_FWcB40p`.YH\jCiAu,d-(<:53bo$\F7G8P@:Gg6Ft;G?Z-KXagBgB"ghB,NGSY.Ep#Ib=YCM][W5qXES\YNhg;3K74QA\JJ)R%iOup[(])n$[bXkD>\4=>Da$/XS[u'-_g5K%mfgVs]DF<`lrT,3pDsj9q&$o;E'Mlu23,pe"D&"N"<]Z)',d<8G9AljO)#2eaKV,i%[(cY#Qce7(L4eY=?m]3gj5[m^ZD$.`GBiqKUV:\[c[E^jSA6f5%;Uq.Hf<7+o5T"5Zp92Qe`22?QVW;3;Vl*_7)hlFmVFlZ$[7UD%#4i"6r"ndU\CDR25@%`'No;A+DT8#FH\9N^$bm+B=F9)q<TCgdr:i"hrD]Z<a4M4ACB5-IBNDo)<skJ5&^5gY\,p=8`**/[o3Sq7%q<d[^4SOhKok9>*;?\k9ksZY(6Vunef*Xr#fFVH`i;1e]:(iajMetj:Y>*&.@X=1(o.osWEsS/JgE+4Rgg=Tn0XY]OdRl6;4FSTD%am3%/^X>Pih$-J\;L@pReE@_5S%PP..W]qQZfejP001/s0N;E%)deWkSPt9DiE6<.ER!:QHQS\6mF\B/ih#1F5IE5qePtfs<rc>5%__T-6@IBX@>_dbW&,3V)ceBDsMf`HSmSV.u*Cl-j@BdZ0[3o8#1F/t@#nrTd<f]12Pb\Q5qFYhp0=CB+C,sPUhhl/dhsj@&8DLq#%WoD]thT^]%U.[u<'[.?JRZ"aArg##\#W"WGceL**8fb74Zb40kXXmemRltb,C>,H7Mf[3!f1q/hL-9bG1_`e.\nfca05bKKcQ8YF%cR%C/h;=Rf9T^iP)W&=9gOF<<:%QG]93pmiRQAttdf@?`QK)TKat4&Uq6mkYZeBCl_K4'$"6=kV/6^8hqtG3jQ>jnt7,AU/'t6pA%VbU*$4X)SbiIn8#7/D5:i7dGNirXSh7c&:;W@<JSMX05aD,qfq`_cEn2_>3>?c/fYMKDe[$R-)!q=Eu6N-]OEjZR(1T-u48_!KQQ%(URM0g/Ou:qfI;OT^?PK)VD.Ai_mt.+#FNj*T7a>:;A)Amb'heX481s0uJG$bP/smD50bWj`+(5$?WYte^?n\NA()I0ZB"s!BLr9%&"kqSK_2(hZL?NWfNDq)N`LENJ?AWYV$0ssS*Sr+iL]Ff.;gb.2DO^-jB-t!`Iei[Gt=57+1<-CJe=Oj(V_r#e'\EOQ1N[2S$9J.%D\'LKJtgJ!Lb[ehg[ed,Lr&3U"h2/%IX9;#BAZn7Y+<W&=aa-<]ZUL85'FEl)'uG^]oeb5bi*C+qS&ok**G0k9=ugkTe<%Hl:O=/%EF%6'60Y;S*9&Z^:NGbS:_)=s=0N^5G204>OtacND1>5CEa_)>/>>*g9Y#4/2&@eT:iNuQhu(&*7aTGlh6o4dJ=s@>FR+N1cB"IN%Q?%JO([I(ee)=e`ZuYq0ZGHFY7S#aa2;ZRO-lOg&O6jgAmZEu:_m%._K<iRFT2\)%7)27kr-dp2cF-LYPo:U^9'(.deA55qp'gBf%2=&H*,GcgR!EAgf`I\*%o7"G9(rcDnGlgjeBBM#UP,^nh&&gq<)6mi2Io1a,gP7CaJ@NlUig6@F!-*&[Z#8*2"+gEFT)LqE:g&=b%ilT)M!UBXZj8`@j?k8\0LmnJ`MN!]%LmnJ`)CZ%*Q_$_m&"Nl[Rfd?uOb73GH5MRC]5QP/JEgePZ,1aMci+9ehg(I4\rqKI[YB6q%cf/+*[7C$4UMs^mPgAfhp[LAgLMgeOorP=\fH93rNP^\J;*N$jOg.-n2jX1gI37RWh)FaZ-kG'8)3++@:a<a@kP_F<(c&YAFuPZc%]70O!6]LZ>T7P]5mY5b1f?ZN.A@IbXIFlgB<PP6qL2qOjcT>CoQ<tO%>sIdZrGYdmer`DI=8a+WBcc8>^JQet`c50Zc/]dA,*L]]%I_jmEFFVmq5hpC5GQ"UaNqk_'i-5-OT26Qj>sG6/7/sT46/VA,>KPoNf?[[KKm^>[E8U?+a@[Dh]7*r_QLh/+p,N)Vn+m2pA&GtF%kELudNgt=Z]7/U5r86NRodO,44hbpKlfXi6Y4#JPpo^7`0fS9"BS+"bkO#5XT!]X->sDt^emA%@c[3WXf?]qN`_PN,n+q;O\./tX%.Drjb(F1MJ>^6kR=8cB@bCK'XNPbSfn+q=,8ZnI:;Fc?!I>^UGp\;btNg2T`]7'quVems?9,d>+5OV\P']'r1>sId[5q"L[GQ$;4%]CMtoB?!buGQ#2KRiUVC&F]H!3CPY"]7/lUe:Xt$%K@JVON05lhW#Q+%8BYA'97<aKDr$G8,UQW0A`Qh`k-]9DU]Qt>sE7_>*gof%^?_][D`K/3R(ZSVOL3KKIbnZH3c@$5GQ#0]oc)5(I"#5.\F8sI(<nVkiu@Ak57NKk(2fd$<t=]qi?cB'`l<dYf?ZMr??n2<oQU7=%1q3=]T:6f.qQ?IbX+$q:pQ=>*o6/lZk9]o8Ibq:)N=`S+;@N">jG<:$3TWB6k9LQ7Y+Oa9FRRuQ[X$YPr<<]uo;d>C\Y9,^olHL&%P:-]*>Yit>8a6,TT6EW'boRi#>sG5l1a@D7),Uh3Y+L2em5WtqoA3_+hqKs0]7)ej3kjnBG2>"<]7+':_A"$`I.VRN$K<TbHZd["%<Z"n&nR7TH[a6Yc&DDR%$LN-Z]N=*Yf#5OZm?DS@*5hUbBj0.1RV_g<@RVuO,ZleBJpahtA5Le<Mo+8YK2cZ)WLprIgrt>T;Fdk[%,%bD3S'()&4l&Qi,&N@.>M^J0F/r4'@ZK.jSZZff2_o/1gG1n;Is([t9]XM\1f<3&HUQiWl%%Dnmp?\T>ipSsH+:$jVlSW5;;,8M%&uGV(gRE(p<FfC1=26sE.S?0JIA7'?Y@?C?%1#L-Q@auJ^@V:`f7%2S\RP%+UeP9[B>!94G\6B"*BR`LMUfc'MjN5^s1/0Cqr5$(%s)qc)oY7piIXUr*pZ9Bk=5:8,rq)fZp?DQ.GP@YLO55#X5<7]:4+HE-ngcpapY(hghu:&Hq>HX]hg+eZoqu0srpm7Zrj<hd[V(oZ%q84j->pulsJ,f+5-UKtAn$Rom^&5iNT3Z^'nWST@YD./nK@dj7o_%q+BCA#DGNQ5I+2)jVj7<f)R3`I7fSS3t4T+@,\U*kts,86a%Et)i%kDhe&n_8[0+9)'7-PZ=TAD;%/92GN]F$G-9kOe;i'p(A(k:M9ucC[>qqDcInCpH#@j+C]]hn=O1j1kWB1N,BHUTM.Q_-Qs)%bA6PBbJ/GsjS/B0pWOmg1/cT#cd'1KE/qD)^8.:;X&o=BnDs=^IX)%JbD-4Dm?2Vh>^5kl'-#+E]`;Y]^"IW%QTpsre)+JYL:]0Y%l2&W1msfWKprRUO?:'P:]D0\k\5Mpnj6$nY]n:%2J@d_S_*se5K3PnbX"ug8iR>7S=6o6D^YJbcmJ"?mo$3XRB2:Y%G4NX7mgKZt%d5T\FT)/;sZ);MQ80"g`_[M7r]9gi8F1RIJq&M[1N"b@nY:]dkm0jf64o6,J+C(sgj0\B+a,,3[5L8'0bPV23\\Bs`3-4bN>;n7)%DrS_hI_Bk!a*S'J*F),_Y?_V+A&.Q(>)*E`Y<T_pef-Q/5J`u;Cqeiobqflr5FgL-iD+g2r8D&\LL2_7Yl)?+]]K!dhs_L*SDHAW%rUZ6IkMmYSh>ZAgo_n?9IEmJ[n]G'rZfl=t],'oADj>:EIi^;%Vl<`]mIn@<>s<n(EG*=AlJqF+STC!a4B(On^i&T3&RJs'IX^:l%Z2OIDp\9#,h8YAF4l4feSU+lIPkgHt_<lHVQK'Q`r>YIYgE5kT/b)_sm>ZmF:AsML^WX"q0E'[4DB"14OtkM;Y4h^IgZ1l6T,\hF%[l^.0mS)nU\)m3??bcO4kHDVih;s.<pO7PfZaV$+adj/!I=:sP./DAF><gDUq(+.Op>)%]mb^.=m"]ptPO??3F)_/CI8&3p,kRVT%^[Af-`B!p59`M#gorh"q`>dJ'[tb*.rZ1tg^=")d*?G'>\T<#l\:^D;hhMBRO7d:lnIMuT^3u1E*h2WhRl6k1mY,47pW!Y*^Gu8_%6^g*rX1Wi'rHRl(CXA6Y)h08CS\&o]n,05is7#fkc``nSRf9XqG@=#2oiiN-]h\TQFiSkNDP#``jjUCD0LF.BgSa_JX5CR:7fQX]%N>[*>6R3R&h*,oQd!3]7O)FlCj^0Bas6QlZ(N6.Zhn.tSo??+SYp2Fr8Qq+WrcmGQWt0[UXoIKK:AmUOq4rjo^U6KIq-_68Kd.g)%IJ*B7o,jdE,@C<L/G%$S=0Aq%$O=A$5J2@@lu0XfLd,,I6iI#:M8<tGh)Kl[\!N`bZ&$3sB'eWCPC("C=L<DDiPX-uEXQ`G$_WqN%'!/EL#P$f?=7;8.<SNh@n>,coi1"A'q;suQEpi6LmNB8iFtW]PF-MOdG'P/rdOetQfAAZ$p9/l2@(1IUC?3Y.\3I&Ys"J[LC8("+%mn]O&IIc:Iq&(RYeN9t,T@dB/+OJe*)1:ef3sRCqInqrhhqR&MX7"-BkC7L3Tb%*Jgdlb>dTq@oo\bl3\H'p"L8uY(meWK&`5-nA%Nq;24s8"dVEIVqX\(!'K>lO/h[iZO/]DfpLn$*C`59!ksXjannp905scS:0jC0-sKf?LOH^Y%LlC.VC>^U92l?Hp5igW5]!?Fp(.%9;C/f:\!oj4/F"J_("6X]QA/ea/b!,3-4n\M\:stAVQEIG$H="@P>E:iSo"SrJAQrL8apkl)h<U`6TTP>ruKX4s+tZ?ciV/]!unK%UUQRBIQY0g#Uh<]cERRT^NnjEI.`K&rEs&8c=2L'YnLVhqA9#q^]"+KUmNhBp?pD#R=G%?p"Jc/"NS!PJ2JUY&)YEFHKiead?9`#%><[jC-gkiSON(Vf+&8B>q";++T]u=JKAYQ`6d@fclgjC%?@#j,OFI4US<):i*gbB#9>]L,.pj^Pf4OBtWV71UpVs]>0E('Tb.PAA%S=7>NR\(+%/C(76kHFg_ktW7^AJ1S_rS]L<[ruP@SCpTPf2(E)3<cV`bnOF^lME['I'H8qhl1)U?%);<P;$<hqN];>>eL!h0AFj`%P?4>h$LlL:7d7H/s*YLocH;KnqVb4."lYmL901_=[=$Qg(D.bhjl!-ciQ7qN?a#ZD\hDt="Wa*o]pZhQkDt+*<Ab8Kdbf4fk's2G%[Aq6GZ[XljIklb"J(_ZC'@5@NrekSAe`_00\/K#[$Vdt%N`#IVd.H"tJ'l7,:?C1-/[tZ$c\QLfI.F(UEUVnB]3Y3p(rNTlJ&e2,%L=o"@H!QEe?b66njdkQE:9W!;d*P:hb06W"R)Vn8.#jdDE>go`OYM[3r/9"UW>DJ;dsp8oJ+)=NL;s4]7!?.$r#*g:Q,cYtm7b#+%UkjXZAqC!ZRJ>MhSt#>RVqBr\cFr.N*3>\!`j$3W'2]eJ1W&;MEjuMOU7ZFMB3:_*J+=K9T9!D>Y4&uTptti/NV)B1Qd;Ug-PpgY%kofog)8I,:hO+X^s2QjqgbQMj;2+t`Ukn3qQJm+BS%h(@a=Y;fDXlY/ItldOn^-QV[.?)Gh>OlG7="W-q-`rp47k+MG:7`\.#4`L%Vpu>?PkDM7Vt.L.b$Xr)a(q;QI/U+H:[[S!p%FC9_:\XOn,;bDf/rt`X[ppd*Ij0R>Wd*%es0nBY2?nimCP(M:;Qs+s13:Hq$jf\%dEXY5d[r_9OiF#gZa9\l7ueJa@qY[/2IgpM*RTiA,Fl"JU\s"^ChhT]2AU%,TK4d=aIBZfNl<H;OVN.O[CpbXm^-_XoZPak5Q)>*%nK341604$^bi\fO9<n]D.-XLp+7LXo:FGO:s*7.Vr@'Na^%NCYm)Bq?q>/3SAp31[0hfR[]]/q`q<LgjYG5N?Z,:tTDVTa)(2[=U%XF'm$@U@q1da)5`Yo(pHgD\MdIdUc<rtCmM%r_G_C#_+$3;:QWs'CZQVp&mto;0DrnA3[GE;e)]iZn3uVqC--^V9,LBq!&T%id0B%r^OF9Tt$_!9h`anhPDlP@+T'14$D*NLR4t$_K4C<:Ml>)4rdc#7irenIZG*Hj6,T3#('L35PdD^]`74l3(Z=Re,T"7QYEV#8_P3?%^3OUAl$)_N>8un5'<BZ-;3Y]_NN@T4mK@t[$J>hHq\\JUb@ggsPe=9=r3L:YCDU<g1:o^BDYprQldt!>mGV\ZhYH#c;i^=YjX2@(%(:NNA:AoS7AL"S:pX7&^^G/[Es%oS<F.V1er4k5+rEIS)^\Q0SnZT.0fkU!5#oEG"i>:5Dmm[5&r9O6u/o6Z"qW+15pP>O\5AqQE%l^tn7o3Z_>`_uij`L@[@V>gA%ro)LdE9DJY.u2&en,IRJ^?)7_jgfaan>WNRP4_$H**dPRh8.QEqo`as(th$bj8='"f#dHcH[bt[%qpiUR^hgPWs-*F9Rf)f9CSss6Gb]_-m\TZ]IJ<_t0$jEkq!-\mX*aU;R64O9gL@l&g%=0O]K4kW4+5A`Qao7Sc->q/0/e`tIQB9U%NH]h!a$Mo49-:jYn>tLpS(UlbDVK1lS`1Y_@l(cOT<FlTp>d0*=.^[qPM"GF(te<n1/@QqCB2QY=ZA>MrZZ1EL1:M-'(u"ar53k/%=jlCcK-T^8j_`pc6pLE*+l>@`N7d$+I6/6_3h"LCm.qmaKe.idIe`C@?',q@s$F1/55^nZV]l$0=\;9g^%]r:^CK0B4bUrRc_[7@%H@-/S80!:)D#:qdnItD\O&)rsm/QgsZ!+3_CS@&Bf::_[puL,S&"e7EjMr?kI(X[sfGhj@hL<NBcQ@Z:bI&].++EqQs*8qPQNthX%4ad0Ln+FAH[m.S(c9!UbH2-<amiUufj7@J;;r9nd2WESJp?[%>hhW(5H[=r!^\[VqDS5nhS+j)`bMBmOfK]AhYFkats7d/`i:K3a%qU8dn59$bRHMli`hp:<FD4*>n!;Be[Ia)67r;@r9YIhhPX7f-T2r6UqmU)fN*$32+'7W00;t7ksE$]o6VpbD$-Q`-Y0X=LEo@b2%%Y9sh#h/"9)ApDG++=78K$g#=gB32gYp@-XuQbS#np%#TD5IjcX\GZ:uD]Lr's6a(r^OQ:'[Jo_m+'nj9Xa'#gYAQP<E;erQDLF;d%gZ/#W#jcjm:AQb2e^qSfhRn8L;X+(>fAg]?OUeDdH/C_eErOsF@SHIZ8^R%aVm_5u^7>5o-Wq=SC`%*4Q!U9<N&$/BcC]_E^OAKs%enfTu?u^1'ch=]KrHf-![UB/O&:an;s*qlcef]KK6/dO8!'lY3p=k<Bh#H=Ak4W;=9DAaqeCX(-3;`\.Ef`FDpEoV)`s7c&*aF't%e+U%hqr$M\fkoM8&3'#@3FMphkE:d#T:O`.YSZ2C@j1SB0)`H__s+WpHLS,-=5J;epnoW./k)Bcn$:(L]+NGW_PnL+c7?!`aEmdZ%k*t[kbYLHLjl,lN^M5tQ47W$BcX-G;l;ukm"=F/:?g0Lsqs;U41X+fQ>_J$Bq=#mNlU!(.9#_<A5/%F/jNE0Ip0Tirq"kgB`%V'O%^V6Miq%rrZ0)nQ/ip%JD&/Or(om$33(]LI(Yl)Wqs4Rc?$/^Fu9>&,CEAPu1Y5Iq7PT0UcQS<q6G3)K4dTlSCdh>g/p/>I*].[JN%o4MB'],Z..N*fj71)F$U[i:/c^3]'39^9+I5I\C\aS2fDrY;lf^&LG$QIaHB]g'R/n[7i"\:+1qR<IlL[B&bGdHh9dqC&t2pKoS4%)2PJd5Q;`LUp'c%1mLN!?=K/8P/K=CN*B$V@X[Y:=+:P@lBdidqdONfdoXieSBapEq<Q#iL\K[HlIeZLN^(1%nQLG(POF9qp@=1N%^V04%jqM!]Ag#-j/_RasN+\.?C1H.Jl!9%"S=,EHokP-453<]G21qbARDbV7K3Lru3W8Z@^E2C#T-i$m?9e8?'S"t#a,9H7_M6]`%p5::s)Q`*:.5=f-YQ$H9p0W%#qW<j>O$A35*rH=c4nC%+opcl!jI%+H4I@2hCTH+`/UVn4FdLTt82K#qpi!mRDnun7h`?BiHQS\C%2,Wf<[;usg,b&,TGqarI&"GB#EqA2/:+Ufd=n_UYS2b^@<cg:7qpfQ5/'78ka\?3EHk3K/0b,\3oADj6$/j-Wl6k!b=$E3>od=A^%\`KGG3IgSJ9aC-7F*<&&N_@:FL!T4Z^:M5nI/YM`"#"Sf#JLQ6*f;"X=3lB+G4>#F-T\ka[aW3T=)Vo-C51(f3g[L.p4Ilg'G5V2%isbpp^L.9S2V.!VVpHY`NY>Ou4!aR(2DbAB(.kecI#s$i*+,6"D`ml,\uci(n5l3.`gZj)ci(+C!2j^tr$QCJ?)R@&]8sCtiP2]O%Vr*e3\?gML/XXDPi2c5ZN7%!V6rY2L^Rp1+k<E&r+b'BrDsJ)c5l>OF36#2%DA"j>_Z.a>o%#Tl!<P.X3dfn),<1pPY?Cd84,[<0%;?q\trQ14!]VWVt8;k%jdDiu[L;+VF?Z^;^an'u$Z7^pE@/A')I)`pn*==*t)12A5pun2Ss#EgB'ZR`RdG;Ri(=,(-+$KQ#cQZhQ%?MV5g0c*%MjnO<I_k0]c9`MWld?>G)Q>Soj]5T^c^\qOf!pQ2.IW'-?IeUFDTZSB18n4JWIUO.Aq",YNn]),g55rDUp;Q&.VQnmj%]EmgD*Sc/8B,uqLfpR]#rpDTArP)+h8n1(KHa2,2IJ9qSl`h,Lf>[^G?=XJW1udJd:?M/O`pJ9Ul&Pd6JUftu+CX/Vr/?K<0CfuV%%e#BAgDS`BIl3*r0>6!T^3]V:s*c/IhnN=+3<%VJs8I,p`Vo\[I0M5MntAq9J,%cJRu./#L4=,4C6r-gmnDO:l1Z"UQM2IcrN?V*%\*)-:h[XSo5F%H4N\9cb421[hi8p;KI_P[L%'%#b,</ZP4unQWQhj"%q6e$EHLppB9=GSb4s^.Zp+^(X.6m*03L$9-Q\e>T:)m!.%dbcE%RE>FMV(-?;T=ZiMlQ6T?dN:QUrb:[[g<le,2QR9F2bqrkl`\&ulbf^hRtk%hLW<UQHeW`Tja*IuVZ'6+Q;Q]=LCQ5!1Zjmk%WChZ4W3kj20:&X1pPDMsjIbW/QQ7]cnR$@%@(Z2@Hi2Y^DgKj)j;1?`HJ\9>K]`='#tiO5Soj>;M^0]6DgKi8XRL^2:jV!jUgkdD%1I:9RlKJ92ej5TjqhOm]Ir69sM1>QD55<I+K9I\_'Dp]P[gpgro+15@Iq'LHqu=?Km#Ah#hsp^6e]6Qch3c5XS/B>F&"c&_'bBB;%QQH.qj5ZX'rpR`Pa8DP.c].tBIr!s5U$[Q(a,^Z$k5Ad;q<X\;[<M64YnM<lhL>%fb)[()rqO[sHVaY0hWo]0]moYFGHU;G^8GW4%Nb@8%4#odjmZ+3cT2*4HH?Y>;mP23FpA"Yls6&%@nUII/NA4ZU^HXjCC_T)SF#Kc_eGgORhAuXkc[c#@Sp,PMmsY/:g\W$THu^dJ%Y[;HIHTCQhjQ#*l!QBKEHeuqWhq,5jho1Rn)S]3fE<'_1i<'<];qQG9%*2gp*_7s@o9#JFh90ru2\u[[pV#l)5]Y9@>s8H@73;Mp%'FUP4+ZBDW[m#>Jml7hcmo-?9dhm`WK,@GO^%.S[@g5c88#*ZaH7K!,Mk+ddpl[n@oYtN1)ZBAXQ[Irakf4&8i;K#H[2CXeKQ?#r%WO[uFA'u!@J`CCChHI9k#c/FoOtl<."+ZhL,*68A+(KmY^B_Xts"&&0Ri7o5A'+hJ=>@6=a;d6kP"KA^n^81'TU&O91HG07=8_h9%")8ha14ZW-eJbjCh`tXCSWECs<b)1ZNCSSEqp$"$P%-nDJW0V)5\e*?%UdM0!73b22h9]#(eGR.?@t,8c3"BP,X0XC,S7T$Vl0(O%!-/]$pbA^NfhKcr0,ea[(gPilS:2RRIHV\:)\8Z;fM?#BpIa-MfQ#qq"hfrR\[h6]5*#*J8.n+NKJ9&Rb6,oIJ&aSPLk?himo2sA%n(dE$%/TYJVR4?U`q&D_g'?.:TU-W(ZsL`W%<ASUZ-aDQCC*i2G[q3i'K:L8*'Acq&WBIMAqMqjVFOtnjcgFNl)ciDeN(is*\YSU%5g*$20_Q6IF$P/\i\R@gkbS`oa\b;BIjq$[HW(tB;#!^t*6n8-D".NO9GrDE#io[jOS;BodTn8KA?<]L"u0j2nG+3g^0fmp?aM87%#XHTS41apLjMn@&+SR9,f<K/tOP1P7)HB#aG<iRi1NcC0?6.O$8KD:V6Qm#![Y,a7IaBL9;S][E0G^Mckg_TnEP-%i%`04?O`)00%R)\%K=S5kf$%o;RZ.='!%YrfYb`>WOnK"<=F9@Dg;!_GO!L,<_"3B.C!?Iecmg.;Z%13u4WpOgk2K^!h)aNM10`[9j=N?STpS#ub%MBas6e"1:6gF@r>$A%_$J_nFR;kq\DJ#n8/q<IcL`%4r*J#?VmY,cnd/4&aP)PoP[]7IqOI/k,A5CSY@oK2rT<SNm[:p&F[b(tSf%Ae'-aN#)qr\=tqFYtP/;Hrk)?rYG4]?l.5T$VE[Z_&Rh]+EfqGh"%>*a$su,Wk_[:@,qE'bo0S@*Z,iFYU=3r84XoW'4W6s+PFu<%Mm9h5jN])h]WidL,dh>-'/`h%P&Z&6O+hEc1e+L7h%%$T&Vb4!A!==*^9.bZrC6j_9t*TEkHqqj#5.7E@l<ja+68u0il87S!0"$'%VM\;\*!/9T2\`%:Z1%SBb-?;VGH$4kos#*,%^ma**Sbs+U%QWB`[D4Fm#*bnN8qhs5gA>KC?39?(OZj(_)X5.>8s%J5U@ur*S6k#%=)H"?1>(lB7W2/Y]Hob*qV:d!i-1#t[M^&-%uFg:40t%gCJQ5Qgr*Z"&2GY*ZSsj"\f,AlU.+6D3K6rE8F5>0Z1^kaJGk:NKj5k-%N['(EF%kOX`mI]NFUlV%8A_";PVY]<&#gth9!7NrFF]>!\(IBO"u)Xn/_Qh[SF=C2om/$:_L_@!_fUtj8DQWkl64iSecqHb2HDR%%==Z*<W8oQJ>7f.IQ>./=/\QeX#(^A/6UZi#@O*gXN>BUn;\VE7b)R&I/!XZ,YqOVUQs@$<,$65@#I2p$SNm5tJsCt52iuBHW^1D_%,ff0qmg5e8qLZM>$t^+t#_;:R)+UZ:L!hK6Z!5^m0Vp128>q[n`\,2c^am)Znh!<T&<SSDg4;?fU_FJdC.Xga.p,=J9q5r(==%1P%EH3@7U#7&8&HD*r<:Kb3IddS<A8GrdMrQBsdD-Zr6m/aeDBMsP/A]Va=TaM0OVhRB1jGp/b(N&i+ui)[cTE&/a5iL&XI1$N7;R&r%+h3eWq>lG5;WCm,1,pkIA>_.mk5_6p.f1UpgK.'$.&!P0)8$4?HV@h@j9T0"3s@t'+=fW5`',>3#4"[e#<elqQqY4)A#g58Q*N!M%>glV3(T@S`PtY`TI1:6;^4AWn%)5X4:(Vg[$s"Vri@gcXSdo@Ka3&!]VN]:+mZ3Wb#aa3VhVp>RNbs'0)Gn:Bj2].\?g[ZRDcoWP%!V8B"UBD`=>T6eJW=g.Lm.ln7XqLin%>/MK)";lg<Jg-rGkK:JMbs).a2.la&PG9sAA_XPM1t:/=D:'')Bp;S*(W.o+rZQZgkC^'%->PN:+:<a'%`FD],Z;Zp(^Qpm-3+Z'RZ0Ji3-4#nY4/.EK9/AAS]Hn`d.Q>O5's`=iYoVPi5St^<%kJ$%s\JRfaEfo[EEEoHZ0Bq%aES.(QTEcan'FRWHE,m45fU@`Lbrd0BEqj9JqEb&668\Yl_sA_i)olN7q/EVbm%SZILMTB_,DI6lR7D1",W,lJWrtfRh/f(H66?5%ZO,:h]\c(Ga5Jn;">P]<A.>mbN34I8/R`l+8_L0=*l%l5JC$*oT]2HV`.6AnZ(CSeL0c,.05cm?E3Ke.?u2ZMmD]a0KnZIKK/YY2%C%0=ijUR_Q!]#gV5i[Y,_T"P+Tp1a(`VCC-LJUL:;S)O_LPC[Y%,1<7oZ&>D.\P]U.76+BUkm(rjroPd/#^?qdp]BO/OO[l7)l#:%6Q3l]@,hgD.lOo;`9SFSLd#D;$1Ag,UNL>g`jR5RJrPX8s$4LECe/='3`["u_]1RRRP5?O$"@H=2SGCP'!NA=,%/GXp@NF&aG1!5%*LVJ\YF>8f6n=f9$aI,Y[>pf.EC3I?\IA],,h`^aW,6)_O;`a7Kqf$s?mg\^e?'`+0Oc)Y-kL7pJN0e?A<%utCcKYg0(_`a^ju1o%NM`8[&%3OA4h7\M1(^\)QEAMAU+haJ:dT^mkWmp82<]1E'tiorcDC[[d$SK4+l[>C9$5\Q(#NjE6dQ&NF0E$UKA$L"5o#+bdUn2^%Y[F-kJW+YIEu2+26g8>LW9XG\2b8!t=f:[q58dZ+qHTR".:@3sDD"^Kf"4IoW.@;_8Lk"@^`GukiOos1.-$*mqN0D?'sSS[Wi9Bd%euf],CBL7o7XdEGKB"Kohu^15+\P,=eX9>aZ3(pcjc+8D<9i,-f^aCoB?:-OWr`@0&Kl_2C-W9inUSjgB2%VWiLsRj47YGi3fkL`%gOW;5c%f1\A1AU4M+?FLgkRfEm6'J1+M^GJ8X:/X6gOA*Wq#QYL&`-6RMTq0JXBi.E:e1;=,5m/PRPR22!>$rNh/>/NZeC`'nD9t%gRZ>4&_On=/4[fT*omH^:'7\c/00R,#RH[6>39),&-OGD&f^1J5\a"[BI!RUZk";Vj^@J_Vd]G>[Y<*8@f\?^E(iE3=!g>`^cEf`%@,lkb`c`c"6i@tb?\Qji$=k]U8][1naI&N<!Yri2\T1jtm#mO57se$B#j9V?3oh<g$^a&5s"/kS(F\T8EdS=N<*0VUreG7U8ta1*%EBj^lQ)a'ed:4O=T$1'c7hmt7rNT4>^q<!c04$2i\rFE@l[b#q3S8*l_"cT&XuT<4BEIm)kG0JbZQTnMr5T@LS"o'4BkW4i1b`)<%a#4&rQ<m%_)b@#kPTUo4X$O?@kXR#E6,<RWjH3-LE',t=4N'Hu>_?F"kPI%0&[q@oBu`.85*_QcVW&:D75p6J*%QRq\;/$B<aVf4%6b^T>0K9m5\E"J/)#H[(YCeQ/c!p2^D&Gn.=\ACLPgiR'V>r1eB=-C'J?8lQ*#g_%_[06!@6FTe@/'e$OqnQl!OCd;C$l3=EKgl?%Fi]Mm^nBQp?jJ:>>)abrc_Sc<X&.^L9FNo!iJiYR:O!b:!EC+n&9)F81BlcW#Ns)jL6j.,g_$nn#81I#lSuqs*Z9Q?LXfr%Ap**A%%duB7l>5PX&:lmV%E&SY$cHiu@hK%OJ9+Eh)kB"lC&sq0jh'`E$K__aR9O5&A]S$T,-6l@Pek:!ddt8#1WU%!,kM9Ja\X5%#48)-%W()CA=.5=6M't`b)Ij)n$c[)q"5T&;\QRJ$_dESoeKmB=+KH$g_-0H=lrD]LW`2JTDJ\\@NU6e!TU&Up!uV+ZbX8Tc:tEuA_Ut,e%<J*5e5ihB"TTQu>N86kjXAr.:TYVZLAc.D#O9GYQlIZ1e4g:%RUK4-F1u^[>SM1Kd(t/MrOHuiAPJQ7ANqh^)6V7^@LbJpjSM?q+%+gqdBY[9=11W<ZW?;:<rF7r$c(0XsYoU:LX[7((p\6p!<TFX@)nMh&`!jEZ\rgRm_AOrkS>?6Pt.9iQL'-UO+\[$2\@2'f`)PnKh%H62oq[72GhR]m/[H):X))UZNt7aMo#XGsq5fsqCSFG@Gs8S&D3^i</1!RF/q/\Tb-W^C;GJ1Bp0!!3Rk!uO*mN<81<!Mm*8.(c`5%.OMmoR@;0d<S5X+>AM:b1"q;A*BE0u5d#&R_%Y5S%;;1G.O=X&A>jTb_jsT,!Z-\':V%F`)6QFH/sH^TGb>75+6XQ[J20iai'JU8%Hf8Cm">Fq%qETe^+W@BO!u@8n+>_(Bg&X`2!oJ[<=CAj`dJ2PM3CPQg,b?tpa%iNAN9UNqS7XaK>FZ*>VAhc1@Q.Pk(^7Q<To-)c%l%&1FQg3Yk!F#d!NXL.[@b0Inb)ede<(F,jEOGm&/@b1g9KPC9+_*k8JQJ1N&aX<FFE5_rN:2I#")]loAso`hY-d8i%^cR,7`"qt%fdPg\VrYad%GOFN6`pS0!H<W;Gi&_7FKX9t3XD,!,e1m6mLFr<5enND?uS..0$uldB^c$^&;M1lq+(N8(MJsmnj/DuVseKF'17Oi%E)Up^N[RX*%!GIN99MW]Or&F&@Io[:;2]gkA!%BMS3c[eRJ%=?ncY$T`$9QL-l3Wo=VJFl'V-G^E!W@@I3EUh8:r1@s*[.PcM&L-%5nkd[6O&X-njBUb`XCY(-QL'&2<s#@gKZ18-?p.2JEi%<a.YB>M4Ltr/\SCXqSLkkY#rID1B#pu-3]4$:]djVn2X*59lS9b6"pPC%!iA_JGmY7^EG0[pfE^#rP4VSfS"0:WJolN%JcPjOEc_BMJ0Ko9F,8DOh1BC8Y6,V>5G&fc]9gkSVLnaI[e>6WIdCRMYg7">!;V[9%b1IK,+2CE&IcokD"M8IANu\`;*^GCXRW/md%g?`<5tk^j_#!1!q#DiNCa%jc\cTX%B\NPEfItSUIO58,'`'#hD;]OAbG$!d/m)o,%j8/k"*ouo[lG0[akrZjXB$>Fq_DTW,!apsWRU_GI$3Gkc"]Yht#R5k!"ia=,l(P$W831',KS`!h3LL3`G4./pit'd_!'8?T3!H>s%*?HG]^Yh\OWET/g&:fKp!meaidt@h5:'K/U);N>u=P*i`+MAbP0:**UQmRM!C2mm]8Fm<d6,"\_/r#u5k9L''J>m^%ULn=ESDH51%_6+%$13P@3h_L!BA%J[6$6UTaW50<E@fbQp##M:O<6.Ia:Q0^ul,MD;FUaL\Bri/Q&jYfA*@165+aF=!Z$?&i!&ZJ/`gDfR5it&Y%Y!N%@hjZb6ilg!9J6\B8a>9\@@.gC&-jXe?d:$JcK?=K"TYW=t\]*H.8(asG,[(1NP6[jaD/'1QV[R.!UN>pMd$iP*Tq+@?RC-`g%nqdM&ko:ri!&XN__"3Ha\7rIr&Bk.%XP"Er_FBLhX$K!g:elc:6]03?'&5BupnA29Mf!22gM5@m;*^Cl[o*.gC4uNmbGN>0;;,[d%!X!qb9N8<HB"6V%`FMHe<0rVR<fOr,/`_s(DNb'84HP'!At_OQ!mhOT_'chJ5WWj(9;V$Z_/=t2/$HH&>)U''Y5)H0j9U)XTrM`\%P^NPi_[u@3$Xmor=3/JM+:A1D=a'js)iL;`6m-h\`GPm-O*Hbr&kkf;7OEQ\.eEU@3t_cc<\DjIT-0`dTM5Z!W#P)6/7,(b^kn;r%'[(NX!&a/O!j2T49JS'),)QZo"n*I=1jH%5+BdtX+M(<0(&>XN9d:O(&n@<]pVA4me5IM@)#\%B4$k,5o,:k"X;6(eOPRV10Zld-%Q%<6U@0D,14b+#$(YDcmkoMqm1-6Vg_#ZrG#[U"%*+"("PlPE[:54i*Jp'@a3)n$CS3SZ\#90[5W71:t^"E.R>^<5V>Br57qVpVA%b>&?C("S_?"p.laiW>U#Sft<"O:%F;XWbjs#EMF=+YdY5cX_uCShpSCAS50WB;7pO9_*nd"W,"VZVGE=&]uO:$S[tRFPMl#_K0Xc%KL+HX0Ec&-Q#?`a9FQf[C%W**:V^E']:=PnJ`pLGN,A"oOd$B:rThd>4\qZu:20ORhSH*cTD\KZLV8n<0"q5A_6ZY(r:9J$T&#7s%]HS^_C`8DB+BCWL'Oc/.Uc?0pY6KG;$QL_ea[-\_0q*SRK;VL9cNFWE.rpM7:8)eaAr@TZ?#b%?cKl-&$6[-pVG8W$j$IG.NS]i8%l@Sr:ORXFs,8Ml0Nt-M;_%p8Qr4]@j+p]Hd/'c;T6H@G8%hV>%$U_GbX:1djnVO[CpJ>kQhB/W^ne%u1j!77T#?>TO7tbo)r93F@%@MklSR7[QGJ9)*^TaUS=2<HM>.$>ahKX,]O\TO?qlDmWs"lVc8Fdh&?(4;1/@0RWlE-fJE2@HsEO#\bI_D\)\iXiE;G2U7@M?Rd?%)#SpFVYO;P-6u33?H._2Lh!X>VKllfKG]Gq8/q\66(/CT_r;jT]+X'CJCG&hL7Q+rMD+D>@T'XUI<:Aa-%8aM*>A.&OFq[s63Ikm%M4dOE4pWFu_W)b9S5k*r9dlm;c`XM?^rYCb2O+pd^`ii"<X#W+I:WPc-)$,O(H#2VE7*`&?js,<&8<X\X&]eS#[N.k5T1&J#rC,#%KHcDeB8,AhdR(p.FmTd>."%[)[3TEb7&j^/)Vgfd5iK[YP%l^0+f^/l?9<P7s.M6o@0IK7@;QRVL<5-EU.uC(>D?Hr01rN4,`@+S%Ta%\VGmVtH!+&m,_jH;<`fRFNH4_o($5:EC(aY$lcZ-4/BN=:c";EGbW\o3Hogo0h$iT^j\AJcod$61J2LUtVNfKP?Qf]0X3u"/S%!mHDKU"D&^)3Q),dOHBn'/Tn2/LNie)X0^2Nd(c:<pj\"2Q_=9_[2nB(n&%Al7m<^SH</OZb-UcIYN\L6i[<=6-hM,Q[VMJ:skpj%6YMiWO\B/FXC39F#1d2K1+R7Q_&6iQ#-VT(33C0>2k5$;Wb9hLkFYtMgbMiskBou>p'qTY]0Mn;EisLe6B&i*1[pfo2IZ#H,H,0^%l.+eW\sc;.gYh<$_"]I6=2AoQTIsc3Hj<!HWXcI?!25:e&ki^]6?<UBFr')#_VQ45;V"TNC\D@j[.%RmpK_!rKtq)TBQ`bT_&XgB%diDd,Seq=#AB-Xl@$-WfMHli68-,)L?^uP7!LNnRHU:m%1f^Y$UXM64hK.NX-ar+bR\^/-0?G%H#66>iflOFm`&<rF+Sl+82?)n!%S]#jdrOnA)Qg/R9_tQFB-E;pki=Es%&E8N'4\_?%>R,GBdYnDu%[_u_!J-R"#jl[k$=SLONctKU-P&)':j+lC*+R,36F\:Ai<V`n%4tQ<6Ri>_ZHl>Zm4C`&uLjd54%q5Ueifs29(:':.(fI;[p`6dE#Ct<nX\^$SC%Dal#Z6"lnaVFV-,-;'i7J\7T%L>,<NErBAF[8;%>Jfi2k(ZG5HNTM-.'+ReIuYTrl!\t[',C_.J-/4$YRrg'Ju.=><kOSZ.^CPd`2QVA7Eebm,UHIOT!U4rG/I0k'b#SH8r9>N(sO-7%U6,ZJN<I[@!_VND2PoiW:+&YAR'M-j.ofEq1DuKQ!!j;"]K#"o[%Jg<ns365cQL8%ce,915b6GB>.:k0W$sk6nH6%67Yd7(8\M\a%>r#TP:_83Q<!AL1;1KgCPp4(3AR,F*LglW-f$YmWO[kW.6Wm/&$iHQR+?r(o><H(i94,."K\@-&-6U9Q"e&Y;X.l09OIER*#Wj].%!(Qin<>j`9nrph-*A)hSAJBq/Sn^`M*_&P%g4A]8jMi&n7,1@FP!UrO0SD>Fct[_bd[;Tg+BWl6TYhD^-sK^(-C^Su$63]G'7T6e%`;g6.F`iFlgT_$_fuj%?DdHG@K0o/)>D[tpnm("X8ankI!O3O$g)$Isd:n0p),RNj&ZlsJQ"o7:&:*28oQDE$aLQU_62:h\.U/kq%i(WB:2O%mS)K8=ap047S1W0lSJIbF934*%ROqEX/-G`]N&SiOZ:_=HNLMF.k-nq,l7Rh=e_Z1*Zgccl*&rI7p-T$,E?l9a)M',#N%_M.*nA]PEc*ChEu2+52'91pa/_R[]gLRBKE]Hd?oR?*'h#V6/k/^pF:<<</6>)Q/WJ\?fN@5$hE.=C0so?6(2DHuIrc[cSXeSS&B%7q*:mF'+Z0H]O4^BoCJU#p`A_J:A"nYiJ<E@;1ED#21m;m0F%/p0.SW"X3U)`1S<K#1gV:b`:7%[!CNVC:lHVIFdYrd>TghJgR-q%]If@?gjOohJ1XUg@\F'r>XGJZ!K1eRVA1r#"=eo*&QQWbbqp^f"ZL$Nq$*<+/uV[FD$nZbL]jZBT3@@s$QrT,8T@Gno0,q3m`>j3%U>7Y+6'(eYAfCkH+KV\="fDQI@r7S=+WsjgF$c<)!7:?!<Ia)fU5g;9+8FZTA.")G7/#?o4Q>;@k.@2J;M#0<8EP_kkN@]+40/u]%SG#b>p)s%noIYmHS3n#ml]@Sr=PKeYIP\XF"QbRPQDh'cajh;7%5[37l(@kkK%SN`&N*CW\i&_DAAF9h5/SA\J0RM<F,0E.*D]&:%B&`Y$-uP(OH%`$qo$5Z`A)K:Xj^TGN<=>%2R-53<T%=a64=t*h<49_JLWF0,G/acbN!(P$%'4E9Y+6]jL/UZNP@^/uP>8(BE/O/M%UQ%4C0Gl+6@L#V*9Eu_R12.@5VO;Sn&5<O?'r!0&GmkmNFhdQA@2S^h9#!\L,'2-9gknrajEun=(@?mO\P9J+qc<5FhWhI8E_t8G%N>>_f)_nJ'5YAkG[^JF&@YM?OqrBSNNoSb`bBSYkAMlG8Al:HY>*.5L>B>L8G!]0l_'%;tA"[GfGnX_<mh\N,DESWWb"\q(&]\Es%lEsCt)t]R+gP,\kdJS_2G(+LN+g&m1gusR`V[*Rg;It7>'FH59XPX2SNFN&Y=/I.CJIrJLM9[>[&O<DFo--lO"Sssc4"<6^Ag-_7%GQnJ!>?A$b!3<cP3.=-KcI,2HG\B1%OdO2.=/T_E.K&]b.2:!oek^a_5VU`10JG]kGm\?g;/R&A5)#]VNk+rs\I5'a\WJq3MhIT5%5sqkXa.dFBiS,W^jNn\q-&,LOW0.nRe_Sju=_?Bs$5!](pO7BHJ;C;,[1c`ho.i%81ng#u)2JoaLN?)/h-kIsB8N=Q\K[b$^jIUa%MGHWRTB5`4%*pE1^slbj'+F%XIT)n#V$5lB@1E;LGRW"Zc4t*%"`#sePdithbt+1iZ%SS#-6Q)b?+ZuK7@X:F1q,&_*DqOE/Fj2I%4JGa('")+^]oGR<Tdmn*]Ekp]Ost,p>u]F'ZJ#dZ8HIb4d2[24&a%``@SB.,h<]n%3=c.L/m<^C[V:Oeb\!1A;RL;O;.1terBS";%8)blMc/%5DlP$r;$Gn@6WPr<YiL-SYZ8!'ATZ+dn:5\[Ag0M7FI@=Vb<9!]-q@P4k6g]),FD,N?Z;3tJ#[&G%-qn1`5SOm/`KYmW%$A0J@%o<ba+=dm)FJAGf-jCeg'5=:l`Rt+"[q&tNW+NRcqaW:7EgAIe'Q1?3[=^c1!+OL[S@dcd=kUeg+&ku(N#g=u3=`1r48LD+%ZJ.?1c8CTjL2<;bn(Td4j9HL7WD#/u_[!eK"(EYl"*>F/`f8XS'X(FSM*lYdNZ<u=nKVjBhP3Hmqrjh/KRgpG_RKgG+qWQG).B$b%:C.^>8uetdW[dL.3BlDMSnoNHAI$``L8,r0\VJF/%D^YoZ2,il?]*8mIF'cF!^_Wq<ku<E1<]b+g5R+A$.*ZH"(5sqlJZKGU/XS`%(ni9N1aH'&ERTWnWJMD4@G7B>8&-lBa@2ZGGd2I[0_LPq:KZ[%b$3GX1di:R\X&WcU3O/d\si9Vmec,t0*ibo>I:>m[Ns*6K^LG"%9`Vt#K<2ACXARI9HdA`YatpgQ&\Bk>'pU[s3X9(*0*9j:/b;h:l7OtDDKNFnd7j+$R3_iI0eZ+L7AFAtj(**%k)jhT<E:)U-5'Au%U@m3ZQGh8IM[tVQLoG+9H<72g@T\:f2+e6t8@.?7ME/tJTt%)5214gIQm<agq@-FEV8Ifo@$Wsu#S#4oX4=#e,T+2))TC/XJSFW0%p9c8@?fi//.;65^VrcQ\#hNUr-GigeCif9;.BCT5/5[WdiR!lR8m[TVD#sHk#V[#I?slc!W^[[U@%7e&.'o0f.JgoK7EnB.N*Su[%$:)ZJ+lH<^UbpI,!DQP!'j2FYPTKlJ*]d%/q\ba[,!g?t@]^7e&e*RrR^!tGp(*fLa$@-&M)#mb,bE_e&`gXYM]KBjh32.t6U+I:%.S2,3aNR$c4]2*P0fj8$`.KXWY9iA3&S;Kq1mf9kENAC^+QP-Oc$5q=3GuRlD=4WnC=/2$;ior-A/^<XI7i8TQ#'.C=AC[)f^J1(%hI=59)fl$i2akJP/8+$P;UTJSo12&D@23_tg-l$FH*I@7GlTSoZ;K]l\@f?OJU$4/*>(72SEZ")%C9+pj'O9O9VFqA#o\c+R=h1G%K8;\mBhE3KV\9CM!9f'U-e/i'2Y9S9l\c,V;0X);[LNb%Vr)Li@$=b+QH$[8[aFa$kY2]sCPQN9.E-5>=B!k0'FN/S,NOjZH1Vlc%ZZpHtO#-lK1Q,TS`$YQkVB-tTU%;2gB\M#@l]1&gkZ+?jLDLr$U4SV-(!g>ENgNLkl$>Z!P%LB`]_`#3an#fkLgi)l9H->G!BVa9%)+F<$.]^]KS#Lr;-F=I=66jM/Z!rhY&c8r4V4`iAo#96RB`bC0>D)=-5bJ$E.ab=7BG)bo6NEKCUBG;$D&/aS5fi,A8<DYX/B,4G%pI)j]Zf%BJ6n%liA1TCMhAj4R<D'"<1/0^OOL*>'eLbP2)Z^hj1\D^#=CQUIU=pfBe3*;,,-So<FmB,f,AkUF7%0r1=h6+H#ag=W%[1T+!5.([b`CF[In;XBC++%7mLe!aX/$$5"s4+``]fFf8=@CD7)5t?Q!<B%JjY^!MJc+RtA73cJ3eH/X`W1[2!OnG)ORtl\>k0^m%G9ru),a<VKEg^hIV8MR*/^YpKWhtL/HN]:V?n(Df&Zb,'VT?Ul7\QfF/I0(]D-HIG\4^*V!5T*$b\@+hXf<)J7YXmE@]"U2?G0?R%KYLHh0h"#OdkQcn,YB5'_hoc:UnW$+*hJ%UPT+=LDF0"MV8R+P3@mG^Zd48mZ+K<I9jN]$Pif8<D$Bt`9mo?o#0XkgbV+4'QfQQR%>ROo)@YD.m9?9_A.;hV1r/b=X(ao@Me7B'J1WZpnTa>FPLY1BZnkTsjBX%NuAF-Yq5_oa&HoIRi!*GPO"`G<WWjb1FB*k;u?;6Mk%#o!B9l]Vs(%KOL3=mD8;[+V:S"JD2n_<.@)S$XFT&+O7M'e\I6`n7<e-K)=?P;j;iQ<dT8dS#Jo5#Fu:p=cm<E+<KETPQeYL4]!0%1M@?6N]@9;I23fm&3!:^I020U6;N,[R!Ygn(#m5d)\8^-OWHrF1tU3L1l^4>N.j]j6YKt7UNG%*FN(BKae1]F]*YEFee[JM:hPtb%;`Oh+h`ChFcpNeMW$R*GfjW-en!p8!%n:COD2H_DhB73@e;H84&50Fh):eA$.WmTLc(,Ak\NPRiKP\u%K#]F&$(*jo7221h>Uq[U%8@JRsOf^VgoaYI\A]iC@g-).&,<A.XjEO*\'kqR0aD-o:*JDIUFBRH24u9#=aDfm'd-A"E:#8?->jq=%T]*P2P#r2-Xk(h$8ts2d%Wg!'Dd`3#"A4'X6m=HZh/2HS"9V)`P6_*-!3"E9SP7!2EW>9Y&`3rgc%Qp[<Bg/n79QT\j'aujPP7cIT6p;p<WD22\Rj^rR*p@U4%di2tk:_q*NnC@-DI8f'e]r&aQ&+Q'kQH_J,5_@mm>JWtb1',<W/+XPOD#'#-!uo/t^;sc941r6,]Uu@8RT;hBbHA\'dUO#N3@SOZ%%s2>;:P]6.C')^rXbp)F?aRmO6^T^/l0NUp^,8Hc6F<@JdB!JT6[4/V<OBE!+URF.e%t-^&S#"=!PCmli8@r^>Q@sb7"$:1&Y\KV%f4]2hMop/\Sgo3`2WGPb3iSiP9AJN[B\II+!K#^a8aN2qC'([ijf!d<^,5F&_Abe6=T(mg3=n_Sg!!uf"@WlDe-Q+/,K2fdiL*$C%<3,F`d0N/SEY)+#)"f$YVB@T3J?RF;^s$S;*%c1:J_C+0gB?Z_d>:mK@\;4a?mnXuMj6c/@<oRj4)&XUHb%;BWbr%T3)gdK6]qUL%'Y[%m)i<ZkejiPV19*,#c6bbJmL^!CL3dHN:cpK]&^#uJTBqT;(K(5p>k]g`61(_2eaee:WPU^>Buh_;'=k32(`$<iX9jR(JOKU$%5cLV,7KZgOSfS"[B;R&@BN"@X8NApj%F3]OKiHRW(2+$#,iHX<8uQ/!6o!AnMUb:/L+IU+=p`Io8t'T6N]"RKc75:eFb1V"]^m3.%Lu#)(6lhZeB<@AJ'3'V/MaNh"*XO,A':j`-Xbah"Jj'GbP!DJ-pc;>-_e?D<KnCjZbr4Qu#t:"Y>$r)79d`lM,EQOd;0QT*UmLa[%J.YBef^cJDaqG-U/h@hQ(]ZJi(,Y17(P,1LNc!s9@U*^JY"QcmUb[Rgd&7u#[mP!@a^KW-A5rWT_U9Cqjp?h]df3+a(aaY89.u7i%c=I%#[akf+OsRN0HCo=h<r-f*l@UXRI:dR5ZJZ:\RKgY0Yo+M_+O*if^pgRsUc)$uUFg'hB^X&7N9!ma#C(=%Aje']kSDg1!_9R5%'D12bj>.RTit.a&iL3j#,L6?T>9(9a4BRmP$3gd#NJd,S(jDi#WU(2.Z&B%@1aJ0[-*Z)i:\Q#Rqq#]tWt=i6[.B6l(Y*4RbjapP%e)";BJph*s,,PaJO.KuN97cc`+S.U*Pb2U/AjC9[/r?c1o<l0p[O<Q"=Z,/qbXHLh4cr?4<nof(rC:FLP'$O'(i%WZmtVbZ;4]&\%kcCOQUJ;F4(C;6sNj.pfIg8&*>aRbKbp@)g]C1n]l.]a2!mOY6Bb*+)"NlJ'IR6KKfIXW#P4MduOTVA@H!2+T*DQ5kXC>3T<Omm7%]C87k/oc5s,:6r3-nQaFj9@'"pAqL7eI5lUoM%mE:oE9p,RkD],g`EP'#dO;(Y$[TJ0N;ZYLn8B2O&+Q-('n--IYDAF[bp,JC_Y5%R!UV:9&,',KaCn4(X;dAkRcV41uU0S,rXQe8kuH=;VmB_]t.Hl_F@rp;'!t-lXuK,D'c)WONSF&2(Kt?-UE\WSk=08;)+H([_H$?%1G)g/ZU*U-=NE&oc/VWq$)QR(T:,,3"XnB%:E!K5gLn+$RpL=I9\=V(Ad0bXaI+*09P4!]j`=i^$2.8p\!CYBml?f]g=FhN@e+]n%'-U)B90l+n3Z,1fnjURjBd*aXbJN;]b8?[$H:E]"^Ns4:_NJukM>?sLphfg,<:I4h-@imk3DU:H3i\+?O5PbTSsKsiXBVVZ@SS2T%L_0sM"O*h7pL`1`p2C'^R9]-PJMi2!Me.bjbse+g5M.?ac%9W'[_U<</lSf/anrN7D:[J%#J"G_GDA7$-/2/D@Ti3R\F)aeY$7ZR%fT>2Vj^8Wih6JrAIC2@,[X[/*ZDYPl2KQA=TofJDfaUZ3/V%pCo[-Co8+]j*b#L;\"84Jn[0_X4jEo*8`Y-O@+=u=%_kIEML7^o!%,&UHD>p`+M8IODbPYM4$]30poYH1n<'!o87Of)J76-GW,jWLeMF`]$LXqq=%KrL"JX9hIuY3[E[ZY_HmbW]1!ZghWC)t/rDY^R`&%f@k8h(SO6ae)2c+2P?KEgJ!1O?HcQ?N6S"pj6e^KAh-TkJtZnDXDrfWR'js"O!`b$"Cb3#fETK4admGTC74V&"u(gY9%G.:ck=7.%"43XEgP?CT5;Ro<oEZR!]8d8rBEDVJd"FA@5hX#Hft&o^a,Wf;lqq_89!:3P/"a)r?5E"\1OeINU07bP78@HR!$G?2G`2^eX/cC>%+?upsP*W'Lb!oQ6]19f-eYl\],pIuoCR`F-3$1+do8Rc!X9B]bXAP=L%iDK>e-=!<BiD84RjM,O-iceTh?F^IbtGKa(]9,,W]>QC%r[Q,PeK1p=hH]4I3uWLn%8C4g!j&]8R$Q<"):C#KPHB>$boL(d%6XBM;ZNT(R6QecKW7q5At!2k<+\c#e=eW@JF"UeCUAj3jd%M/%qSo!BpcB\)^D1<J?T-M:nq&D2\HYcFetl@._'._PlUM[a&gDB2Tk"I>TIS>XG(,lU4)P'B'J3I@+u1C#-1&LmKTXb>9dZ"(OG,d@%Mk7#6R9l1&[c<4QH4mjd[4H5%UIeBupW+(/1`PJ3VMdQ7Ud-q#MdQ5JAJ;;8)OlCZh3*OeVo/'H9*N4k9&46u2Rg\JToZ>)%HEo%%<&-0XF=gt%@4C#q7@0uW\I42ZPSJ_8_"S!DZPbfL=Jh8jM%W1,3H$/.Jm*=I.tA'"9IoMa6d<qT1gO0rob8e"XUm*'U&hq2q&lN>%<>F<<HNJYo\/6P4$?.m=kZ;(lV(hu)\eS-EJf9p9]V=p2:pof.8Gs:=$l&3r,:pJ@Pt;;,*0o5:>m.*NqRqPqVbNL7o43j:=h[qb%a(4?[$^>[c0WDMN<-.E'S\&RQ:uP0[M2L.'/^b\`EV:nu-`^n55`D=(q`JGb6h#(RY=0eo^std(Qc0iG:s]qO\55ai>U@DYZC[hU%#alslGVd>"C#W7aPtU=-NA!DfUa+O")^f24mQc=sc"&Uh9gbHTr%;T]X[P(o6D&:e/Wcg4j&?Fa^^T*dRS9bSH89gS%lV)@CbST,%hA'7Jnmbk,B"&]+"!.:@/c!Hbij(GR<[G86ccl,3.Z!d:bu/?Z!oguj7%Yn.\=A4^Za@W#!1%1oXG-d(AT9tFk=pV'`X1kSS>suJ%=T(`2k,,PGeJ08>VU79?"Y_6M:8QMDoc\.&HJISWcIk.SPLm6[1PVd]pucSHq:SI8(7HH.!bA@'YlLg1an2\AM0hP)j#sPW!N$qJ%C;qa)2I-<=OB_]Rllpst/p1<MEJn=61j@5(lF^jI]ZY\u"q,m?0JBf1N,d*/5sRISB,iSo`DoeI>a)n%P<SqER7Hl2R>.)g'u73`%2(jF#LR!r$A]n2Y8B:sB*_7'^_XG3,VX_)n5%4PL$))5:9![sA?uO>KRp1p*j[C`h?IihYhJ%Xh=`kpE3JC;t-Dc"4A<Im@WlgF[%PU!hT'1.sI05s@)l&KnljZQ*_V_NMu[kBUEY.Qa9%+84c+CKX""K;]pVenbBZZ<(O3`\p-8iuaN!0VnKKcpe"m3^Z*VLa=egD`ur%/:KibC'7Kfe:7iu-k_t#=B*mTH4,$D"'tbbBG]>NBnCpV/s>2ObE>PX<;Ho`a5WlsOIFZ!=Yb8@eRZ5l[DEmOBX[5HII`k/j0$D)%BrZXE"*ta>mkZ[>V1D"f!EdE`I^-DcYAr;Oir>3KSLk8QcW-LmKZ&lr-s/2:R]b"U[fSrd[j1Z:h!bjjM)5N_bf!]:)1b%:07Ys'%;C<qJ?pt5j/U$Sl[$ckGhJ/f5FI?tM4_YBm?31UZCY6l!C-3_%*;sU353d/9Y26Fd9=5hBJW,T!?Y'[iComUqF^2$ur$YLL_c7UM%H.32ak"f(O1P$#_@%7cu*[%*O.a3&pF3uR0Q(>KhAVAMh+[o?F2=b49F@g=V"G;K;RF.r]JB?]f;U;"(nAT)o.1[CbAgl!(gp-uQ%eKSTYds%%BDA::HgLdZ:+VH3p5#V\&dFnk;-FM"0[[HO@lLKU1/gWYG8`@n4fl%TR.e'EOpp1GU6>3HiC%c@cG1+?23^SUIK3dc^%F*WgmK9[\-fDmY$=A0ak@?!bqbEt+mk)`eX&H^<,UelRYG6,WF9L,,PgM4'$3r*J*KqpD>\P@epH^WT-8BDd(\hg&%'kt8,ei%e4%;e1:mrJoF5Mf99G#G;toCea5fbXfb.)qD.1<o*nW7oW>7/$"B>oE*H`BS^ch6qY\KiX)?nLZ=a,HVq!';VX=9Pi>*MR?Uu6#?-*8%<HH>d;8uVAHXgZm'''*,BN%f;[.8ll26>M*5nOlsq00)p$k)p%8>WYJc%8[[%Gqu>U9Q&j#t)$EX_k5O=[]Uaj<1ig=nLR?bH(<@%Hei)BYVcEcbQ)L8g@ToY<?`<%Y@k-E2tFC(!duh=#'"j37SMKr\:GQKZW]mR*M?,F1YA.^>XE%D$b5&IS]oN2IXE)cBkCt+1(bt.%:dho3*KkNE]f+H0m9ZIm'/C5G7>Q;'q'L*4Tl4o>*b(ZcOH.`t\Casc.ok!)R/]3Ma*+d1,o7tcQ0Bh"27W_Y4XRN=AHU!dLGI!P%i-09A*/]PiT+L*/'V+S"fbNFsk,Q!T3@71l#q:<Z#uDnPRE.GS\$daA'RP+>Q;ue4b5s59a@!oOcrFC]f!OEmbq-*Ob%iZ/n>QpH%X.L0?T&%V<;j9#b<MjAp6A>S4[oekEEdJ',KtR6HCq/U?/7]1_U1q=WakL2s\`:Bcfa:J")h6.Aff3\3[X5(93&S7k2c%D0^<!V+%WsDl:0K$K<M/ua69j4lF%RqF]e0m*$5O4AR>^PD;jb>euR+e9kichYh8V\5i!7YQmR+MbE>Nt7&_AR0#g0`fnAYdgr;0K9IVs+<p%l8R6f>nd@n0>\tof?u<)L)F@E_%[3XQ1rL4.-AteMK.hcXt`F2SZ-Gd/-$D.C\&K6FVS,0I\dGhi$Sf<Z[eGL3t-["AXihVjuOE]%[(t"Rar"M-S^S^V<s%?^T4F?hlf]m9DY?+edon[`._64n1K;UMf!(:_O#F$sO)dpRjjZ%mI@V3Wc'me2Q"95Ur*rXK$j7G)eJ[(`%QjXo\H_Z(c1GQEZH],DK?p`!;G'sT$;"c8Eo#cW5ct>C!9E53*Dn,&-ZNO*1k/neSO^*A4P]d):`"I2<&p@RhaX-.iEoAr-+3sE\%!,A'EXL3iuH_#006&S-VF2lFG(B9<D`cZ,<hPRa2r8<LW^D,](@Sn"[FmE/fMRSGk#:82=LF7tKl+9CYjn3(#8f@HX*3@\f8MJp%%Lf9UK4^B8Rr!E]9#*:B]QUU*DfYjIAR($ub1TbQ]Qd5G6!fHB7T#+GqWG,+@Z"pO!LMJuYKtFNe6crF,YPW2`jFVf&[V3I2/=nl4%B$c1-9ZU>KF#GbhS*q+V!`%mpY*h:4TdACr=*9iI&8jb@$<]0NAO7o^h?$M\%lH,@5ql4^ggQ#;5P$brA2$9.3[Le>2%LPs?IbuV%L+s'%!N:/2F$lcNAArBL38FWe.lW"aa-L6s6=/%kN.:5RWY1.VD=c>r$r0K&TA<\u,E-:]+GO/Yf"1XV`3'uEAKd,E(Bg'h3if[2%bSC1B0.JDk[0]Q5TnMh%*iol:[0qc3@'=;4[%IqqA828lkKqJ8NpuW8JTCc[FlHq7LNABg=8q&58+rOK9>e8%(7&']nb'Ck+bInI%o,>V`r21B>c38t1V6^i?p[S9RJsp<$#?#,QHb<M-[QO=5b:[e=d.$?P\ccM&DS,@<0OZZd%Np$Yj&uXUZMNH8YEg@\'T4YUi?^T2%q\bp_4YM>1@7L&u6J3gg;_/)[d8eRT$!(:NiT&kFJ7`ZgT\m_Y@MK+-c5aG6Da=1O+fkV^+k3e2@tgifKEnCSP]poFd*+;:6_W9B%P8>92FXDFFU=U[NBoU;0Mi4!ORXPK#h1h*#!!TD4J8A)sGC!1Na5Qp$qo&aK,0T1.q5qla%lCZ]ef*IM_AK2U%/8%Z?)+dZhuKj`%Ke.]"):WAt0,g%[Y.Iq2U(CF34'@*qhN#jT/lL9%Tk<6\rSZ=;n0_a<85:E$ZZp4M;5a(5$lCpr>O@<0[r2;*.=*2)=\$ZQq;5=.%f?=c(IB.8-Ee9:p/HO<OBS%\t(*?78"2?J0n^\78#,&P!e#XS08W2:.N`mh<0?rE>m-k%/C&>gH]%nL`/.?tSOMuB$]C[L%=,NK@%!b[M$rH[iMYOD,s?k_N[EVi_B12O&@J1![SV.EKGNel4;M%Cd0`*ekUS>J6c1mrgc>(B9K/e*pcFk!uY0di%rTi%4:?M&!!$Vr4K%_KrHj&ksJ!XU$8NClQZ"l&gf3TNPDi)uc(T-rFg##.[6WD(UipU7'2Rg&;S/&qp,$ho0;d<_*PmSJ*\_(K$9817+q=!6+@0a9_Fp%D%tEqgM+dG`)UYRk*aKe&CY"g,3Nt[G`1JNSgE+G!Ea%?g8f>'1SIfta]>HNOgjmZRXpG2)q?_"R'_1UXLN7IG'[oONd?Z5G$<$:%P2S1_H%Qd4j03+=BPA!O!7JQW,a1RtaEHq^/W;6UZ.Q^Z)C9$]$m]E$<c(LJN'%)KEBXVlR--8;^$#'+lt)J@J00_gMDNgG5l'Sn%/_c*U\Y)fg_&=-mJ68]KaMI4.aD1V*kVNaTKE*',9<gBl[A$lS`Gc1][;$-SN$^0jkdZX$98hQa]Hn$*W+VVZ[<76\*+]0?6@3<E%@&"'Z(Xt4UL$$jb-^/Y?amcfr[ILk52=H-bUqmn]`V.-;Kf2s>V^&Vl:#]Usi-gE7Z;iF+FLQ(t(p?coNTb5N)n`\PQfQim!gQi_%f@EY_Ta?RQpR2!KOd%aI0s/OEf/cQ"Ge\>E(*unJh8R*-39dNFB5t?oQ5F0gR8h'].MLfE9#gusY]&qXQu=asbdulKG,&Z8#U!MZ%!$Q:Y?"ZUkf]!7[+K%sQDo.q<]_o_4#&N"te]^e)^5n"+(oH5[kMP=Td1#rFOKo%+hT?7:Fm?>F^T\4.'KsC:AW?C`'6SQ0<aAf_%V4kIC.neRtjF"RV-BtWe*(NXlNR\PiWWcd:Tk/q-$!C;\ZSp@2/b*'NOJYEJktYd6%]pm,*PlY#:osK<mF,Y^Lk8SC6F1&T*&hXL%d-IIH?J5f6@r\\`BTT:^[1^B=+C+P(XL!!_DenJk1[p4=5N`/r0^F;F(A?gs[g>pq8$iS0Cp'NRL2`BIL*#(*@H>\QBflQI>Rp2(%Ua&W*geF3SoL;)?BhD&X[1R$R+\RDsq4nM(@bSFG;)*Cu``Q>O)bp73hLPM[4:rCTih<UW9'3d_BS4A<WrQ&1opQYES,l`F9J5Ql%Y*r;iQ"98j)2^FkO?Q7W_XA-iLJ;oI85q^k!LT?1k\BVoO]8q2KkLLHOa^%f;'t[f$T,Dd\7(MK"2HL#'2K`]^SW6P]Kk4aGcd#,%/O0Vbg%L8Da1GI*:#6S4Yj+"Ra2!jZM]:V@&'aO:b;AX2KTqBD1&i?2["+MoYj;:3nhjT_H+B23&9oF</mZ-iaGN9QA@oM$2:uPf%47_5O*#N(lEEmQVa=`o0Yc4^`/B)[R.s[iL$(:+NKkE*,RDQ_F#EE\CU!S;PRi3LBFDk2K77H"Zg.ZtYh800I9M.a-Zee,Dg'%gA%0Sl>m*nb0M3fF*D.,iHk[qm)'fh?'.Dp\A.6!Tu+ZP'7N2(fI5"A$i=FSOl[gn7DjRlL_Fk7'%sGErD+D&i#4j]&!]Pl9AsJO5)W%X7[-V`Po)m(kK=85g3ejee>O]V_Z`Q]\8#sbD\GR5TPHK;5VfhU8?,nekQ.h4"25(\qU,,!J_>&_)b7_S;k`_L2c>_E?Cl.'W9Bb%C:)TsL.e%G[SNE[L"VBlW*:C"ja'BG%UIr+-$@TsghpZ7SEpAL$nA!n,g!;,`69gq;$2ZjoQd]laF]d2\QS)McbfVdm+ELnh@NRs%n7k@?Y-@.Cj#u0_U=jreSF:6%3m=NB&t9@dAoSHGaY2p#8g/0]L<OWOAd<BBhQhI5ZTH"1b),Ca!lE*5'6A=q<hY507B-"[Y_/!s%2*`H`j39!V@Q$Xn]S32"L?+(;=!4bOiWBkQJV:=.'4njB@"'H)44qi7-n`Y)*C-.Ng<$;fWYt&%i/kct!:2UB"@P=7;XLdE*NZ&(%&*7mMRDo:6r'?n&QF/,]6sR+&X'Mc,>++`Rn/cpcdkD@BC!!BZ\(]sMgb^iE?M;Vu33.%cXBi51gJX$DCKNPp7aBWZ+f=4t+*66l%%o7*Oo/J63I"b]dBH3M1-"e%Qp][(ZG*oIU-F%'Mbu(qgY7t+rS2(7[[gY?a)8t^TAo;642<P6h_*(m.pi*qF]\Eqh2c8AC2S)rk%V(<Dt1ME:\mb76.1m)?MOsaQ"d?$=6.OncAr5LD,T'YIeSP='F]*jO(0HM&F\kZRQX95NZY3?@[Ca7/G8Jo9i-K=/j-&9eJ/b13M%?ri/8ig$+eQM9LD.WB-3h-<OaKnJd@/=b-uZ"J)ZN^fM&hC\2[l%;<7_)bd4!_.^CfZ:bFK+'n2_t9u/i[*LORAoV\RTctWYq&>U%,FpGMfqD!UV:gm,jFSh$,ZmjTVfnpU&Qt;Mou04O-lube[Gk)0^PNj2_QdB1[Yn-Y^L*+k9tDNs+^X"CUSj&qH.T).ZQ6L4B2;s9%M_+>2?mP9ZT&=f'G5:V;OW>J<@](MG3/kHqgKir@H&4,Ha`'BSOdjT?fu=EiMsGn[0`^gmr!bq>4_lHJ4pmIpJ^bPA]^WUJ2klaF%!^O1,Ah!4C5sU<qBIm-a=DVU,NT)uid&Za>2XV=p(KkVfD.:-#;n-GVBBs9#+e_mIkpfM#VOHkN4td4Wl9$ec)O--%F*cYOF,4]D%Wn@!tSX_B+[3[]HU9CbY;`USj`[M0LmCAEh,ZlXq:.83><E\m(:f;ONTr8&+WOAXIQi&7g.?^MTH*SOZ6I!ZL/O6^gm0+nX\b@=,%&Q5#`HYC]dAD\,D2"No5-#tL4^1'`A[<eJ0KisI9hj8"1=N$&=/*m:.%R=q?0RdX`+:m&-1LQpP.9'74bD?-O2N`5dApHM:SXf7*%0Irc(r!esY@e$VKWUFZWZFB-sfR'm8Q^1ch.UI(-rf>8Pbo,MOj49;e/jZN)JQQc4NJ!?X14G.'TIAeM9'su\5ck.Lb/2DmR^m/?%!nfUH;m3Eg34BZ>`o@ZHl+[?+WhZrf,Hm^:Ed9fq)]Z:n_LT*;GBD<b+:"^U!]t@;2JWfN>N$lC,"RderXu<nX[=;PR$SFc4%\<N%OT8Q]hqs*bKV4PBbsLll[gd2MTN"]h_I!KV:LruLD1M]3Pe_;q`r[R!;K2`3O1W22?Q\F3M($_,oNcu+WpdANW+8Pc$db:K,po^2%_Z@Z#.9SP26A*Pa0s(u8)`bT!0qH*l^5m"P4XT$.D8'>EF:YH505A[4'd?OjO<mo\hA:QspK[;=,XM<ZlcaWl(#GV/7i^b(=!mL`%??K"TO*^A)Bn_m:1deLj0rWaCDn>*G&IU]Z$kqXs+_:D99tLSHn[nt>./CnD34de^Kt`aB_sHp7YU$;Y0*B=q:So*<'VtJe/#uu8%YaV;+ASS6tB[O>*_PJ$>43_KrEh^qp+6WN3\6b@l>M8S/f:GOu.(.`EkkAr52X?@\"P7i0-A=WC[Y(8HrhdVhW^"2c+sg--+dV;r%#Y\anrX^7kBXcfL+]!6i*Ap8.5/\2`.#W1X@)]&G2D1OS<BYU@'oN^Z4;jKlc69A)$.aAK'/,;Xe<"^Gkeab!]rr97P`(it'mOpo%-2#qDjHN`)Lhoml6u(1g]*1P66R!]9Pn<sdRR]m??5M$g&4RCe8&S<.&j%&B+:o=[`VUYdZJm/W8]^>Z(;+ZlZUnK^jkJqdie6s\%b)0l96ttB^Y$-6jkpBte-otVD.8hkh:1V2jF^\$5T40Y\pHJZ"X_B,7Zh9<h(e7[D3AgqXm2ue9;KJ49D]]YXTtTF[h;!buTSL\@%G./fAZ4D:D#YT(%+==9"F+2(dRrsW[@b>P,?jNIfpP,Y\6qpUBoo,to%PnlMW0u>=U)Z4'C/P509O(i%38^$\;HXuiL_r$LIeu+>%Cb\-\N#5,6oSnSnP)K&5d"D+`f4>s@H/M%@X0.I*i>#GtP79T-n5<B9%'YBnOO-_,.b&D9YRcad)]</rrCY4U5QK7X@SH]q;#o$k%5sD93@AYBs5HEJ*Poqh***?!>:N`!\D]ZnN51P:6>+5<&Y5I@neS#_K6lJ<k9%X;nS>HEh![H<rp/'\9@(FPCdSTG*%(+`ERVlLU%090q1d^XU:_;7u]^2DJo(gaU#ITe%Fe$cH^"m^S\o=t>Eo<MBg_525)-RG671Tp]3oup%uX_"hQE@l]/CZ\IM7]1/\o8tQ0?1,P?%Eij4TUJ3gRf4_>0DR'f)P$,>?k*2NpB-J$F.!8R;VA)8(R#BFnAqsEO>.0B[\#ETDob\XjMqQHjo)n">Fe\Z&CU]Y@\\VI=NO%#^%C+e2;E4"E#dl808,d9D)q2juCF;.-B5uO\1m:F[dp$7Eq&aAXfSt$D,'*GgC(FB*q@XP*k0ma8CLNhO9mH';RP@@R"e3;5ck$@D^%nTl,c$U)VSbNZfS2Rc/IkMBf;1<P/];jo:!EuD3d@G78&'j!#;D.U[3JMtb_L/p^jEjiD:kIE0MgmFZZ1RT%*2cBaom()j^[OKu-%(M<t?a[X?EZf\RI(#<+_C^Y+0M_1+jiDp=Cp[.nGkPh*(o4@ZL2/I>WU0.o:8;=u?KjV/8-^o&.H'&c$/e'NA"+6ZaBM57IVGt=$%&7h$ZbVBcC6.@M6CY%ih6gO8sUo=s%Yd\TVXbX'CMcjNOoXcr``HK]DZS[;g2pKXa*O/%#2qJGVl,$\1Hej"b]&;s[3dHn+D=ICf%k*re\0IPR6WTU-hRK!HN:6Ce^;ht*Z(i%9s<9Vp7`.Skb''pt*Ni+csJl%g2[-$!LW83%_`"oSTT!Z9>3ECXbW^k)4)KKj4MLZ?+%NsqaYS_*PnjXus*c_H"1&>,F=Rg%Cbn2%q'fEE*#Lbr>Ed&j2om1T+Bemm`6`p)6tiQ3D1joGuTeI!:4k%kO7e8r<%N18+4"NWk3%LOTjcd@LR%(5?<?=CB*M5a^rEE<)EUnTE7*rRK+\m>L496osd>ME:g=H>Zn<;[K+$LkBR+L2&"//^MYH,s1CDfPkS%(dVsbcR\Ol%_q%"S9a^0POMhnB:7.qoa0"=e`D:b<0t"28%RYRr'YR[$]HHd$!?!'7ZmV*:=?Z_Q)]$pX"hg@j(>;Kjkq1!^*J9'6.e_*iY[2]o%N8&E9:t6':Po+m%ecC+JV+l=DM(@4'r++/kWCmL%l+/b\CgeGF+XT_s['Lc^WI'-I+%Nm3E`Q;"6U6;_*[;pX"J?P5&37pn<tr:.%=N_@KBo7.CGSI'9[8/?,8deJL!gop<P#lED)#:SfN!s(#$in*L'2e[2H>A2W\eMo3(iQ"fhEoId*CAnqU;<55Xha%XLp^VO-K7/W%gP</dq%37cbd>s5U(nF%6Be=A!LM&&_d;Nn-ri#*.qX`Q1eshei0Vc$.K^+07AuqS!j"TB=nL2(6?&dS`l(3nGTg$DBq\]X'6"4W%!"aOJ8e)4''$<7d.OgC#Pc(%Mcp0M;ni5-D+_9q(+]Y%N_A%MM])aXBs#-/.SWT-:;R$Ku`ZSe[2<K&D7/nD[JhU-?73fk1%C(kA%T[G&@e`;U$2TEt\_EqR^ZGM&($F:<E=$`30C'Ok)?Eq"/27WuYn6fdDdLLH%'u?sLoEc!n\-re3AB(TgMYfh92!8oaq9j&I=o:ie%KKKdF#l0=n_VU;s<:la?`&bA[)PpHL8*Nr1RLCr%)S/TW2d0I0l&.6$:iHtBRtde<f?lm!7O9VZ)CIs0L2+Gl>H_0<Ej2<n&U?o4%=AFk$1n9F6R@9s]W&*88e#(f$iGu?J-q6>oBfSf.39[d(VIh1@')&IqD%2/*Us'^_0-RYO$pLN,jN0Ye5YVl&7d1fkfh?1A!HnIe%<p_1V17Z('1TFQQJ+G^M]!on;*iJ.$=PX$I<h8sFOC].&O3C&8?V%t@UE$/d_B<TG\GB'T_%B5`%"i8,U!G1Q`>U\1".;0=.\1YP%5XNm"KB5\+%,\KU"AsEpk\p`=QGft"b/`UR3tRhD(<H;J,>$RV[gc+u5CM2`k%1&E%C2h;3#_<CDo!nI%D?7aO!!32aifmsP!pb\%iKH#F>I%B<:$WC[I;qkn9d8"%/.hAIG(@7&ZUecP<OY`oM9-p3k_U0Z'K[k^-928OOAe,Sj@lOsQKXK.+-B`M<2rL[H(iBXr"J4=%O``?J\Nje.0>1T\Qh$tu-9:1d6ooL)]81d1RZX^SRLsn7-bGPa9%2bF!40stcamsMVsLE'V^7,T;F8ouFJU>S&b;Ri@]8fXVc0WS%3%t!Bn;h^2:pfniJ2?N-l=fFpC4>2C_;b3'3E@2/DIKh!Vj(1J/+;3o-m,bLBRru@P_70,&fJqsV:"9/5FGqtXtC:#\f24WZpH`q%RoV&N.QRPb];$2^&hg:'`I`+Y;fbl>a/'sni>NG(&rk$2'2cl4WJ.<1dgf)c=o0Ut$79;Pfko#mI5r\Vg);\rE6Y,Q74QrK-Som)%7:f2L"<Ng>R;aE($M0c:'4!2rR-CF]F'+RAP!5j23d\8&4Yk6cIPiB]PiQ@%WQFT[ij\"9;Q;A(-%VlQQ+kIA=`*+u[L8Reh%ADQ%Y[@Wnd"bOT8f$r_"J*`QFhP-R;Yi3MpnEe<EQB0?F`\V.kXK&-:ZI+R7&X>H3X(*D2Vfom4P:MrV&oO%lX]6deERW`-P=Ro$!n:j%+Q]$&Ib?QGXH\#,0<ck7BS8t=XdCD"q8rialJX>@hOA4)UL*%U]I.uhYU7W@1Y5Ol@hijlU>_f%*D+_:5+GcUS;Qpa"F"l`kL/o%%dX@?pb`QQL`&aM^e"\]L#Pb`)Pl^M+JajorHae)=HUMeDiYIE6Qc7`M#VKl@Tk#9RL55jIeLW.(Xc^FQ,o7h4WLQ:5)dXg@@&W%k%&&9Lm6k)9<j]T\lMEf"=:i.A@`>R6+Do#4V=Cs`-gn@kc<D6G5_AR!=.kIlc\<K0)\70b!Pt2!0DkpZ\/4Pq.M$q)3*F[26BQ8&N%-$WU=#VKRcrJiR#\;&-VS:edG?\=WUOC'(9Rpe*k:._,blBBsC"IE("K2jeMIsPC$6`_N>V7_QtYu#&OO(rE'>`*`%Y[ZTQq@%hq%+`Y4#VIF@SQE%:V('"]fB^=a\pNK);3pU(u-<YH")iL/(o,_?J8',Ug:s#MfEJrSUMB>SsO:)9QAlTjf#6<RPiWLoo$Mgc('$$F8%jbhRuC<7<+=5b:@@KMDU/^C(TA6C<?1[FXOI]8Vb7<,g=R)ZNGma+o"UK2&KAXS",5F]C=:^a<V[=i(^BjpU)Y\LPN'[@<,n2eTm%U5(,Vr.HN`Q(g`B\'i?KX4fT$s'tFgdUbpojU1uMe-b&&.q!akElYTfl-!anSYr>tR$#D.(kb^!Ei=Oi%>M>PL*-`-=g$_r=!!g,%lgT6'3gW-L$/$Oh>Ud[g(aWMJ#,MFrfC,lZ?B5Q%K9R]Oe=#=>Z5+f4-;BH`Sr(i9dOGSHDCh[*U'S?k=?W2e4G,RIa6FE4>7gpm%AJ'8iZ'3_@G='K%G%QKcH_a4;^ml/BoL3D:\a2mt+Sms5,,CaB<*iI&p-[r\/aeFfn"_/U;8/*5AMQ#LX5o,AM+O6#UT1:cl8R!o%E^!eJ2!r)\?:looL2"@Z3d._/3-UPkNU(89$.,4dYFAk^k]c?]\Reqp$@(,^'q3E@+E9(q'A^>d(\quAO!73:JQXVa;<u+&aPVer%2-ZjPn)(+Di+R#V7iLMEE$O$GV<-h&caL"0VeLl[(j0@F1V72h@I>u$/7p-fVM]k?G.W3,.qV>ZGGq!SEOE1MZ#TjAibbkQGoCV2%*MIG@WA%P2feFd(+mujrpjWCA"+U)%jbOF76gJK)Z/fV(Y$=6eIlrj6)U9DgQKY&Jh)/Jl7pMYH#Ybt-H"]RU`Y!Z]Uo&Mr(t/Mm%ST7!h?[,"fW"N2+#GA8YDF/EKcIk;k%)u%W<"@Ip"fm"g?lED4!d4fG9gY<nDc!-Q`]URdga')mmS<$Z5f726pl%dcH=R"XI9h/!%fc-F6C?s9Qfi>D]([0ob\BLnAcH-=7lq=D[<$*eimRJs>1A<m0kSp0`kb'sRJ:i=BUIc\TYG0o1bi8+i`UOAka1mB*'W:P!?for3%W2g2+e-4+Kr0NDg'`G29V%>Vt!XE96*iJW<r:M4&n(bA=]rd+@f8Z*=m?52/Vnb^Y6'=%I#c59.k&2Xu1-C:KO+a25eY\m/@Hus_%\h#A<B_Jg[('*aL9r=g%%?60?g<r5*-JCgir>`:d9l&V<Vk+QnrB4o-4jfiJp-CNUGU?'^kD^np[\!]+U=NJ$249O.A92b!jYOa@%HKSJ7F6;CS#;YPNX>#M;TAG?c^!DU=?!I8Q.)H:DBuDYic2>29Tg!k$RH21@KtH>")@=7W^>amhH%]cjF+&m^,aDW2!:4T70Tp\/%X$0*ko;$HB^#fe-fuuR,FSac$8RjI54C.CMdO&u&ERNVSB<DV>A_:U!cPW(rFOh2-kD;-`ki4aW$@.s$QO08[AQ9b'TrL3(60X+[%`%C?(l<EX0gUI,o:i-fFOH>\8rgpMjU$*bV]qk;Mbt\,mI+f\^SpB_2hY4T\pl\DhlEi7[JAGaA$^`I!N7&C8&iK;(rffR\VfJGh%?*H4Rs-t>ceAb<fO!>r\i]GXooR[\kF_"U?+]=DK>fuEEUa$A'Q[%Qq3ST[5PDVtSc-q$]#3#H#PD*82Ft7`LQPnj85^nP9iPp]m%]ffC]Bnp-U%tF>6:`KO[*m^\B2!6F7*O5K\m.*]kGSjc9*Lg>>-_odDNa$EI=0lY[7-62iT`R.Npe\64F^#n_;aP%TL4KCVMoK_L%,<^mkBP+_!AAgL%[k6?7<YV"b8hCUff"@<@4m]]ck^4et_Or?tTTl@eN`ILmiYp4T:5*:`lA:H>GeF\hL#RDEiPBBsf%V?E>iDR7%k4SO<j41PkJ3d1t_#VX>ip&g)L;4:$I1;`_4@Vi>DlL1Gn.0U62+sF:L=5iOD*r_o':K#pE_+\<RVL.[i_!_^q'/L'XrnKa6RJ(Z%*N8EG(Z?Z7UX[?4MY^M!^U]j^cH[h[Ke6TRq*5;kZmdH_=pYq])V`gS2b?Y/6"2dRAMpU-?G\"sMHsQH?"=PMOoZf(X'Q[EDK1qq%l=I4QQRpX%^$9X[Y'o/d*%JtR`3Hl.]q6kcQ_,!HT13oKB;;RlAq6MDY:PS=2Q#GWi[Z](a!JQV,9884Hs+t#B4(i5(][PX[.dFG%Y70u/0M?7Xl*&P9b(S<p'p&`Tb&5bo0H9.-e:&q"g<%^aK[MIMoc#(&hea!0a!QZO8.bip13mZ+Rh\e#/9#HQ@A9gXjh8jUEW,c+%A/O"l>3_C,E*5;;!_C1J_84^N%<b_GCj0OD/=5BY4bLsa[W"3V+"7>h?V'$2<QSaQ6b7;?XrIt\G7$7TE1'-B$]n[D$ia'g*NiV6%IQ`@M1d-5?Je*TO>jg_<d93[nGO[@PF(oq5I<+q8?&II%g@?-!H40aU[41uR0'!T^\j+BQ26/e"WFVCeZTX!M\WDo+S6_6t26.b;%[AXec.=*He6Hab92miU]$C<@s.49!q,p0<l-7_2NVRlf6VKjFhaNZl^)`qE+*,keYN9Tke?nJDOaZ=g6;o]ucV*otL`j+lUctf>l%X+UathaWU%2@UANNa09pE7MNF;_(?caMuZ/>Eg*l-00!%hPMS,14cnU76?dB\eF\d>1MSNm]>sDm0;`g,23@^P!HJ\g/Jl3U>E4.%<Y.dIIGr7K_+^/CV8[2M.kD.1^$n_Q=P'4EK>bei\`pt=P(9pCZWo[0m&ce8OOJULdcN_t(<9F(#u!jj9YFCNjLki=C%F>rZ52k!%+oaR=[9F--LCKce353QjR!%9eQ[,A@=3)CW$O]\Z=fWiZW4-&T5NG7rN,21HiONg1$8S0aDd\lVV'toa#V?:QJi9$.Rsh4TTpk+R%p2m'nk+9q9<pV#JX_/Y]<VP:fT-Z@#l?V#*%ag([=,Y/I>WI(5F[Z@&Bs7ENDfesR=T_`Fm,u]d7\Wd\4.21(_,E!mVp9SrFG/<\%ahqFB0W[W9H._[JG#Zbd)U0h@mE)U#=?a<AaK.W]F];as<mMkAh[ir8;G(eXej!>`gJb$(k;Mhl&IL1Jdp/HukEDq"_R#h5oo9Ej%bJ$ZQ8s^V@;Z1?31&FMV.j,S#VOIS#[Aih9M=nrChm>f%Y4CGrZt1WQ>X:Up@75Tf(93^48!WF6I"h=sP$.Rq4NF)nH54J>![l:r%K>f:q";D-SVhd%0Ad0BU8C:Bf[+/TWe^lB'*K-W;:sP&f?jJBY+\r7tB\<"/^%,0E]PKZX5dRBa>*]t+GTN+^Y9^G;Pm[9[IlF6:%:YBWg7<hT?716npVMmu^7-tH]n.'9&4I^j_e8(\`6m$r!s65R.L5'#c4FmJHNT@Te!&I@2N.`B!+UQGJc&GUE+J"5Snc-neN.sJ)%O>I-Z?0E&>B_+;.9)u1hm]sZ]/>h]p\RNA+J-TdQ8)/Y:e47'uT(3A*k;I%%A/T;ZmVr;-,:?'KeY[GL[Pr,>/GMJSFZkrb<u27M%N'8>"O-W;1#4>N>_p[gCqZ*9DkQm<gmqutfn6m*+G-jD!pVgu@-(+4@!3d47HO0,l307Rl(<'%7kmM[1.BHJ,EgnI\^A'j0)Sn1J%_ll^3k=+_>!DgZ@2mHS;.6t'A6#H&BT^kBDrT8Np<aELZc!d*nW<a^_+H!W:m+A*<[daEBHic7YX2DVDB\418?er\!AXg)CDTZ.<%+/fm/_[Sc-P0G0Q3B$dk2j.\@=DLH?*IQs-^f'4MN=_kpZ,pXe*"81DB'e<LMk3mcc=Oe#%&c3EX!%J75j$nnSQOu#o0[3^-FB;m%]^n^'R=KgX9eUf>>Sb#h<Z!Rn*ISU`oJ&V?pkgn5'pNqj@PQ0\Z2:%_6\+$lb!+%oTtXjk*o:7`"r1&F6dLjmc!nj;)/>7p7!HGO%$R7\Umio/\Z?UJO06Srn\nu!LT!4&oWI&FCDI,%.!6);GP2_\)I$/8^hj_@!)X1kH`5BL>_IAKf6!AbS+!(d+EA>_X3L4-0K&WPQ%95&_[PM\Jc<$'As/1Zl]g#Lb6>bDZG^he>a2(N&)F*Ps95bUjP,cb%#-MT,rkD-tB$45!69ke0PpcePK5%NIfn%#QcFmN<8<egL3%W[T`*W@s55]c3!50#"'PF@e3LO3hpW$1,[X4)P1G%KS`1L1X0$NP_<7DOVJClPVrp[O`/<U"I%'jg9S^Jq+=SjSXIf*RY]iD[@UI%"g2W0:+#3miIP]s5Y]LUEQ&lm!tIm?iGkfa?4Kk">S/>(58Tb9^9<sU.P<DY*Zu5-mKo9e6agLc\G<(d5Sr=M+EjUl8!bodDE$\:%8Sl7)dU\>58LeBpBCq<j!nUt[Iiu=]=0rq9gNAK"URa$`htDpdKH^J"-P(#);+0")IY-\D94SVq\mj8b;uGi;m6]Tn@'jQR[R9Ar%*5!/!OE,HJCc!:3,WXB]34=jc&-*aV=G)!KhOl9j&];sj7SJ-$VO[]Un&"sD?,MI'1oej.A[OF$dGp\>Tm$LZ8<sE:OMKH;APTut%hFWm;_ju/3#uVBGjnhgI5kDW%ljL5)kFE_^^e]AK%t^"b55/-<`n$Y'3t3dun[oIY0MT>$l/U>lWF=)L'%sh(\l+-/#e]'EpY++u%.^8\Mhhq_blpboD9?Vjf:PL?no(^cq,lf&"!/:YP&-=qq:N?r<;>4`V%:*Oo4[+D9Ktm#>@!-g0=!_0B[jLP;)a1m.Aul]B%Gk%?%a7d4In^JmGJt;cj*l'-!j5)A#K_8I8NH7,_!P"UMU%ae=h&B)l4kl#=e#>C"Rrr9:L^ZE?^2SI9!@uX4[7".h`-MeN>QJ[`-@OA!%[nf\??Js/iTtY^sRETriO82RXY7iJ([%7d0CC/>N(k+8j<S4a)f:>s04s^O-M-u'hSbnEJK7`cQC:fmu1k:de<0DIhrV-u^1:5VQ%-2`-VdX*979$I?J:2VhBX=N7LoW$'=PM6[*[u,i!=BT+mG@*;dAC3kQ<R-/m-WJU52.R(<&ROK$]0+[?\B&aP-8D<;.$/PW)$t=$%Bm)LgQ6ka0H;#fqLcOX(D[LCG_8cQZ"1_X**;KIY:s#K$)tsO=*hel\D`-I/JjM0s+>PM_qZi7#Y:t1UWcL%!#K!YFQlKirl1H6*%FYn&;7'"DO/sCV+![<]9.L1ub;<f*GBWc%V@5p445V>)_UVF1s(XN`:9;%::_+-VL[,a8S]`SGq&5^tgA.K4>Oe0enKq%o)s85BW%rhc2,oYD[JU<V24Gmluin$]=)A!;F'ZKM`%1`HEC3[:')MAdLN]Yug<OSmo^n_<cUb%"hAeu7Y4Qm)kI;;m-f%bX;8)P/M]o5bL$%jl=TR,C>%][@*2RQqG>iK#U=ldAR+_eY[VL[p=90A)./N<'"_3;K&,6NmRIcXB3X9-lo3NOf8c)G.,4PN<TGC+)VQ!V"k@,L#+2I%Zb:(r6sf<'e-C$H4kG4B.H^RK4?a97_JT<6d]j[1`:Mc%[%71>.>Q-#Rc0BfN(W;RX+G'G2UXQ!8)@K$]HN,:Ib0b\E[6q2"d^=2%dKXAU1`2/,/`Gbo;TAl9D+L]%0G+t=RRfmC49DBg=j)#gAY]?WrX(EUC:>)e@0+a"Ne[?$`QF[\>;>5uOR8lSqirq_LNM%Uifr4i%>Q%+1KP6\obDiO1j3K7^?L^F0`:1Z#e3g+iU7>ETiK+V`i[+`"&fqVi$%Itlq\dUL=1"UTo@t`_"kUiY309]H@0uh)g,sRu/OFf6%%5496>rT%+Mj6^j:,PIRLDcSC]n]I5'5OkZo)7hj.7j`Be2E+,CfVDF[36O9?HOphopa#%!41db[r^.`rW`kH#narjq$S%cDd,AX%0SNY(5!g2R[4O=Vg.fBZ-R+ubfep&IdKG*n<q(s'k#h8=4rGD<p`sJZerQ20B1P&'GeCr^Im-m#Si\c9U02#iYSiEqT!(:3k<A3K%#3Rkm1`i?9(o>!GM[8ANJEFk`9SY`_2ZZ0G5dFK"JA*Z#+Q<YBAbP.pGTMJ`h:DhsE9s$:^8><Ld'+3+:+$Z2g&$uL>B+#kO_"oG%3p^`6@pZtB$7WoVjBWHrhUFQ$GVJpPs7.H&<qV-m4np]"dJ+-"!EGB,W0;pKW73^_8gV$#q&9OVlNfq4M%Q_U,JJWE+S"83Om\=_%L563;@:*c'XQ(&(+ZF6;\uhL0VJ7Db:9=Sm+b<1QdK:f_Gu>CS'VCUUY;e-c=?g_Q,>BV?/>VNX>-'TiD-Y[#`#bn_1B!`)aU8SH%(`H,lc@s%@>g]aj*H6]ERM*cFKmIffcJi<ib3#!&;PkMBlHGHcL._:j.XLrCQl2=6`(WG>Y+!V3b;^kP!30@Nj36dum,i/G]gcF-%g)2L6;d0-s:3^^X=ptO)?d4<cm/tUIs3sM=l9Y],"h@qF`^P[#THZ+:N(=O>>+,h!/Jc"EMoGBF!r#$$4A81RgZYL7J:o?OlhZ:%%Xfu3?bjiaL++WqU6HSTp;Y_m5L]ZdPA!i^pFPp&Y2Rd@@qQkCY.3XJV:)kS,PuBHXZLAh,GuH[4..HX4nGp7EQQek2^a@(Y-#IG!%St;$q_6i3KVSUZ6K"L_2hWN4mPq4N9A`_i?V"]V9BA.b>7?*0,OqrF6_"S'V[6#`$!2q>+=B#l'\psuiA!ecUJUl:Whmm7-M.3uJ%I&^I[PiID@WAoZ`&M8]2#K^%6<:5KQTE-`U`Y<CJBajK7N,d6WiAY9UO=V!*,>1%rQ8QD;MZDpc6QC_*#GLUSU'=+U,3GP7nE@Od%*;T*YL06S%X2_!)UQ,Qo%`2$fE1mD:a9#"1nq)=Y&7(][%cA//WJE#EY:sB*$]OA)W]["5Se"0>"-sRMU-oRF\u8RH;SlYu9^#4O%qN;-!R;:D>m(Q<B]L=1%;(FomYYXBbGod@;0$aAFfK'erEGp^X=$f4\^1pZ`d;(Q5C;CI#;@/X'=:?!CR^4>U+d"W"T-c3>6\,L7%06]]Fq4'^`"+])13NFY,J'NGi,X0t46JPR[)Ld3t:^<O<!S[o(ehrkRcOUsl?hg0ek`:2@"l.m1ZKJL12W)o-!2)@0G=.8g:bUMU%16>]j55NaHr6>&[=u7tA?qWGD+etS6'GF?ap4ISc)8Zd4NU3b)-ZNZ6_aQ6dNt[so1I*hBBUcb<48TE\m"UiaeBk9Aj*2)i];PCm%IN;+oGn#!!erYT[+kDG\=ij>'\!Hm2,R_dDC:jVd;U@:fjY(OSM-[U'fi%qK=[F++V8q)Lm.1;l(<`@VYm+,J+b,W*:dY<05fC7Q%n)8>*;47<7Ssb*63T6'2/-46nlp`K_Tp<Qj7?(iE&r@<O[nJ1l]00FE]27NnF!KKPUTYFP4.bp"eDu?l-ihF.5R1_2*8$3pS1lnZ%;<!W(@;D9_q\CHlasDQHLP>AihCYF7.Km+6dM)0A$Q@cF7H8iIJ0sj=pGmnM$#p2,DMrHUgYKfD)I--Db4=I>$]SIN1:0'eq6/-q%!:1ZZa#\NsQEpg!5+$kDT"s.%c]XSu(nI7iJB^tNm5FZiA-Tg7]MXGDMZ]-&JlqG(^=mBCq\%7</pZ>T;mI+p\3"aIjttrg&N)Wn%M'qj"iV/.=g)a8-+)1B98BoI^j@Y*/-&:^hR.,tP;V(#YNEaE\F0P$nV#rUtm=SA)m9K_MG5(eQkE;#^pq7<OJZJjGVlHTpO+%bA%V=MkYOd_TF26`?*erIdd</+TPUq).p1HZ1#,D7!r)mU]2)8No_Xp(-SKTtBI$uChQE1-h6V_u:2<;)#$eWG:M+cgai!VDd".J39G%>*;\eQ@;$=8ZjblZa\3gG9/!daQsYk4u!<hB.A(@<ffmjKS<^i^,2g;0O`=2#8gEV*<[R1Ctb*Efb@?2l1(RRp0[;"]94e$NRK@0%+o+'b4q+f1^P%C>A.5+$[24afT7:am2Lo[F/9lb3($Uo7"u<51`;_h9SK@*NkeUuk/[TtlfoDL0NXBipfrf;CL,Z0p.r`-c]=cY$%K.*9$0O1mgDiI(DCH,Ih1msju6heB)/(eI&fPtfV=;"5ekKnu)gYZup-lp)qc<\#WLfc<KR[56mG<2b<o9^m=WI;a)%/.QiAFIDb%9?;#Q@)IdF]CEn]7)^_9M+bEq%?U7T=0+NgdGtaM48<@E5MgTr;NN4a:1Y1B6PHkM8,>fg5]KEaAOK!>em_4]`q]Fbp_4M^^p<!/%:V$X5&84o^p*,/p&G"!!YV6&JLEQaB');@bK)s-=7Oi:Po(K;UnJGpWB?;WB]T$&eBP`CXZLa,KM?(r9\hmmU#WXVpEfd+AoXhq%%QU>/9iRk=\Qu,:02NeBPpniB`-P)./Z7j[`(^R-I*)EKi;>?gYQXO_R=uRTn#TVYHm&U%f5ejib5F_9-'i=lb(FCq.(?MrlST%D-%aB#gPRuLKCT*Fd_1C-G@as=7I@MKU?CKF681/>RWoX?L.JhAkg[8-`3%;$XTRhS7Z'/IUFTDJ=_TtP&&!K^h!:1?eN1PcG:"a&DP%hMkojXa3lZW;uHuQV;d09AM2s`_Nc#$JQ98$c/fj?\qttDc6J_T#prU([/t7\CHr2kR"PWB2?t6m@c"iM.3D/a2RDlh%,7gUtq?e%i1;jP"QUqm./AglhQU@MK0Z*U67E_CDciD6Z_KQ\N*dP<W8@Tc$$K]Ac*ZjO!K@)ZD:-fgW7am5F3iEcOqpO0(BDKmJDY/d`+.sL%Q.?E?&/q4aIKLk%:;H/U=g,QT<BK>kJX^\i=O8SI)G'd$aO7^dC]I#nJ@[F`O5*,M'"S@&SBajPW.t`e'Ik`L5SH$Q(`!k"H@!ak%n*fB7Ha[-?s&PCc/DBe)h-sB^^2iI(P%!6gNYsXd=&iGlT9l+D50:h:@m7]k0(?`k)nhnd5<ZeBhnZrG&s+F?dX-iGPm,4;HQ*6,%:-_=>`BB0-2!.51m-Id0%5RF6DDI@bGp!6Ra?P_G%]9V/*Z7lbj;DSABd9rr0]DT%N&'ana'P*6/*H5]:%pr=mt?n5pa3\M#jBHM%gs#Q7ZM$:L$EhnUX`\+RE3d"V9//0nH+"#tkL"p&Um&uXN?"]]:]/'I/(+F(GhZ?08n(,^R5d-7&?+>ddF(%4;GZ*S;,7K15]H<2%!6+@r,=?f8e#k7XG\?*QTP:MV.6$Y46Bj3@RMu6p$O)qpDF/+[AeF?+f#t4NBTScC%VQ(U1egDM@[RjLng$Sk(6)tE1N'5?&l04:%SSGhL%i$4("X(B!W3iV^8&%cPLgRE-j'eZ"kND^@eTqa+,;inur7@t"fGEOFUn*n3[@'+_fKC%Y_Fo[Q@Lb^?3X/E89hGQj(GQU_%V&O]:5`U+G.TFkUd't#/--ggV:3DoFWlc>`haX!NRdmfdk+s/-XcHJRlr@Y&'$+7!h7XaF0J\YPr><grB8rJZ7\p(Lolg(jF*+Wt%']n6;bj8D?Ald>.!Q\pn="OSTS3=nlYNJL(7FhFp=(]d`^>K'taQh)DMpJcUH:]1r+(4i"F@lchN!\<opB;\klpi9fF$%qcmL*8T%lsnoY>egN@V6Q5MK7mtP8]QsuLf+U\-?)CYa]<N*>db55o1`9J<C*i$\5<>^J+>Uc\tA0MV%r&i&="+9g;uq,\m^-#M>*]8o(Vc-%S0"PVd\p>gQ:^;_NZd#6Ci'P?)gq3^&HUV:gDQGRTBBej@?.FX1h?UC_5;oq9`\!N/9#0Apj6T`/N=r+24ts^Bi3<:Q&r0qrd/c^%D2&@13M/n5n,I8r>sb9"5khRg#f[ARm=>*.ell7u8rTlg2;)k2OtsHi8Q0aBjL8J,.l[1SMTNPl[FjITQ+Fu'g9/nsd[Wij<p]mD%c*e4`G5]_._L`.]rgEH3%1!qT%0AUiOK0bT"3d#XjHFc--P'8"a]OAG?.N![2A0PF@ok98aH/]#DfgmQ?Gh(^Va>$G>I,Q`^uU3=%%*.c.coblgWtmN@Qh*C]mJ6uu"pk&P:<cB19UncrAh!2JmpV5FepbIPI)9#!C?Zmr0+jP8%&8C/_Zfq#30CNp+\E\mZ1B;6>_8M+%!?E@d/GaW'beT3tPcTe:!uV]RLrchOYdtBdEIkO0)E!_c[@mst9p[Sk$OCn08#i!lM[h@^bk8'd.@5&@s3%Er%>5(uKudMJ/>:s+%S$ZPA&hSae-=&o'\#,`+o?QOnXf9s7ef'I*[Pkd-h5s?m"hc&@5=,`p\Hb&(/f5nDZ[rSp5i&h^(FW,ef_QQn:<U7qL/gB^Si"=%%\G$#McO&0I'1TQE)r65[B+O@bGe`KPUWg[M$i?"m2%`BgamMF="jgNNDe&);OL4=c3db;P\2)oPAYt^[3cbiN]Zj5R9[(e/R*Ufo%;LD5Mm5Qm!n<99"Pqi5b:2YrF@L]i*pGG:SA\pnS>mJoHf<j-A)Sdb8kp$QbU#DCJ[p`V7TBYs:Q$NtH-3M9Sh)m>$P+<7YfC\h+%O8b>nKks(.@X<OmT>:8'(Q=0-UT5o_\SJ<c"1PF<1Xc/YrSZoZcWNsQm`C%)Bb@#ZaKe>ke^l,gC(>ZS(c-<3%0_lU9+c<nKEhe+%]2)2K=n=ptNR#m.*V1$Cr!(S@p-=&n(Kj+US)O,p#jI3q)Ns_@<?UV[!6oa2!#\g4aqXndV!:Lk>!cJSPU9(oeLOYPV?,0\b6OUI%,;jbHJdsoDcV)#k0K:%u!&CEbi1*:[X\OuA!:n(mGXXsd<MUn%[qnO`aS-A.UN6&qUJea_IjVl6P'PD=VtTT$EhrCp<J5E[7EM])%4`ntAcWd'b6fqf$0dsiGd#r$rak)&DQC"*=n9!s\7)L@"ghi3Jk(*=()U-NI8Wn!iD[2'8bu4UX%M;cK+1d0l.d!gD?=:MX%]l%c%l"A;\qRkZtdMnk=L%fGNlRefh,2j:lPSkl*An]iN%4bjJ"J@SLZMrnikc5'c)XH8oI-.BHUkes@ml0<oA-Hl<;Xk4/U\?HAL?)2-%kXl8,EFH_9i`a`J.a/h=P@Iq7M95Md,?tT2]a599m-PSh<k0<3QDPsd9l\E&,?a-F,rn#R7sN!O"@OJ@HHC6-g[nRQ$%'G9,K<n3%d@L:NAd6<Id`07H9KCmS&BcXO,bTVdIXe*L>/78e<I+RP%"<tS(/TWC=)(\4kG.*fVXm=J?s:T`)?UhTCJ:?W7Z%I08gF7n@*/.]%=<#"Z(h"_B0*&`T00iMM!):Dcd^o9X\H']3`uq##6tK_&MO&PePkKJH(a=6[?$N!8Ed5elD#hB.J2bK!Ql\a_"$6t0Ys0E5NOWs_%:p.c%ru&@SPGuVc!CLt2;`-c=-&,lYJtT)\n8@34;aKaMqu*An9RqtrT=N$J4fJCrGi7>Tn8<nZS2Y32i$;3_8LRnnjD0BJ"kZ)!%"H^OG'N^FQBQoteh!QTNDKgl+TH+F/JM70`EI^`9('+`-o`VS]GQqjdB0!2kAqsS\79Kg#b`.cTZ&FL/CblCe4;\Y*1k@?X'oYlJ%Q32/,W="#M<%id\J47>ZiYsU'AQ'Dr0SR%E_$!:)9ONfH!Il)+/=!54-h7j.kNN!#D.fEi&-Dt^#T8?sJ2pWh"B@*fQhDuqd)9<f%gfoo.64hU4MVdKHP<@Yk>>?IJ?1=:SQ)9^.^(L`%U-K8&Uh6^Q8;u)fai@Zb0k$5)`<#FmTk#,VnPFS00Oj_%_rZ.E1E[7[g*"g3%7KW_bS;*U+&1m-$;gfg+h.sr"!_3$gSpsN#LDPs3l,3ZJ&?2s#OF-_gbnad^\IJ\i&9S(3DG"5*d/Y*ZJ;@P"=F]69A*b?G]!03?%)i;D!1KA<4m9ot4JE?@(X=(o^3T2M!+^?-)'Ot$Od;F.[HR3L#VA+A``;l]$@O9-I4VY3;1)oT1FBrib3++<S+=nj\?tMZW!0D6,%?(mf'(^!Gd9^COUHPZl"JWN9sZqUrh1L>lk#-Zj#*Ws&"0.H_]b&,,,F#Y3Q;G:Kdb^Q.]Bnh=B&)Ids+jRX28oFsWGY?(_FD<h=%#V6D%K7uS"1;3gJG`^aloWNEW*g(fQV.DTZD.lo<)6n^-H%!B@>3.!43YEU*TtYak_qm>(*KE@9:DG(t>Rq%7Z\A]l:K"&EmX]m7%/X^m)$m:;@1s"#uc7oY2*7(Kp6'\#B$H$p+W03;u5HnH1/(m'hg=IH9K7qRh('X?UDQbpN<2RhP&UQGbQ+!Rko#C`T)/-m(SF;3i%[EB%H,*:ic=AXC?qI@\Z!$Qt(lM2^*c*1'I,sM_a0D<!-F)c6LA8)]AD^[SQ=.)SI>h.D/4E)Q5H1/gZLk!-_BbjnPhRDH?qX72Y%CHB>l*6*1A@cmIL#V5!.^DN'XI'=-eabmipKKp\UQ8O[&K$rn1WX'9V#U".NL>%b?%'f2_cIePM<K6'pjUY@YE.s*mHLHEh&gd\G%-(_sMU+dN5L(%L-q5W7%SOB`51npMP@jj]ZT`fMi<J(U@9V_4?*>IPX8DNLHJAVlaT]P:K=>(3<O\A[Y!jcTP8p"t^nlHnmhiD"`%bkB<%0i/>D^.VCBQkG'Tn_9$GXt[Vf(T,Kqd)mbd&s9'",O\@P'(CI*#=X[YQ&$gV:nSS)>oA))Ec"&D.NTjt4`'V6H**1F6W0g?%J#L)_\Fb+mg?(:dLjLPn<Iku\cASV]D.c9.q/Ir;Hes(GQ;F?qlfK\Oj0@t_7&[$':WPW>rJ2qCA;)?7ZbRG$goA(%U`@QL[R=XE%3!_Q^qthl6E]s@`:^kPBINC>#.Y/bLq4YJI4R]Oh5r&#C9;2_,De9+]0\4'"8/GrC/tX#AG,R,N[I30Te2=HG](r.V[9SLh!!a)A%99B8nWi(61:>Wp.jrm'74s6qH^maCa*MA$Zm:L-jD;Dml3ksDaQL?0+F&_keqpeF)`7'cW4^liJk2lihe$R=RR*26KdZ/r*W>I;a%K[S=Q#m5L<e?5cIPDetk0spue8SD3N\+lD,<>7onefG6`jm^dFG!SAO6?ZTtJMXCO-O++CNs3eL4j4P%^9rg8:e!6]TL,+*4t1lI%F%[N,4A=R7#oN8(@b>R$TZsUka!U't+ChIf0XS=#QE_`a:4rkB(J!3M?Cji#?S.c+Q5?;[VkXL2Y8-8m'4prY2EkK,.X]F[9rhO"%\so4iIruT1fhU"_'%;J+;3+'I?,>t9<fl\ARWLZOm%2Nb";ZtT!/aIHd-$/P<16QLr@W_?Q*3r4JmgN`P?bL5>7tDFe&[5/r;rFV%kHjt(Uo?dle1XoW]t_PnEYWsupHqMa(8e=kNsCNs4a1Si-;/H'2a^nQBQ*Nm,fWb458b&)p,P958%5@Mbf&ojYd,Eo2gS`$kHfJS%^X(Lq_?^l#a630`&'%$K<OLi<01o%c[GcQD'3-nf:tuQkb<_3@i;TFM2S2'8G+cm]$KAljrSX"9<mDG9X01BS"9U^th^RY3O;=.B%9^7du-T)tj?n4bg3A&V6NUs)5mSF*;p@_p'4CUms.jZi8j=8X`f%mrZl&X>RD:pb5q>f6&*,j(T+MMBte1NVFnQl@>].^]o3Zkh2%X7JptCIQotN<$<$/M/<'3RcY[``Wp/+h>?X%Q[ojkpX73V.?kcd[tHs;o8Q-'d\M"J!AF>;gTDHLGA$C%/MW^70=A\('e*;$0H?t%4QS4m]2B-E^b+^^niXJf\!%AgWD5se&*p.Cio/cq6#l7s?<e)>=IHfcgkliWelFXb+Y$kdFk6,Z*.Q,V3gW+?RSE#f"*WttAkWsV%[]SH4SMs`@8tT\_CQ?`8#Rp<f0+:m3b.5.lW=4Y(dXW4M_9!PI"kr9$$d$\,%'[N_DGR[rA)8&HUgtELmCV&elsA!lrK6M?-FZ((%O?+bmi]9L_k8F$>C=SA,Xo[Dk8Fuec;ukon-pc?EHi:\DPW#-%"M%W@YG$%+BDYiX=!E4/jV3.'Z5pO&V-07A;m_(;NG4S[Cqk=V%`;Eo5\$lfTmJ]dFeL&BWi@D5gPXT4>>s1)9MmkI-/1W9<Y5;2OmX!sC4IKo53R?X3Yg^X?joheqh?AeRih;7N\gBu!-VOB[f!&>S%>$JUU@MkVUN"r=@A=_(8)H%)9mEYk39-#c8Uup&2"`.indq49Oln]\NRP$`bpTkn28bCV6K7_=)hs?GJp]IN?T9_"%@Y(UiUsQ\n%5]Z+Co_JJaa?R:%nMei\nq/L:S'SZ_"f,SV^#:Xh^Cmcrne`*:m1R'HPDuQYLHRg$_ZFpO=)CK99TCHS\)UINV,u=1C]/h.f%dE%%p(EK]HlPII6[*9nCj+`X\lUgplY;2?7I"?tkRKp1;6A`sB^5]kG)`(t@N(J0/<h)V_%'u1oQJdHj3M_1>@>9C:2VDdX2n]2GV9//%jsOi=L9[Qc2+PiVj%MlAR!4*B'fU9Dj3nY$To;:FfdWN/(g76A.@K1JKe0(iLLM;F&67M'://<G?S>B7!OGdq$EEo]4A8`cn)dIZ%-Fo6`Vi^WT6V`OE_tkP.Lk`8%:pas3bBrPOV!:4`\>8(SRI7oJ3[S\J)%sLG<Bc2VFM@9]D7#PVcCJliMr,],?@1NHaF.Ks`]+#S%XlB9sn;UJ]56EBccZfsJ-sCpZGLF;UA9>JjV<QL*(LAkOpV!m</)/VAQZ93j0]AkKe\T.%cWf-f!!1ce-79L!:Y3nqPR[L@093'g%s,`bc?&1CU*II88&K1!?bDjBZU6G2/Rg4sBq(Z[6q.>:-!>4]'4p:s+nc73L"\Aq\G`k2E9Rk[!B^5MO*&Pkn<m&Rmd>IY![9'L6%Kd#ERP`#lF<R%Pqo&Nh1h=#CV"`Pr#db=;5n@b+WIN/VSo6h?N]ZL#56TOQ)>8DutM)aAY'Hois'%kpiIXOr$(iuSF`E@C/Vju?L%FGkUnCH=a-WKn(ki[i8,EXp;U)2S\C0d&:/16QD$]TPap,9ggqgXu5Ul^4lT!lsV_Q`*ihb%(N^`s8l<hjdU[\m4!]FA6a))`_bQ%et?C<i`\4Kh[=G\.7Q`78GXuhWCDZ,BZ89'PN\sn?[I]l.\8,QaJ>L"4QOL^ahtObr#U,]3MjJE.c&:r?7oBb!\FeFB)`Y5dlkGH%7iY2Ba-4e3J/-F`if+S<b\EBDd/KF.^@f.ad_-$3]oh\m&n2W$8oiX=(,\bRe6&S-LbRGtS)PN]?M<ae,s0C.41A:k_*DP\opesm%;%i.To[K;493Hkb8l([`@a5cH.Ye.hc?`O<(@e"1f'f0cBJRGo+pbHY4;BPjF!N)c1[pAXE@6l5s80fLl=KN#m;G^16AW]FK3V9Q%Y=ppO-q:Q\G2!1I!B2D0at=j+h:P>q)'UY0Fr_>@R(R,&P?'Bnni&MVM?l!U16IO;&h+P%Y![hY]tB2"J]$CC[_%>sA)V)eh4fbp%SMQ2g'"Eh,:dD]:"#KAPZn/+gWF'kA%Y\N,.eca3o=L'\@8f+g=ZZ;?PF+U:UNoHq9]>K:iQ@MAS2^d;Dr^fkj+(UQS<)LQPqRkN%=P2,\n&0&U1ojkm]TXaGiKNSV's.raFlN0(*-k_Rk>E:&8'$bZ2^ZOh(WgS<9<g'G4I:lf."%&ie=u2\P1e<9?]$V1`2!6*RU;Ob%L&?,$S&$7H20b#d)n*0Bag=1&iH-(](6MMC\EDgU<+NHGC^SkI8gmJjmmZ8GbF[0LMlemb-P"WJa0JCb="XbZJFj(Pe>]\,1Q_/b%Vbp:^G]GKN)bRssGpE1!6'm%dD^<:.:A)3T^&1Q`ZX</f[:SH5cBCOC7i'F`lLFg3;0+4MUjIKIfX>2:Y$Nd@_h?i-]Nu@p[]&\L%7rFmImuBL\^`79dPMdDEc16I1Ouh8lld*8CL5'?og,AQ3f=\?Yb-&C[q7KUT7ZLYkjGfZ,is8!13T3_ua/REZ.sdR$B-a8t^mW2?%onbuVQQJ-#$FG8M`h+o5L;KFP:G?_hT!'T'UHH.]6s;!d2IjLU(lfuN.R",?abJQdg8krP8_Tb%$)Q!^Cj@j&,hI9t#G&n]^YcL1%qpP?<7bcU5H&5;oqrCjo9UH^ZAk^5+Bf"XaOS"=KH,W/GKC_bf$bG4*Vs?f*[6*lE8+=(_!s(CWjYk=SXg!sVIS2Sn`T=M!JFrb5%!NQcnOb5K7Q^n-B5qg*"%KImS8K.O*Lm;f;Cr@s+]&kZI_Y)R7:4eP'-2'R7Z`g<EqI'lH"#d#<abbZIF<PMrRP!\.?amZjN_$#"%i8+_IFm8]D9dsos%O-S\I)t;%'SlpG08GPCh;#(![%3<;p\d3Y=R[c.D'4s(BI.L<+4\MD!8^g#<R+Q5Y00SF(d<Ou+3>\SD7f*q%9c)$fjc0&Icg8)$W@9g5j'>TfO=99X2YoXtb[k"uXs]eaT_W?blcq(@FR88TNLbOWF[#qj95%mPa*6E2eqQV3dd-",L1:4H(oX`n%U<XCj&F$:e1J+I]hn%in@1"$HU[hFKDIn&V&U@C7Dq4Q7VfddOq-g@t9tS::J0:"'g2e@Y:;.mdFpKNA#C@p($$'-7^PYljir&.U%:1tU9pZJ4&WhAQ"@%kj08E%0&T]X(A`3:+U2qQZ*A%@b8[aE;1OgD[]Al[-Ump9&55l5tDO#oeKW^NG79nq%-P"2sDeqHB1fc%np%FG!C^<e\X^)i6$;1ai$<UhLjof2PVI@HY*6fThbAcj-Z((LSqfhnI2PZsAaVhM?K5oG&KK7YQ8GUaT@^[YS&Q\JIsNnhEth8ul[&%\m:fW(np^j@*?r>E]eT;8CR-_>A'k?[E<Dl74Sga:P?SQBT3"Y>`,4iCBRCi-2Vsu$XaPD1S*KCX_p$dqH9[(OoBGR*1';Gn'h$p%cZn2(5hZi[BYU%i/+/@+Ogiq7Z0GS7APdX!fp_Ma@UU'c39R=>CVQj(S8nWgL$^b<&0hB[:!:gbo3AN:6AV!K>:Yi=TWlo"lPd=T%Ql`*3Z?-RZ;SfV=S(bi[.H<kd!&%WI.1'Yp+OdQu6?ulu6r0sQ7ff\foa>2I"GlU?lZk;(G.fieW%^A7r&2VVY`;cHOL[Vf6f7>;%j(rVAC,`qYOAdHQ4OcY"cPpSW(bsqF'?T_@1@k1VP-sl@mBf?e#c*1Yo5N);OhuphH`ktq:Ig-2]WY-u6N1jDWV:?cZ8m%5qELJ%%k+CnH=F'>BH`CA`_artcikfRddEKN)HAPE<i7mMf4cIuRi/dc@.3KC20iMEr(Y0CsfZ:NR_Y'RPQ2Ns$j%"!Is"T<,?;BA.el$8a%Wt$X.JU0Qk"Ci/aoC?.=Lk\SJ8=;I>VU>MIV_WZ%]&q'`iNZsV/Ke\NI`s"Br.8tMNGpY-)$D/.qSVBq#<tl9^*[BC-:<f*p6:QU%EB0u<d"IJ]&O=moE`'Lq1_))nd"VF,#NmB[i:+c/-4a69S)mXC'7J5(aqpI(`&1gUSXt]2_9rRFE>=3%P=\Bk`sucNbAhgZo:'!K%,.J+72<l4'WVeQ6AU9Wc@>g-q/G"#5U6@ohLt.rF*0qJd8;(epbtH/S6\(iK!NGd(e(NJjT-EA5\_QL,i&&f`]MkdIh4Seh:T"cJ%d`2/ZW*c+ACZPcQNZ?9CSRN\EXm%g9(b<@XS`C'2lT*po_R.n:mn4`*o6]4J!]J/Uop%gM0#A(g1iSSfXH&>Y\QQ,ubu1=Ydb%k/%K77jN(NOm`S)eVR,;C6-&;_.Q@7NCG:2\[YP\UVhbFp,)ogftB<B(g"nt[Hm1O:]UjT.h<0U8N*isbM5i%XgAA^m9Z)'-3f1%=t:%69>b`T>Jk&XITc@j[(+QhQV8UL*>>q2!r,.;n_ku]e\6DGd$*G;ubWuEs=]K=J=i9bejLKg!">S8jM.U;o0AOqQI!l*.bI"SNL.j%kbuY-o6qZa--ao3jh[W<U@;HoMYPaJjZC]]bXnuP;qO]_$#:^"$rSYt,\CHVfKKI;4NY2s7_C*&"!=VeZ]kU=A1OS:N/VhFiSBUE%($E2kHgR2#a3p8G;_EbkihGcSO#%$Z0OB$aecJ\?Pa&T!Vr0Q)LmhD4JS,=NiH['K"QKN3N7Xl#-(sDt@[q*rQmq8,CJiO(YhLB3%@%&M"k6jEp[L2=/1Rtq2cj<L"M#[u-]3.S`<QNrH];C+c8I*sG::abshq@T`gWNI+iK)[Gbq0sj'!cDD9,J(P"KlYcF?'EL#m\gX%4:p#(V=[ZXE*+s<8Z@&M5@.g!s2#t%NLY;s+%*/fX9[BcSM`JCp-oHc4Ea;9!C.Lu!JReiSPg"Z-JD[CpJ<4+d1i86B"^\N4X*T/%F)Vj?Km'RK9p`]H5fV0k$u3u="1@`G$<YA]'eEk<G"#H-.Sh.J2JlN"4l7.9Rkh_>gM!`t=L6go=W<+(e-D\8LO#[\(/p;\Wmo)`%BHi-*NR8S"EX^;B)@0K/]Rnc_6W>u0jUktC#gUqF,;c/U8<ErZV(U@>6ls1_B\$T,2mcN1!PGO'*LQO,,MXRme>,kWnP'?f+kr"j%%e>=OIDRZC9b5FC8,k+Tq]V\A&=f#?qq8@VS.IcAYcU0V*n,>m$@iSqH6T(uWQ[o\XfMS5*.NDuO4/ckeg&Nn1+*R>o6Fj!V73']%QNLI!j5\^blpbso>jX\CL`>r(g.]]k+[j6oL[eIf-g'>pMbk$3oiTn>>0WtUW#7-XFhX>&#I<GbV*X>++LRb[qfCiq*i7&AJ,&i(%'c')bn9K%e*SkL)$&dGuf@[8G_*lane.cC_$Ve>S9f"KNN1<W?!jL(nAVKu84,l(^jHPMKCa6D^c2_N#g=X2t-jF&B.4r;HOajC_%quf-WD"7\I1VNc;Yar2[q(C++C06![O;p&5K=c9?M7(']ZVl>r%&NR?(&1(ul@-I;[*7G@8W47fEm(`oX^-dZ37#o$a.]usr8b)W%7'?FCUt)&a?TXXKkgk,$Q^E[0>4RrRaS$8GG`ctmRIa4_9<6F^35iJ:2g$VfZ&!erO)-X1V[p\^<8'*iTr@Y5F(-29@H"7=DiCZ;%__NO*e&g$p\UM6W(/L7,VTQ>A-D/>$`u+(?qC[XB.C%aqmQ%''=27BsR8qSE6i!==6=no;1F$H_,s$Y-LDNH[;-1'K8Z`Lm]+%oX%\0Z7-hAp$ZCOC(i%[k'm0d(>OHaZ'1*fOC:<go2"VdCPD+t&tC`PZJ:msp9HR(MIO>9/1>r%a1]hQVTj1S/bN.h;gFgeL_?pC"G[%lUbIB4g<MEB#rDJ^G2\kF2JA/Xkq+/]$a06WAdp%W]>:d&+("$_(3Xo[V\fsdA!m.Iid\)31b:(7cj@P;&,1b[ZTIR\raDgo8%Du%f0u9H?q6#T5SmNR3Y<ft!HU*S^Dn!Rq9)fkZ#Ll0"_DY9oD:J<5tOr,L(RMOgNgL9;o@12f4%n'p^aTO:2a%4e[4l5C-gRbD)9.X%A7LK3fj4K(Su,'k\L4gS$R8f;I21WL(7[,Mei"=2$dWu'Anh:3T3HH?@)=(6#B(m.n7!A?J)?bV"e(a!o#"Kh/4&RN=<^R2?Jcra%(TtYcm>49'\9c'i#%RP[DP\-.?@lRZ[V%.Z,TZQgjH!cqNgIGr"<iZVEX1g:7d*N@_.pP`PXN_+<EV,074YJh\=4F4>(=.6D]7(q%gA/H4Eai!EB$j"!QZgJ+@4_C=EaE,^+'VDKn)a]A25=cLEX=6QROXfFPA]">-&CtHT#60$S3:mp[$R?Bbu=g#a8jC9eYRla8Ek%n%+#m.Tp!f6cG?e_D2.s:%(T7tPZVsd,TlYP*Q)QagZ+M[?^,%!FV0Z>03CK+qZj<_]*hJh;Y\'C4b]G5HYM/f/Gs9ua$>*[^)g^5D%U<U8a1AuGDMEu$5r;!flC:B)0^tWaNCBgf%"q<%H<%YQ25T';^:bsl*orej5C?FiBCKF]MattGL=Uo@XU^C>NYQq4,o4mfGK3:;Y%cO^P!T$,/;:JBE4r-:<4oJ3S>!XalI[cHp87%b#Yf6^Ppg#QTA_##e(>kd$8CN8><e=b:*gVmGK9o1Yf`d#4neFU7'MY)$_PL=n&%]=j=k-=#g&)(0%F`-B&c'>OMP#Fm!H"_:UE&n:??Hm>oM"3??g&etlEQ9W**&#Q-+6@`5lnp3Ik4\s^i<a95=Zs9`,42jsolLQ@G%6bSg'c=gj>24Gd>]ZXUd^pA&fE:Fn`8K@3H>U"RmqKN97ZX1g$`S?u0V4,Y44&XX2mKbqV?YL#__F+=&0@</)J1TDCV$Y]?U`N=J%W_Ar<-QsXaoO?ceR7ZGWH$6u)4HF&%%:.H[<pPe&!Mc25@^?fM0;%\1pmqNX*_\Fi7Buc6ZunfT_/7;se`M4&[2Eaj]-st-`H_(?%b@K.H)Pb_kj@1hIjoj.h+N*)L,YtYjbelG\4`_Ua6<sY+4@,06TMD=`VsQ[&MBE2bbn195V*'`F=:Sdc0qX<TC`0\9-O-A%*PS``%\iN[O=i*%eL4=;.Wim=hlh)Ms$9>L^,faD>5oe3.[KV@^3MP$5p-/Q5?XRnm#NE!.%TFQmA>3#-Fl(0)`EMiXV5;:mq:5l"-9@K3%'RSML)FBlZ>StqD%AQ`CQN9"ULU%p1/iMVI>M%W2:bs@TA8%H+IUKpK,-&$JM2X9Z*CbPJ?)ln^#$;Ku\@'IE8!YAXF,12n2-to%%qt@>,/<09uF/mQgs!n&Pc.?U%E=+QQLet-\[c&2:nlM%jbZcDPFB)cE,7r!QLoY?HY:EgV1i)c43*_@6C"7e&W6+sZe$L9#:rTo$%k"mHQG@FCYqg]_E0@B],,ZJn.V`DhAaZ8;C:\!K7`mk8E<]Wm04%SsPl3a=UR)jR_XgX<X7iXaDZ9?OZ>LUt",S)E=6uI+1Vc[ER%'!7;67UsbQFWD!]K.E%("d[l#1#jbSH&PoL?\Oq+1Fuoup'bVDa!f)i?mE]O2(!ip^(77Qj;]sB[3?u!CN='qj8%S;<Y*i%#H9_#%ZL<,`.H1V5=1gqi\0S'MA=mRb@h@.3Qc4okZ,7mI1i?>:9T7OC*"&"(^E)7>Elp9FoJ$Hk?`hT6!*[+Kjs-,3jpB/c5`0+]c[abf%/tZi,3Zc#>p[bV*Xu%$IIOtU8\is+F:ES.m65/O]*:]M\4o4JS_]Ls]P"_d(OmJgUhZ[nTPW1sGHXJ'o@</p"AhMN/Zn4^FZ'/B_%+$&##9f=aEqk&/MCnfP"I<+<h\]f]K8@b*%R_@7<4=01>a`^\.nRO&k0jkdFXsuj18=.R(Pn`alEli"b$j#&Sl:^.(,497j0p3tn%m0B@+0UDh-?Fu$2pHDpG_ieAW4b?u/ZkR(=&HHTnk+juO[_b+la9FZt2$GUX#,bAiBs\R.goEhpd*?E4n;-tC-68$eRB/A"A1Dhi%%\>nH=E[jX>0V,5CG1g/aGH=+,,rq4=B4Q[1I8rJcb5LZG&q9*^G20&SG/JE8EPNL1_Yn!;=[FkGg;St/21p4eP-(`in&CO3_-+'%pLUi9m$msolsfM8oid-06Xd.OoB!t:EnPNe.6Gde</#"WJ.h*b8S]-+h3\OR8;a\m/ee%=<6u>'j&J=0_n6a7is;n1(8i:5FCMTh%Fn]tJXNPWqWTo=;Jk9)\1X'inXf5O*;N5/:$sW[#X%$DR6Aj;Si>K\IP-f&%g`<PeNqf`AIFJP\nE<k+\,juH(9(?#9O4^B8r^hG%=P[aW=#''AV?!_F,0*`Jl7]0`d8%iSe7,8>f$3!1]$&=&N(?8dV8S<u,Nk[P_dtbqm[#Yl0o97n3r.7_q0Su<jRc?"5b5^8b$T(g%nO,YEHql;YikZ64s#hB!5`Y.d,K'fLrj#h^2o+tgdo"dJXpei_)JTjm.]sp/2cq-h1-)kk.]]aV2VnWu1P+o+CkOCNn;BueXK'EY%kW6b>m+0-JECH>fIjno$AN!h6+_<jO#aqY#Qd9.#3W[p,7=*p%LW+C>3ls"_(b_Ud=diG_=^C^/l\]fm;HEAV>0[]qnthQb",h06%Hs[8>6Z3<nYiDKl>MZ;$/[<cl/d#q2(G_)\+i)N`PuWOFC8opTH[M<V"NYl]M=R)MXBo662Gp&sq45_:=\6+,U`)6+"$e'JdCRhp%mGcdN6^^Qm4"Vg#P5^+&4-O3%L?FbZDS%qC"%^l-e<V`r7+TW-+<etHj.u'MmN0EObGBK>ko?`gVn&(I%b=,_,NR3+XDD.;,kGeS%q<ban\OKruo=dc*hnF<JKOU-*s#Esf>?S*E=Vadh1=FE?de-\RA^uHD@-(Bd)'`NA+Y5)"S2K>`SFGQ,'*R`hfq+5)h2/Ps0=,L_%,nfcaG:(if,4DurHf+3+lf(`'Ck],/#0*OUn4B9Vpos0JH+/QI`5kiP;+P]#O6`U&IcT+U(EDTUg:\T(R?-PhRO#.On%!_3TQt`=%4!TG]l"L2=FPtr8E*-*`QR?iI8=u-1:'Pg%C=`BUL^[h[3E`8@``KBi#pJ<'6jch\%Tro^fCd]dI,q5nJG-4?d<\"e%bt<I6U:,7%5%^$+?.+#5$g2\]DU&qI3e29*9t[6"S7e(rEH4OBm[?J"Ed2pVo?LrkB7<\26YJ[.-*7$X>s0iY,+`sc:eM>\h0$$!!,8T>Ya=J(%*jaTH<#H8YClq/"fUS)i;ah#D1VE2'16)D&:P_b_DRLE`2=7Ke/]d(W@hVF"E"C3(Z>NgtdCe'$ZRjii",Tt:4a*HYk<h!`,ll0F%c7@7V+j0I(`dl:qdG5)d#',Fp>'7EIkQubodL&8fQG/!FD$sBP?,8X=[:2lcQ%r,HeM8p,Xoa5-&DIJPaR89+E%2,J#/F+-f&M&p%301gl<?*FSKVZI/ArC#'`A]F[Adk+tLeLOe%O5@;eob!c7D9?@0mG3[QCs4_bA'T(8+UcgZAgCYZ"IClWnU6D<C0J"C#5@_S<::P%j1&6_,p&#'`S5/YcDpNI*L'_c_]jfMMnBO(r)UoLkXHFn#:(,gnc[Pj`aDdnlfQsLc9FF8W[icF3mYk<4N`8ET8K/BLTr=XiTg3I%j2.k48dd"\qC@fjG)]!_+Kgf_3'@dkfrI/Ldk=Cm^u;`NT)2'5/TPe$BkA2$W@G:;Ge\DlF-ub/p7eT3=2ja4e*8^sBGt_g?UR(1%,.-ld@>=?4SK4BJ'Dlmrf=d<dNBo^a;.bm'SkbF&Wh&k>/jR/3/h#Kobj.:0oK3]ZQMq;D2P<+rHk-UD6i!_F7ms`W>WLg#n-0j=%C0/>O2-cRP#RR&8A[N4(=_.S$K:]ru`)pY,;T\QN=:&_+@jem'96!oKZ2g>nD.-LO`1bA`Ts*reN^+[b.dba-2$IAJER]b_O.4@`%5(qgu6l`KsJO8%RNf(%/br%YOM:(_4aA='Z82$QU`C3qNb.I8F,L`M>0\fG6'k_g,rN,'*P1lMS>T-S[B$Cq0LqfLeYU-PB4mdeg%>J:Lsl`4f3LHN>El(5)t$FAa%,Nkk_EDib1]?t0!p1rm-7[XThQ/[YAk'4:t3H4D6T!BDF2"Zm1iuk^tq7Tj5"4,1_TgCIV*&']g%EWdB5p0,gX2L8,_R8FUMaJ;S-kPUgkl*O6hHBkI<WfFi`1g6]@`;/gGN])5H(i>0&:-UDTif%6n.jGVols^+WHn@u\P&.m&)'dgW%7nq'Za!+FkO=d5:j;KG(fOj&6ojN@f/V^B<#EAis5N:)B1nA(kF^+TF>YlAnIGU0UoMil_>`r>-Btj2.iB4+48po$hpPbQdXeM6C%DU`7J/&Mb-M'\IQ6eq$=ZIdml[;#3eI-rmR'ms+Uc:Mqr#^`9dr(9G!gKL=LO.]?gq_V?cM2I(%U"!s/J?#E^8%T/^WTr0_e<*V3%Q^$+WpD;?hcX!+pOJ`t&")Ff/YI*'lB\\6NN[sLV0P'gU,_,ilJAhFP!(puFj2RWqD'pPDkK,/KEJ-HnQMM@]1X'`^]!!8PQCtX^%]p9#k4HGh25^h=*?A&-Ak-B5k2Cq;G2Q+Op"r;eb7F(S%<7#a#?69n?\*%:s]Kj0MP#>`#j>$I_enb0c"g)5uDZZ`a<!K30B>JUO%k;?%C5qBL$PCG;XgTnNr_\]1)!CL&U%%J^FZ.T#H/J(JdPD/*6ncSmA7p<r0Ze;[`4<9[rHo"l*:nt[i1s:"m@+9_-C=5?oMVeaK%AQ79W\b"Hk\r'^n$snX2Mn@D[N<o_0)G86`fn,Ue]%OJ)[N&'G_4bd0D_1HHZ?4rD7/S!-B7F9pCg"J;P\d^g_j(e*KYT_NUf>O1%9`dr$6hau;GX`1r]?>EOI]"(K?-af/E4N;211.=h)OmtDkDq:gRtPd(Wo@?)4^LOR%_cFaTNmQjPPo>T=Ca,O#O#TN4k.#+]T(Le%,'+S_X@rW(&n"VW?,YY0m^C+cjABO'qVo<4Rg20tegRom3]"jJT6rIYUD1</mS(c)LRo:3;664PU]osu;\l^$6(PacL4p41fNsY5%3E\dGP76ViI'dII[TI[T!SGY%C_Ie+',4a[h1X5c`!$fgU:^]fYnEE4NSKJp=ocR!>N7-*@4hch@KD:[7KmG)"RI.&Lis:G>EP)h%CJ=,G',#dfD^U\HH(HT0he-:bmn32#c':_eU$]K+qiDE[hG6"ChU!58J)#/5N0gYc1a^/6>(5*-)LWnK*)*J^ASD/j_Zdt@AUFK>%<NskOG/6Mf!Wf,+_#Xhm%73M'CR/Sq>L3#hA]`8,d<'>7QuBAL:,SV%6j93XdI3EDEeDkuh6e3),;bI"=LEd.+NI*g##aCt\V]d"%MMU`CEiF$t/(l8mnopunF>YeZ&6RZV-Se6M*u.8gg0V\H&F@.',jIfmQ(n>$1Jf1uA-eW'"09SAo!<KG3YpYD9I-VR].qSehmqk]%'94A:%=H9\?`T`e[%!7AMKDiM&A&)W1(3'Ci=he:PVnAgY3C$#dhaii?M!4?3gU0UkC#ZqUW`RN!o:Rk(hS&Sq],pch319!)R!:D%hl*ba,bu7m14WPlOKub_7#8u9MUcP#\D%IGlr*sCfdK(C0.nM&"$\5c'u"OpaXMM%Ir78&Nld[^K^8TFLjMfqq(uI[`OnJ8,0<96%RUg&!`2i2C1O?f*reQgL5ds8JLio<9O;R>?B47R0fSTbMdf^WgNT=Ji-U:;/,'!JlTG[G2CEJ%a<>4ONW):3e6UW70QN4t`$i[*N%3X7?bE`G#)Z]6ie<p2.[A_SJnjV;X(A4(%'L]YMHV)ZL>Vg1Uq*<0:'@JoPj8YWJBcZUL<.sc*d/eM#*[fE)HTpc[?;%qq\(eQl?%E('`GnK'siXohPlK(t'sU\U^fTd0LRJ9,MD/Gt:KQ-`&*MN6d+aA8^B@3^d+.+p#`&SqVp'Tct<omb07\QJ]cPn"BobeR6dJ974O%/QRqfan`8*[Tu`_F8Io\*O5RZ'Uq&3N`b8Z\^(;[&W!+TS?2=6UJ3r)gDcmK!R[#7c!^B(1DL_t^MDnFf(%f"UPEc+D[lOM)AV/+%+roS?,T-Db&GJ6h0(Hs:L_/=88*=j/aU;0K%OZHRlB6D6[<r&+Q``guNN7t\&\VU^$Y3Ak1i,;MrtN;a-ek=5@<2V2a%$d@X20B"%&C<$N/6EAg=FmDi4%ts]loA146h&na$)RkNeYLu"OO$>mre0;`P/V!_Nu(X&FCRi-qaA`E`?E_4r19>CF?3t,KRu93@M.T0J9=DU%;8B[M?q'?#%7C)F3lr(D@t64IU&m7I&a1'sNFm/gekd4l5Vom&MJk2nTX%\cLlK8kJtt-PNT3ltbPDG:cSgV6HLLNr_>(4kY4&c3%hUP?>,DFiP6]\(<HY4@Z^Z@p5E4<F1YdGRKl!:pTnA5)h;m.0u9+(p_5-Mk=H?tZ?kGV#XHaa^!jWHA[U9>2&3]j7l5,c2Wd<m0R%CiC=7!A!th5h4(eP,1Afl.DD4I=L^f-`8R-l81[b/pCNBmo0RpK"m2,6bLF#R+pL0XCmE#TV$juV"Hj=L&0'*$^8>pNsK-pmH`V_%OUh`%\8SarPjYf8jAp0&X90Yj(s/'KJ[ugR\r2m)5*:S+Qq`)b5DCH`374B5+SQu/Cchi0A=LPD@FtR:RR83&i&.2tA.G%q<4$tJ%ZP!TMF24/q7SKK/jSG`1=[e*jCl\k`+k/Vta=/CMga]f@TQh\=X]4b29QNcRH*@%:Q5a,cpAuiin@TBs[?\Z+Zmg%*'8T?UShLLG%1&u(p3lPU<9srSL0nFs[VroP1?VM<+p"?_:)Y%bD'WSo[/c`Qt_M9M%UHWbmhf"<eAVcV&Z$2B!hZ1m1"I(Z61+-n4A@b]EE_t,g%3.p4M.3Mdf.dKJf3'b+$fum;?eSS"b<l>&IZ88Q_BW2ZeMOknfaV^BrJ9?nRXF;q+(n0fe+2Y)^<(FOcGp1BKm[h'X';iVH1dT;o%FlVCVr;k2_WOW0bbg/4^,r>#Qd'@?&"W[p_dlp$p_?ds]UZ3=T]'JBPCdkjg)(ukPKklPRk&F#QMUdm,J=@8r]%>jm5SQ'sI5:#d%('??CqK5NicO!Eg$?([VN%9PO#@a=I0\+B5h=1(M$L)``eXo<*<_rdsk'3)^Q]57KOO]-eFLc8>P/qA1A9GeBg'S/V4!HiQN[6RG%WOqkq\i&a6-VC%cUun1`;ou&V)'m1r2THpL)'UHO9RI4,P,r.l)dQ03j#TU:23A3d:c0LYGnPk_6f=#17.RSdpI7Mb1VS@R(Z+V_%BFr6uqFhIls!rm4XeArEjpOFF@fh/ZpP,EP!p9aPGFQ[JG2VVJpa2dfLW.PllE\=#dk"ERJV&n$mQ[j^;ij=hFZB.HMmg#OcE44_%UlnFfKk*<<p<.S`io[$!;G/XChRYO43]iCTg-Bormb/>C6=F:Jg"pN`BMa!2<b5.<(\o4O51mK.9l,14UR8K^on55pdN<f^(>;ou%X3eR)EANNTW=2#,qF*4n%AR@6!o.cPT$C"tfNX*W:=%<7TfNXaneK&P3+Yf)]kfVWg^,-JS3FaJaqM%o<BtE4@eH=OZ/Jb\N[K"T%W@)OuAD4:"e)fSZ1`,_J%MO)[j:Bu)&$&huog9_cA4U7"FrS_7n.$imTW>^.*"$Z(/JK\&F?u"R6b]^r)>#1k$!a]M#T,=G"a6,U%6q:^Y_pgR+\2]@fSe1K:.lkKSK%A[jIgGj8K:1jlEQY3t)%ahU/s21m.1dG+V?m#S#q=F[^rFgUBJpN/:r`qTN$sN)C_gst"N\%<%$NiC#INQV*=+lr2\J47HNPSX00WQ1=\2I6$!_/G,`u$4."0#X"hP]u3Za9^T\)GI5^j'6HdpQnrQ@mFOe4g%%!qL/EXPa(OCU:&L%VTL%5ca"XpJX/,`K7A+TK2htnI`mX=-Z`*M:a;3oqM]K;(W-FWf"k_qk97&AB-*_ROQQe8Un;ddIootq!'!='[p(P#n;>NrNmTP)%2B]r:#0X`9Y5(aM7-cYg!Paa^J^9um>X2,;#V74%T,Q'?58,G9%G:p#P)-c(/Ob^s"Z"2=c8M<l@IfQ!'mE+B13d>a(_?2OFB.`$%1kL^RgT0cM;V*?$T#di0j9/V'1Hl>""e+0VJbTINlY:Vp-p'Ya_@kp$!<C')a>ifY)bS^kN7Q+r6/XEY/@mLmaJ6.457nsK(i+<8%!;u[=c_1"@pBUiE43W%hcM`&2o6DM_*^a6/QqcN*jcMq41"<WYR>((GF@^JG5O-5o;MR9(4`K&918Er)fJqN%(0&[0Cm^\M/%i8C%?oTR*ct@'&59\We0^e3J(--.O3VY0blbDS$D]"LZ9F>,/#6K(JR_[kMe`V?*Ubs9bSP%>t$[cL@]nIU9]:ZNB?Lj3qfJ-N-OLP0F%JT7sX'#I@O(02o(Xt&Kj17t,.rQ%7D(Y.g6I-/miA4J9'%>C;<n_K09pW?rhC\eK)6\qu<]'A\=B3uf`g3a>D,0VnK#GfG"O(p]:%%Rd"r8F&(aaEmCq_H'*OMga[mr5]-hc_3M+L*?2iH4H[d0R;dJZD4N=A>iI=#^cgsEG2E^"9@:tKV"et:CdMK77cD7U@?E9-(LJC%T8AIOiHUsd3AU]1$i8_hMqa:jnFIhp=jCGC7*B5;+lp<3HQ_\k\_)j99jroE`@d$n6As3fJbT;n0^:K6#fKQ8,p:i^)'`HN\7!?E%0P<Qd1%kk[FlG%NnknpZcugeT8A.0H7c[hm&RDcBnjuN+_=!QFr\,AtGp'd`2l_SObK/:E'`i9@C6Ln<%0J]'.qoQ']Fj?.p:eG\%kZ8ZjhOUAi0=s5ubYmlhPjj\"`#DiVAf0NmNX&U!dEmuG))WF\<FE1U1\D^R7nqqbL$?]j8^m:0,ZZ5iV^&CfP$K%-Fa.4J128++%l@J`sU@^#`+s=r2-66pgXCcu`>:ss9gGIfEVIjKgqtMY\a"]<OB03YZ&G3eH,=#2t"HD.7)c>95,+%`Rfih$4*B>7CmNer>"DfK0%Ss_>,qDD=K,ieqR-T0mQoO1&UM"TR"YJ%3sm0\!XXpSrjgka#M.\p;bE`*b:=?btR3@G/1W9\_7fg^`\msVa9.Y)k)fo/q6Pu71:%+E2S7KUQ_UK>h_IUGRV0jFRF.k6gNB'.WQToJXbenPh9qdqdVe<.$%-$MF=c"1K9?;"O58f9D7fedP<i.?h`H'#uPXV.M6m'"p\_%S2YlOXuKIF]S-#KRmg_*^1TR+C<lo)U$"#<I\0):?-ep#dTeiZo$,@?[n_XGn*=HSAHEnb;gXPKoZSK2Pl/i=n8,'d$m;:\\9(ci%6<C:W6P(TA.Q,gqN'.)_()$<[P>Iou<r23F:uMn[@+[S7`G;SbhdmgM[\K#qBjpFRS$tp^j;0IAg_0Dkn'+[6jI:B'Pbg)4LU"ZY%@-+qhc+4K2A"nB7%8kV<LK?UGi'J=Q\Ve5],Hl+*'m;c]p"g9N)#;9FYT.@@F#n5<MU7nlT9TaQ&[Gp/GcN)g4H'"gUZT&VK5t7L%XX$"\)g*s4D6\[RAWE.BZG]oR63d1V'HUL$8/u"G8)EI5R"CA&K2srkRGpuO-H]bN&23-6r@p$H$<`rZYY-KMd;tY^XH]+20)\Y!%`SU&q7ude5[qg\iR2ZFG^q1/gG8X9(j9O>\M(&2(Fcu'<++F9N2flo<^>"J:W\Ba^=]mA`VYFhG]]tjFg0rPL/';/>5Z0!Vnh((P%0GgX6KpS?8fZg_TrcKRaXB\Pn6ba7e\n?C,A%0>EM<s<dDP$>>?*a!p_5X'9-B7l-5VL7ZhGIFr?(+E^<6B@ESQ7Q&Ph1q^S<BKq%$/(#fI_7AC6gX!`?gmNO=]AAqY2"He>&fm*6<[al^4#2Y5jJ-q9SNmUXEqm"4o8mF7;6hu\E8/!OJPe6]A:[W=69q#q^?(D_14N(%icV0:ZF`BUaEH`K2AVgbRE:a.[31Q-\SXk5fJuUXKNlurWGI,YZmj:,=3][p(p+iI\l(SY1-7/s;\#h)5l2[%OPcjL(qL77Tsh6I%bCS]ses"FT/kH_aH`k$NY.+T,dsXK,L$Y)mc?qM,M8KY*PW?(<]%LW^HZ]=fQ"q%qAqPJ)cfj+2n52V<NPF4.r_4%.eoBCA5)_WK%+)ZG])H<MY33/Jm_/,Zi<(4!1-Kr'+*Mb[;-[/lN`eo-T>RW+LVm0lOFrWu'Mjl^R"I@@%\uuT$A%?Y#dR3G("7R'mm&p'T+G;cJ%mFV=cn4;i5'Lti9Rf>'klY2%94-F.9beUkQA=rL"TSjq`lhO9ect)TLYNN\;;"grrE'hJ`L#o)d.@rJ+6:GeDbR"df0rVAB\YJY^%grr[A3<L9;1g$[=,+1JjSoNpSb[EJc6>^uP$L1[`?.bDhPI)FM2dd@b?N\1\2L9VUe<S=S2NrRF#T4:dY$/#CG$+(I!s;.5SBoeC%mBH(VSZfO4]1_S\o,<+S6^IUAL+HoCG*%n&F[+4*AC-8/F'-%-B.@5<\a$Al,Lt>WD/_O5/O'adp,;,4qn-j!/NRW)6K_bQR%`m#%KC+3"qb8NU:gcj/^^(Rp6lBUF73lt5cjcqpWM^`K/A9hY6cGD:O=6/'XY>=DoQWbB#cMp]P8b9$(l_;)1gc&BDL[B_"aeBJ]4!(?%0l#m2@K1nSm.hdZ'h4>7^IA]gXB[Q>Qcp*$=+gS[DTpu+-ICD"Bg'dDAArc-,%BNh+$Ak).POQa%W7%RE2dn=qI&.&Ysuh)Af9(r%9JH6J,PR9Lj5t&+?O*&Q:-XBLK(r`-p<e`TBAN7P]OgLZ^CM)"+pE-JK#`EgU6`776gH<:0!&(riqg!L00[2Ma$G^/m`lp3W8<9U%JN7WnpcNPLo[_6fD]D/2B1;mSHT9Bpk99%6@p(JRGb`8)6a<ft+DD]>>FV7k&P^1\Z[?PaKu!UKMe=XD]b(6-cI9="a'l=Bc=Gh"%CJ66,qt3F7L`S@EF?Ta>[Vot0HLrArp^7*E@EU4$*Iago$&tIRR0/I[A!ko\PO[1i,#cqIBC#[n54d;1erNaM^d!GebiYo!8P;g1%c.$h8ppm`;n7'8YdeA,">qd?"4JMn;:g:,s$[=7q7XXbsj-e.t5sPdZ4BK3G]V<rGhS8USi;+nuT[.G,o4H>B\d;V#1RHsQ&;42$%<PK'WfWk_i@%CtW?*:KBL9;CEe2nFK&&]$4L6;\VnD_Z`Y7trp_Y%tt9o#,6!2c7)aWTeEg<44IFMQ4=#Sa1$+s'i\f.\ut!%K,r%:(FCqM4m;e%i?1n#TQB:(l6PuP7`&MkT`0;UmA]Vm2a`)$<*3#i">"QhDbCNFM"$t!6<V4'ojaK*R"NaRbVkbYg'!Q0YK$mG@cXB%U#;^MT-&5,Sh9:3>\2Js6Wd(.`O1)X5tF&lO3(Hgf/[*#1Xl]HB8&;4Wm(XGUWu?r%$M[H:_"W=&CojlCa!!>che]n7Q7kM=W!L7%-tae?#i2Zjn_Aou(k<J8:lQ/RbAiFIH`[lXU*B4C:>3uL(lB*E<K/$4a$3^GX3oV48*Cl&1]as8lJ`\!<,:'b*`2eJ,2L@?,24a4%?>W>:/FRcdb*nGEJqF&i.,<%_im)L@X"2X"m\!!^C,D?%#OStbQ%Fa%BX]AqJ1KdD/O8:+6r]marp2X=i=ZuU!12hZ3mE[sB@m`^%s1sl:@SCGH+)n$:S[G]XP<iA'cm?I.#_7XgQA8gO$%F</V)O&'%+2f*!(dg^/J0Ht;4c^gRoq>"KF/$b1t#t_@3<P62(3\TTU`)a%?PsU\R^[$Tg:c"5$&GQ.ZQb!\1sd<^4^^n:#u)?=1QoRfM^]10\H4Z_YR1g^pG;2&a9/$SQKP?j"JE:&2'Pih"UL7f-hNGD7I<RC%q]ADWh.E=!$6YX6"KB;gK34+mN4?]*9O`:5E%3#Eb7Fj_kY,n3a;i]jcY+X!D%'/#O+K((jUf.\.IMtJc<X9`rK_hGqBBL?g7^<)%#'m"3g_.;8-C58s'F5kDkQFEb_DlII.%0EnTPG66^I?;5!/P=D/ZpC%..Nd;M`@F^hkR\J'MG:1$^&ND9j\"o-7jsYfr\nqLXrFZ%@c\"rBL#NHp$e&b$`6J7RXfG>=s@`1eWUQdI@G.KpCS7<RZ],/X(=/U^1SW6Sbi=KR;[W(o-:eqa''!ArX5O20a"lL0l?66O0H_e%=eEO":GOHG>Ri8^4[^QV:F2Pm&Hgn6:hFPu7isurG%Im=%aJc`Y,&HsNMoo+,j'Qp-H5*,g'T9dbIc/dD+oU.)b0ujZP$hd\d.KD%CbB>X]chE6K[WgjT7X![76lQ_h3)[YO]5tL>_A;k-7qD:<%k+SnP$0(c0e,I,LjYOFr4W/PF'o\=JRP_p&<B[hNuZf)A?V"Qr-bK%Bg&*r0pUcuQbt#DP>X`7l-COf$CFnX^s?,r?OHqR&mt5:e,3:*P6i_g\ho[2j/-L<PUW2T&sMtqZ\D[S1AD<)`V]s`3<8ZRmA&Q#%'QLqah#o=]Dei91=nJV4(03p$7W1<-2Ma6le^27i'Qg!qWgYUM'mGK%+'3jEkDALNfujlEr[pq-L?(EcC6i**[$;rUl4mN#`sbp2%e=75p]MI*UAbm7(PGH5b2$!jpO##7_9SG+nVpt$&j/s30ojE&PQ90)O%KNo5T;B@UJY:A"K"N!/3c6E_b7#c4F5-ZEU;`6Q+`bUC%h,n5f</cJpPqVu#oU,NfP:5Jaqj'%c\*0\%KS,+%00b!G.Ps[G>o]T3^4GCnb<,,-.l96al;5XTVB(^R</s0+#>,N*aVW#BirIZ;%!#S52s&H'eQ.:ahfgYNs'?BbS,lT<F[W3f*c)l%,Yq/TS"Z$nJh2B-,0WgCd-7OD2!T^b'/sYIIlfGO\1/s^nfgC@.4b`=EpF8<`%\X5"Vl]5g`IeMsQr]Q[#^sXrU2U]?l&FFHNPg3<%g_[bfCBIHZ0@ZFi:$$2C!Md=J>]VB9`d/mW-U]3Dc(Hu3WK*WYnpHVE:q8UZ%pdt+*2'mI7c7?5B$>F:L,f0XB=X\Gq]o0#bO[JgEW.<//Of%/J_jTY\2MJ\tR?g0tXTGFiG6D2Hhg19Q`AUpIPft<\Yi(I6TP6UV%UG'/iUb]:s0>4)ObDN;2pW_>.l>!s0B[iGZC5<N4"qGg#C!IE-Y__g2=a?mOm=^jl,a[VX+ToN@cI<fs=^$m/]X]MV;gPAq;%7t0%Dj"T$GnA+qWOocs=?4@`^j>H$'r'u3d&gofmX-#a%*n2#H'4F3-TLl1(`D[k):CjKZ5I,@8rb7]F!2tbb0UFF'I-tPHH5'"pCPLb%6D=j'o*KJ&W:[.OVs#Gm-:K=M,FYg(RL[0^m._#1P6(D@254EGTd_n)BZKZ8bfr-tLs7H?,D5Io5H%\Cetj&ie].kQCMV7k/UG$I%b`MLWqs"gB#/X&>j*l=A4%9_'*FKsUN&`[8X7i4r,r9,M?Nh(X7rd#5*(Fo/alXJP.:93RKHEet>f@UrYEg4kE[nFB^dUh&=-TR>%WHqtg:'nDVnZe!@4qm9.YQOS667uYpH8SO<T%Ak<+%ZNVk37]&HlBhCIIs?#e!83c;]/G9HlKV'kT4FiGk,q<St:Un]C41Scq4Tl%-^$_6JnnN9%KlU,069<.Z.,hW^d]HW;G96"#h'kUi+fQP+'g.oMu"nr6Z*N^q.n_mrl,mbIF"N)bAZcMZkpR%:Po2@=:?ij^7ui@%+>bCnn)h-66Uh4*O%]d?9TY?27c)59j-9MY!#e6roYr5kSu`.2\rtjjY<c(1rCY50Tgq&<9E4J\6tN?SHPi.R-RD35F&Y-KVEZKV%LZ:heYtg+Ia6E8NTcMaR!^Q:*A>>Yeorm3h)'DUFJM'FNj(Wj`mVrVH'-f?!9PpqfPq(b5KPQmh\GIHZ6B#G:ZAa`9j7gK`7lf9S%`b?++<8-Ut<eFGTh`s8PkGiJqChZ>+ntJ(a!^=r_6.9)MiaHl!Lm1\+"fRoRJsu'0E#e%&C?ITM$+#CUN3HSJ9fQq5/S3ljo+=&_%4mNtEKU]FemfMS#ki6Fa^kYbKKm8,%rJ@@3,;``V#&d&V$nl#bUjIYmniSXic@I]U3"6DG3=M3;8U="SF^&iNa/*Q>_G:Ih@$/Up%O@H:/S42tME6Euj>'-m%'s7>/7,]gN-!-?iT0luOQdb%OG/&S;Zc%dp"lHP?c\GIEe?cd?=_t(;do'W)S8t_]Brd?/%s,;LpOf\Z%f!l\QNmpB%ONY=(lKhO>NOaM]NlrcE2*SKP?C&jH/)S-QgJ+GNNaIVUh5.P//,*kG@Ac\OopI'X%R52(CQ7duE2rpBZ:T<!iYpQY%^J^<QWtUjQ;0IN\ZUt1.Z**G6;]nZ5=%!7Vl=tFokDr3+MLsKt1WN0jLTGS!>QsLO9suHS?S>GX@BDZ'o[@/aQ6\<foCjl5c-S("%df;SjiOtaVfO1KAHX"VKUIO(jGo2.QGf[R;ju=OriqlT7T&f!:C&6ZDe\5!gZoO'ECGN:"8qY3ja=Wb@@Ll+Qgn^/HC`:hNg88R>%Hb[PJ&fNC-Foabi"iM\hQ=\YZJK^2Y#FLtCmm`&+\23+QRgb:f#9!KDI:./0BY)@K15T#85Vc7^6sgY4Xsh/./<M?;\If$oOB;Ql%=Y#6jW6q%]=nrR<i0,3Wkt08J6^XiXPrBjU\PORLfk);B]J2)4hQdV-7eng,l2On5Q^u<cj>c`;nf;c!!(h8Kj*m+[;K@"Oh&on-%L6)Lg!)j"+ej+02^O>7Yp>1'OX?iQ*n$uq6@`?=(h;#(m*4b*pY.scp%MuDnE!/1e7t]'u7Gr5L"Q(FjY/EZKK_6J93ru$#jpkg,%F/*IO?V(-G-n0a[C.%8TXh/kf%BDp<YQR=#5KC<"(iBW&N^-kc#GQi7O9B$GCAU2lpg5SpRUHt(KPXqJW?q%?!b$*ke9f8A#%QaC%eXDHAI#at_"BW1=3D<g9O(7L:@5Ut&^,:41FnYTiMd+T+qCq8,Yq$5#cS&]\Yb&>4[pC3@kZ;)i.lrQ;;D/lHDBe,"7Ji?5^2FP+%OugTNJ7ok2k<)8!k&tXnMq"3'8'gkqc&7A<'9*l.Xgu'[^dB=?TO:DCq_>ABhO'pPHH#ndL]:B_r'1+cV+3r<Ef`S-Q27cR1hYSL%Z-Vj\Xpm7m%[=ig.Lc)!.AF_;S<c;^gs;Ug4)nlneR$\]c[h7B,pC=?&+<sC-P0N'!iX9%b0;pm,DJoVJ:?f@V^/M_f0/X"bO#u)%XrO-I'd\PU`0[EA!D5r)2h$09j@`5n;M9?BIhF4T;BFQASW,PED\<\784B%u8Yof3:I%6$(:0R$RiE7OG?PJ/CnA,)a>]Vcm3c0-%]!',5W]6r:eVj!PFnsdt;/%YZ]*NGnB"m(52imU*U*^"PVEr0?3^9#H!C`NFEkEe\5[V`mP8RWh6Fkka<=ohl-IR>`O!r%[Ie`/f%;BOHSj3oX$S;0G:Ngc>&I8&RJYVs&::e3*2Nt16+i>DUhhFQ$1oP@"XI\PtD5j\1@nG_1I4&d#&lJlSYpgm#BQ*BRi*U%g\M^<B(%]?/j;6@8!QAP\)MQ:b6&4\W/s$Ls?X*n[W/eB^[K(Vq%Bo'$LJl0bW$\#J@UA!SCZbd&(O1C\nNg5D_&2h)'._\Ilsg;MPmA7G:G%lUZ7.5q("^j@<>Y<$o2kqp^i3QRg(Cl^auTD>^:*AjVq1I8u9<+Kea2OA`ncRVrj+S.Qug-\9A.1gd@t,:"s?4eJUNl+('#k^UCP%/q9Qh'E687eS]u5--C++#5"*YJZL5u0:%(;4iM5R_+rCf8:AnE(KKY?n5?Whk$6@t[C78KA?dgU`)YK:XsQBIR;'C?.TqlJ_d\'u%.ZZ&p^Z!jXWY@TbMcgNUJZ>f*<QJnSVighb,+/8n[t"2=\,-&q^0)VWZ8+=hb(&(iarn&7\l!<M;+dj3"6-8MQ3uGS")?Bi0iah%%2$GK#n)0cpGPPGK8e.U,B!\Im?1EOcLqBf&'P)k!Su+59dI)XECl6L=Gc2dW,:Gb7N_o<JBnpg.G]'khQ$5U8\"t44690VUZmK!3%_Dp;c1p1[=n;Ih@3GnUKRos`,KuaeSPKK$U1+GKu,u,ZGam23nK80-A<c)_U6o7sL4mc2nHgf]VWZ_$.@_PgoSj*+[!:BTah.'CG%)8.2(5dPD3Mq)4bDInAlG=dk4==jki7fI.S'c!*]f@Q:H_@&M8<*9XIZSM>3m5^p$<c+%S51*f;j_p+5.qj.jmq]\fg1"<qA;/E[%*c^$*9VM%8J\#.9Bot-`7VV)j]>ePfN"8Dl22^!QLSsAaki[<D:YgDum?k_s;Vs5rJS6KK&6O*JJaN<dDTIpOQs.$WS4Q8Uj4_2D%8C3sUiPX&/<&rFe88Ib=NUbHnYqUkU<6Z#?d@t]sp+Duu.gQumejhM'^cn3PP&EELZfh&Yg[0*eX>=Z)?6)05.XS^Kf'[cgaX?rV%]EqT5MU(76l7kBJKOqeNQ4[Tbiq(Df*TP.[/BrO3C+S]-=5Wl0HnG9eg^Rk[pqAi8d\l:*Y*O?g3O49=S=a$@SdI<N4@['b$9qS1%Qg=65dq)Y)/3JH`p3D)-Lsqpnp1ZsK>OHja8uHIfpo=^m\ilrh57r@h_6uZ]BL"MuX,_.fO%!>GM:gAH,o22S12'h]CEImN*!O?,%ff1Xd&TqO<#E!l&E.8#]8iFlLjH)@QOBfP*"Bp#0^DQtUQC%E9>qVS*\hq1i6)u<gUdU'Dnosm19K4AH;TpcV=QD.0I*AN,eU_Ju%-t.'`b3nZ-KiO1f,$F^ij1'$2U==RYY:h>@a,WsDcUbLK\+M;N^WMN$YY_rJHFuGNh8;Ph30tb8eWYmoLEtE%ll7u.r@3(:=%op8%ipG:qraJ37eFV@S>(t:K^U-K(mB9$+djf[p8ZKu&Z^/l*hcp.VP/J&YIHQrU[7&Mh4.!+T>k!3gq05XO7reWD8\/QgQ"QE*\Z31E%h/0aGW!?XS_D(*/qY7_^\9WIGF)E(dUW+.X"#t0ogG[MlI?sJ=Idba;jC6&!'jAK0j<3E48M!muVgub6I.G1N#R;j@D[R3uR9"*)%]20?scdE@ug5q?8Y=@D]I79O])4=qW/%H5pNATuXm5:D&9@gFF*jUHfA#4p9O]&1)^k<FsDtt;k,$J@:D,gLbo\k<*HTL^D7\g[!%@8!#,IJq%l'-%C#5D;4K`)Ha\K2?g9gF"G>`bLM@`[)T@c^GA9V#kWki`$Q`dg?1%9r8kHVDroS-_f,C]t_;B%h")p[@U#W]JddM%;aRnAT;C5CqT/?aC)tiT@J<>AIWKmc+3Y[p_q2PO*2M]=a;ijO1*Z18q.N*-=%_UeVrM:D*l6W%>!h^^<DFW_>`uDgjdIXN]PkL7%ap$`o=IL,YN4F0S;DQo2O66lE!s5kgF40)?]`bg:Vjs'oe`n$@a^Qr>0hrYHIqX&4lA2/i3,:k*H^ZSYa1%+:+X&Chj`BDN[AK'8%/g,%*6D!3XF9Fn1/G:Os4hJQ.<gGBA[OKr_f.[FEdBUE5Qh)pr/M6TjoE65Y)R(f8Q;D*7$ouNC#=Ul?RU)(XB3W4i`BHNJY1G%q%D0[('f_.k;c"q#-V\4Zj.&4+n+\,ML1>k(%A#?=@=rD?l+i+lANcYPks5-+cZkPDqrr:8k[jA4]c7M<n)@[?3[:%A9741c_5]8FX%I(e/.:4?oe5G6DeVn%F6DeZL_;:(@D+c;2@h\\9nAl):97Z\TArDm7eI[$k^WCi;E\Em6a*qG7,/R-1gjH<PlDkjX9m;FWeQ.pP1%[UC*(BLBuGIQr<1cKLVk^:6dVUb`,`Ymd?8$Ucu+mDGX")2<tC!M&uUC.(6JT2(&("s8-#:P%a@M#;XqWAReOaP3HT$3e&Lk0kes%.-Du!.\H#ZZ]SJ=X(#a"q@\K8(hC\_\<3e%B8[.AF1TU5;6"Xq%o%E)h!-*9Hi^D)?1<W#X!g^4N4Q!_C5%ZDb!oaU(kMDZl36S&%UL\lGE+8Tp,QuN#YOO79oU7]O6IqWG:;NpY]uZ5M-tAXoVG_j:DKs/&KpI(t*rQ[@1Qt[XV>*Ba&$MB/b>dh66qT$:Z\IHZRp)'u%"u.9EduX:_L*SR^%oOMmKD'!GGqg*?26fc-mAE[G3`HJ_Ri4ina$@U10![j9/<!TsKV<O)(Lu5Ta=!\&FQRfGHLN*,aA8VmlpbdF%Is1q<[F:+tUUr#\.M4H6%iN+D1`VZ?(5bjqU^l!,7k4Gf&qO9Wf!qb)X3;+$WDl$H%$*ku$aj?9Q,>,O-<$`O0nO4<V.bkmhILIN%\6k</__oBZ.:4+g=c5ALK-K6AdGJr/@M2QV<'mV4d$!CILoF`Gqj2o^gL(t*-?'a\BG-iW^%l\7<8*1)a-LW>dqOOsZj.O]R)d(.%Wpa5*B>#]_MU,3`(SY\6*Eo)0#,1?bWNF[hC8@k&@^RW1\TY<sW$WE=jbmY?ae7oS6.Jq0Xh:ZK*gBLPeUl@GK3!^BeFDU"?Y,P5%JBF2#JCp5;5#pOM:k?7;E'h:41.hT\)rg\P'$4n-$VD'Xf(TGehX3;6"u07BXq:2Q^0Dc$cUeDeE2*)Lbo$'[BR3?R]IcDnTEHmM%Ua),q",FPp_lmW'+8)<d"8hUmKr!pgQ(!f6L[s,WVjWh^4Fp1)I_ua)*BU"./t?K!1Ancea9&`GY)&Sq%kj]il>X*jj30<hF,*!G%@;EWthtV_%:n?%r6:h1UBGCcTP/f<oIF]ek,>qlUKmr$2#/6kn9$$A7Sjib;83'jgn5Z%!M,d&;'sTm_C-$oh)^rc%ksU026)b/P%4gG_RR@5X*)+o+8=<u:B-?_Ei:bKuX"pI,W'Wq=+FU+dJS!?r<PjBI9.@OH./(Mn<4TtPSN)aNj*dR&R!*UFZ9"-[UL&b!l7%Z2f%d6d5WnE.RaW@pN+E_`:ZHAh.;1(<N3b;m`LmP"++AL5e.=ZYVP'C(3fKY[)0L6Q,l(Hg-*CjKW\<e(<N'BjCW]r@mi2U_q4c9M/H%q<u&Q^hAFUFP9O]P>-o]+uY3qO6ih`]h>$tl7agbHl1_UPok97%XX0V#(lE$Jn:usQBc=\$Lpg4XV;Qjer)UG7'g[0pDJET+:h(:%PS9XKb8h]g:Gll&D-^4e354Q*7A0$#Fdu=63Y?mCFE)X2>Os+:&E^oAr<=EKK*M6Ae.PeBQEZKoYOK\KRDWMM^,nq[8`YDp!pr=?%3Q%k@Ha1[(/q"O)kltmJ_)coi!j&s9h/)+<gPUQJ8p>.t:MAM092`e>!@1e$]?@(4LqTd[?VufX'/^`IHj[^!3<H2gMN/&Y[EB-!%&s]M&/;jC%"R>q6^!&$;?a3T7fGS$5^4<,3*k>$_GiBL:l<`XSD2MqQ&snZg`&5jL4Ao6i%K:ropsEole(/k2)/r<&^2@s+eDn^`%K*<@gof4*pF/*P(<!m!Hfa:c5.Gb%Z1>M0PBXcL*?_Nc0>>1N/<p"AP1opH:YS09+@pTFS";K/JO@qF&#\;Yn34.as'%P]hE8lmf%m^9/6h%I\8g^"]4QLfNpA1NNS/=!T-0Sl`3"<-Ub4Xkt7/49Z4X+QrPG3r]"cl!cdlZJss%3kGtWioV1jAn5aWE`,r+^FKbAqqaW%X7MB0gpc,a7ookVP_1o=rO<HMPkNL\,g#AtA74,4Vh&n,lp3;B:h[k'n6%W3UCed<>(M^k\uNEq;4fOa40a!rm(3U]M5o&MV[>ma%N;oYC2i-Vr^0$V+5O#11I)!`6)W*KR1`EhcrP6)M]4flC'h7ss>5p9A'D1nNdoRJRe(Yh_V/3@4kSR/tZHN=$k3.r`)qR&.5*8EW%C+W"&e`&u<ZA$#egrXjeoa2Xc=845b65(8E@E0Y`d?.X:F+$H"(tP3pXefi4+V-Ug.N?=udmuqI('a>gR8=ZGOH,AR)KD!.U*135%E&Wcansbe:QG56-HmOt"PV&:req"n$XXBC8lRGY:ni&U.a=u4p4e9mFFZd@1N^;ag6mc2JBe`92)r703fg4"BLJQcST+MBL<R(ua%F7/n7e%OdU,Qu9k27QuGGC6S2F%n9aW9BGM0KP9=7aJ%\rc^fp<r4Sh!R0TC!J_MWqQ>U"aSPV7ijHMlUDHnQ&QeYC:8=GRd3=1H%[@]oL`Q:F#M0BNea-jqD56(t7ChGqkkY248@pL4KJJ1!*gRY:)H/32NETV*`0;::L)AErH,V\]-&<]+4pY.2MTnMTaiU#W%E]<3<%;X8+s.Z?4U'mUGN'Pl#a@>Z%OTJPY<XnZLY1ZVs:RIjEb;qqq_ZMFqJ+Uh<lC"Pn'=n([$,q/9r:pH#:lT:DR@p_XmRbc>!/QD@!%M3jkB']LdsfFQVoY\iM!5Ip"').#ou&JGhVAd2XrE#5IAjWLkh`.HNu@[P9J2`V"Y$/7V`H/OT](\I(1?Vm9\R]?>3<->#o6Vrg/%<-:-t\].a5*4.E8&8"^X)@SE]s2%d[]A565^><f0b7YpYJU:uS=K+C%I9Zd^#UU01,*O(^3-LuPI&9A+.5&t9M#p>0K&V)#Tia(p%/[`^AV3KMhFrr54G@bC&eVPgpV^mB.,2g0DbQE`aq2XsUQUS[!dZ*u/[N+2n(b!/Nb4dtJr7$%"(-ANJ1I]\!4*#1Ch,P*R#$ul_%7:S!LY/%K807IN/(eK+i6T.Q86d"XFOVitie$17*g5k>]Od'(5;YalcmIsuT-s_4'<_Gj'GrheTlTTu>5:d+cH>iN0g2LIHMB<m'%rVUiN*XIo"aq+e&Nfp00h&AdP$r2N9_XTSA@Ci79!#XdBi$WS#$RHIK(@m6]cKIiHmKR*_d/^2U$W?A-P5]@P?OtBJC"J&Uo>"UA%EWI3bC!n\DFE:F&'-U1&&hC\f5_B004T?<g\6n";r5e_&*BHb6TO0bG[;/3f'g+YAd4`57B59Ah8ZQ20jBRjiOF']o.uubimao@_%ZfeQp[-;b7REbHl3/qYk.kB+QZ:._HK@auBf^J.M;5'3nJ@?GF\[.D9#Fp2BpPl_2'S`[l8d3AeMHL3<ln_dGN]XE^"fnsf!*(aZ%ABe@X]qo,=P*YMR$:8q](h/kk2QRXMU)J+oqL1aQBbbVe@Hn8o[>H8-0^)u`FH``l9./l.'9W6\OGJ-?XM$h-:9hnr9jZ#+$IaDf%++O%T>D"W2\NbQ4gb\qYH`T,3-8Y=RrFm[0IM_*s2*r0D>bqnEr`sLg1\7cSmcUnsMn&!k[:'%fNp6d<OKr`0-b?sj-qC=$W&FL.%T8XNRVeinEqV>'ZTRhP=B,XLkP`_.DpLu+W:u%bSUfJgr6+$3X:p9=:!dYa^XAa+)l@*LYJL+hS)adkR.p]<+!Rg@&1"7OC3GUAt%M)t-h-$(bTkXF,a]!4n$LGc8!2;02BV4@b;#Z3Dbp7O_=n5QZYc,^H&<52>.[:7X0nu(5MokW,lJH[:&7PVgNoGUTk>,9-33^=>5%P`H4]j3F05\9OIO`JCco.X.Y_!"*'=A=!*?j>EI`]mG$Z%V10I2h-<WUti_p$A_8*n=\4PD0k3F)2W!h?PlmPmQS`jZrf[')#3l#%BjU=!/%/,l3EddfX7BT7CZTEr]\WZ@*`/)IBhM8nr4P;L>@a^DMhQqO%2<L_6O?JZQ!s&!Bp>uQr$o3>oNgHoqZb`;@U.Hu3WOqX%Io&4)BSs"6\K+=Ve*'e.Mq8FPmktUlcr%9dO`s'qhT\umL"Co#$Jb:3($`di<-+[.,nh\]6m4Hh%gp(Gi!6CPlFJg=75*R.K(dKf%H=s./d5Lrs#`<M--t_tHSJf'-*A]_,D@JFGR8J<[JQN2.CmMd^pM@Ms)aD"p;;.bC(QiL`Y`gmoCqh<2l/YfT\^n/&n</L?Ld3Y/%is0V`$C6ZhBE%K2T[NoOYGe:?[eb;FZ]Tg*a9*96L;I%O4.lN7XAr=nd-D\N8HHrpKbp'?S'Jq,At2&-Ided,1u.97Djo_4Bi%5l%&7H'46lUCg%mrdCp^De@#Ek.#&E.[Xq:7TcYF.5*2pUkX"QJU0rkttc8O.Ko?IIX``90hea7ZQi11M#FXS^dE2qL_/`Y"nj(&Z.U%jMn4iGT8;KKTnk[-V$@Y6Ef&qataqs7h=e"PeWm`($[u.i=4hHlZ7jHAsEM",tiQ>(;_n.n&,%O5d(-^;:jb/e\Lr.I@3WQ3Rf)A%PFH%Wlin[*!\<sX=Cu<-W&+&&&;=mT^DJH<[)`4peV%Lm,MlcO<7B!2,=oqq?G5@_WZsV[Ok\gQ!3'B`i\ub>`6ke<fhZ-*&daP4%WM/&>HocPT#N=_d_LR8DrH"`n=9oYS3V+DeiIU*#bkoObTE0;og;p`R3?4JsgJhf#J,QD>^Lkb$g+aG>1q/Xr;%]V[*g7,HH[H`r%4Sc*VRVGYg?0+_%-epQsk(s(6*%->`$I-Fq-;4N98,BhW+pDIh[#lR+)%e5]g>FrleQ+A^%WfnhqTp0fNU5/+jDk(T6UCqOp@g2Z%9?AH8*uWB;f0.;fo.qG*3Gq>^g.)ZMo`m87Gj1Lp_;Jc:g_>)2P2mp<a(H\pS+\B9%m,n2Zgrpi8r1piS^DG:3H@q%du=LOeMNnl%AAkW,+-R!goPd67KV*/ZmkmbX=dJ99FPYC$gSg\nCQ7HtA4d:oc5oiDcLRc2WV7NPeX$mOH3a-/!lPdk(i>RG\sl&_L4Nb6,/nNb%8P&IO6;-JsI??F9iB82@?%@"gMsGXgg-"ib:CMplftoa9H!j.m_e>*=VqVVlNSqCu2hGP*haB++V4;[jIIfokLY*(8&t#WiFC:`j%8<,W_Kfo[@36<WBD!p^T]d/TqC?pc5*Y9RV\PHXYX;,6H96nN'JUTS!VL5/(Og):-Q!hJe2QsmWm/>K^9eD+CA#Oa')G2^AFCcQW%A+G3LhVS`KF7?Y.BmMD%L?I-%GWfA5mdL)hWaMBLbF@us#5;(-+Il+d'5;:&>cWc[B>#Ph^?j!LkN/V`p)[%Rbh&lEK,0?qdpV9>%]X4;L%k$Fj5CG&*1a$-tJg)f7rNrI9m.Jl!SKKOr\Muhhl#$lKSG<:]'[tWq/o#AsZ9^,^Mf>$'%0^[r8*e#6;N_r(HX3#q@h!=r%or5_dJ%eCu7:Ra;r`DLaRN//./d.o@PH8Pi<0]5pIep4_O2<Lojp0@dR./=<9"C(5KD8a7qW3fnWZ6O^aI-d\&4:T=nuYt)G(07u%NapBPEH<"&HM0/Sju!/3m.eg<o]j=:fB'?$$XrL]Z,:UXNgqi\:iM)#i'*+NSOZg7k3>.25@pmsgRRc@5s,7=%5U]qKOXa2B^u&'%;4>;o]Gl%N.1PJ)m^(p8-PfYgO5Kq+nb&[!m?9TcR;4M'07BOZgR3Z3S1<s59qK4Eg<D3E9$J8=l*_@lNRTUk]^NlZQT+W'.jQKq%MnpNbV^qQ2H#Bu?noJE+?g>oA^fqYY<IWM7cs9'Q&-@_bIuDM+gO),Bb>l]22EbCa!c`R+7J[a\,F7gs<C%'#F\SdUY2[^q[44id%DbsZB]L1fi@IS[`$""&>647/JL%S;G8?#r3r'q,Tb-"_P9)"E7U)G/FmTU`T9YC2e1@GnP%:")tFi+G(eUQIQO+aiPT>uU.b26Q\%TX8r^PU8.*mfppbh@1]d:aaa+[cEiSZRS!%B+Nt#kKGjDiLaUW>bUn2\>N:]+N`inYt.AdMY[3jQA.@2R5c61[7V:t@>S6X%TEq@%34ir"kNbOn:NcLo:+sSG'JXqgl-H%4@AWL+&A!&J#F_AH;fls8\.^5t&K9b>p?aR%"1ldMQCTINoO"5fEZFb\6%Q[h4q5,9X;k>8%RP7].8mV^urI/O88N3hk_$=ium%$j^SS<'4"3Bcn2s-dr]%?!hL`<2,_4[p,6DbFToV$^-Fm%bC1eKf)N)3qn/1W25O0s.+n=KuM%YJ9tP04._aMl?k9WkJdojbP9Sf'ENp<j*;6kINuB)Db<0\)I-&T`Mb>CMg7-&2Na.JY3PLmg;$E>_tZS>1<N\M^<)t(FGE73i]hV%q[[amkZCHHd\DnFa0X/Bdj0nMi[M=K!aVZ0j<ikK0uTaO\F]M5DY)tqcIW=(1>4j\DSf(5)_FF$IfM"dMO;&J:@oLoY:./ZqZgsc%[g'A@1a+;1@Pk>q!T#6f0t7fPo5E6762m8pElMlWm)b./$_mOo6A0"\AA?k6TgO[N[9XLBdi_toN&'o\3BT2_f3RaD[<Cn,'?Z<3%8iA,&A,POiB<A/,diiDZpr0K2dIRNP.E9?Dm$6R/I/3Q?69fbn9S#R87!3IPSu[LR.`=HOfeAWAI;B#`WN]k#4216F8_'sUA)f[m%[De^&E4QHA8ZiXnS4-sPGon[ba>6$3I5`#5q.@,Se7=#^jUomBJ<95TiRDDFY"G(]<eBP<$kr[IG2:WO!Ig=(`*ASSOJ5jj%_3d)%^I\q14pok<;GrY\S+F(]?JEh`WE?.H@QTCPQND`TSB[VN7bUgD[N9A"=;OuWn<U[#XKEo$_H0V)=l"(i..aq\doA))4g9,'g@Y<"%8,#0T:Utu/:=s(;Gt:#cb0F_D01GKl%5Sba2-MHh*+9E3Z!O\hOA!r"$&_=L-i'%QDu'r7Z-HGIHY$rF1_,g"cbI\slSp-4\>UA_%q:a%@2'GY#^JPf=0SE+j(UaEuQfL*KmecT'7*77&7A;sWY,erP'*_HV]c3D^F?UY?amp[M:U2B:lqXlY7;.7@MeP/iMGLq.nD70`%0qfM^,WdEt"\?*cN8:_gW:m2[03lHoC>a&A:kcU@Kk7^U:)_o,ViTL"'G[dJl6^L1_pDoLK3]*m^7%.d?fTR9TjeRrJ`C+=Sau$O%VhkH[;8)hC*C*;]8*P;'9cg@0VpK3/C?#2M^CQ5fP$r('T#b@Jf[f:;Z9AMZF'tCnM6$hKTQ=Ts.&+9J!l.uEG/+?O;.Ca31[DFG%2JMGmO`,_:M"tr@41tX_i#_:@7;.u,aVa$DpCRND'3/t"dS(57NV<XXJ7BAo`N<:WOeu"!r:nP3CbgakF+d)"I8#_a#U;`-Dc_=V%(`0$-/GXNaUXppi=Qe-U)'-lig5JLW;C]Ar&#KQ@re0,omjI3@&?rDsMk[+c&&;YS0+MM$5I5U:(ld!13'rRiP)QY839^;Ziq'MQ%A<!D<S#PfE/>hEa;R(US%A!/lh6e5LahHPfjE/.6f@a/h>K;AuM%+K(JX^4(;d'T]ej?6+/AItJ).bp0P]RegI^\jF)VGRubu5%t%J`mPdpllbXp+c`R8).V>AUj\kEbcQbNk/`F,*o'5j%a9Q:m=ENo.\C36.n3Ig,BTNg?U\oI7>X/jq?$5+BQaB1;2t.if'KLBn]\J%1)jQ(<4WtLVC\5E;Q+=eW+s[H3$=Vt"NJP"oBI*9Bfi^b7JX89VgU?iD`(FHhc"s%GXTdtKe.W8(bS"ZN"`6,/;>o./rq10FGVBa%.!1rYpf`\NW#]B,fl9h<J+q"ArGKV.!XHLF.Dq114'D+"-7.gWNR1)ePTe'N^g_VM/Vd1W)4DW4W8J#B,1m"ei:fD7-]W^L'C6bL%'p&=i1n=Wulr\g#>koPHKr5Jlj!\]J9B;i?h<T4"D2g.0*d_")e:\1B9F4cl_n>rs&:-8$?%.Q?N=,4@phqX$Ts+)hJAH)a6e$!n%;IQPO9..LOlulMsi)^hq?,f4u3j)CgNX`4gpr.\gkqS_oDES3U!58k`G;b>4\`Dg5iCU`lDr8VWS.7t>^=$a^5)JHWIo^q&C;P>@%Ye3F@boD+1cN<Z!'bb,3SCh'MIH$@?Vq$"CND_R^](TY)lFcD;@:*@FD?Vsk;d:/]?[^[\IsW>nVkQP9Xf5c/Vs%LF*k#-Dh=Hq#%Y7*L)jjc74igTgF]'];1R"Q@uW]D`*pX02IakD&"BrY=%WO0Sc2/^(/7T1`$JKLe&'cuU(9ZB)dr5rTSJPb1sh<ea'U'UslVMASP%#-aZV!uo!W41<f%;RJ>9`oW/"Q-amBA+QoT:03l6g7i0D2^0=nLr*![\EGhCgt6m'b(7W56TXQ`)'_M*R=1h(kKQGFBqAaQP:;m3%rq6XsF0![r?]UR64/e[uAGfZ.;/``%5Xhg?ik:s53^RC>[*VVUhV0D[*)bmq<5pJ@&T=tR98<[H;=*g&Cp)U+q*IDPD]Wb[XJarj%%sN)oP`obGFs\B]e^J^iAYEW,^`>LA_4c1!og/s,FXZ[_M'utT#L6V(;hJm$kP,2/T\M+&%V069K0'Xe^Ahdq*:UPgE7#tU)B%A1%pOpZ;*-Ea=EJ1'U\pP_@=i1iObFc^;Bn,*W,*dl8?SbjiP9PRRkoLf;LP%LM9CQUpQ/MXg-^cF\5,K8rR5sT.^eP.>LEKpu#PHaa%UgVoR9l47XPLo[;X+I5mK-N"cZ`&*f;fT3)bk!i67?6K75?lK@klBk.Mht&LEO95cY'&V?jOl%J^:g!oFAl?AcH:1e.`Z&e`i2[V%P1#2Y+Wmj:^!&k;T^uWRe[AeJ"Up?S?5@dtr^.%&U'q,kU&RrVo'?>E%HsdAM&.Y)iCur^J.BM*OQTE;=IjaHGB<>%A*Un:>?%">%!"e3_)F.\JKEtcAf`MWq192Fpq#VQ#-C(ebej15AS4B$6)^])Wd\@Z-e7oMcj5T$;\&kn6UuB5I<]nJ7#U\pM&N%2WX5dp!GKUfj%?Hlb5^L4R$AdI0hcd_mgk!_M@28!U&>aIE+:X@73c/V):@.K"dqD^jY;gm4<DT*YTN;3h621Mu]JuZ&p-`_*/cT$f6#W>T(K*^$$%#_m0N#fQ4`7M#"M!rSglc9j"/jO264e>HE(%m[K.aW_5ak0A%=6qefsM5_A+3Nn3)5ZU8kjYh0l1efZLaR5q1MbEYC%i[gIbM/7[%1=9E_Vo.nQ)QBfPf8Lp!Ans:t[-YnH:I5cdRr6`Cj/:bKeA/,Hfk!K^("!eB;HW]Ug]@^'KjO;8M'8=@C#8ok9SJn+9jc$0jai$"%Tu"'E$#%e+g_B@sY^Q<An9f21[,^?YV!,8Lo.QSt/5Xh94MaKG"UIaeRKS8ZO?Kla)_m%]MP;$(&PA"7pGV8C+%GAAHZC.%Pb(Eg%Mr.cl*U8MOUDT9)L@^l3`osi=_#1`#oF<Zp/YJXmCJ4'bRke79V\=jpWo[:.C!I<F9sUnhp"=$!.7FF@5RPDqBLM=R\FR3En"dOk%i$qUONIkd8`8;d94Y4uBg'lNcl(k?,K7R4E/'ROCI^".8\A8W,P"'k?fJ]8[/9blL'm%%*$Mi/1L<96qn>6VVd!4hF)jpE"[t!+:%B2+047:5,=RQV9?LQ4gi(50L5`Pe5R,Y2sXLf6uB!.9\Ua?t]2*)Lu@BlSJY5\p8rGP/,T^,3B<oa&,EG-l:0Maj%G>7i<L8IH=F%(L&noN?eV'GI]C,cY/J47+(38&5ut("MFTj?J"*6pD,kR&5cOsU;c.7UMtrq1H)aLZe#$/Ac"PrGHKl:G?Z@<*`\8`U'K(8(fX$h%ApZ[D<i&!.i+R%Y)I7:gZNg^`>*]:nHJDX/+eMt/FrZK<#4iY"E\kpd&pu^k8CJ<ICc.BM%drW;YKh9TCVIKGa><SVnI0bMmHKCT%]mAaIi2sChT([Q+(>-kD^JSd,SC%iKUMqEjanT@EdkNG'1;+aG55f(Y!@cj;$H-cTn:?lT&qM5sUBr-/HF904PZSgVeDcJ!EfeV5%"Wc!qU#_3+b`Ya)eZZELju1b3VfM(26/6VDU3c]E+1ncr*_edXC+uDt>>YB0?i("EZc"AfLKr5_0'"0OX@UOLW,ZRuAKX^nippLh%U!%A6dKDN#]0Z>TLZ*M><l<^'=m0W!pfdfMT.NUKa]lH`Z"R>#`SXetPpr&lT<)?S'gi://@o,\<O/g5>';,?:F'PESPY-=gl-38%>-R)f^;2j"L*$KnF9q"&$PTAJS@,dsUYmq-WZ<W/+2)pU"I7.RJACl'3c:FEA3-RV@g>LXoPSo6OVa<Nh3lpO?=e-Tmm1@&=7P<B%p`u>b6\OZ<;@![.E+&#$hp_EGAZqoKntY!e0?%<NR6nFscXu!l&a5^3>Xr"H,KN]"F2Z4U!K-4lA)g$:F]2kbmR6/\F/*Gmb2$[D%P'RQ+>BP.*mEsenLL(_dKq7>&,d%3MPH,]$1@kBi=rGB^B`gBp`Ar4H)=lTog7di;'f#m_GF_ndW;-]Fpo':]j/7I>8;<ht,OgLQ%$S<BV/u2!#g)L8Jo[5NP;Mm:2[9Z[h/Jot+,D%N9AD046r<!pse-"SprpiYbQXQh"T+RS.-)j<lT[)0H+JPl]5b*][?m=nVH*h;6%:6mPB)>i@D3ZNP9WtAdfo%[oI`hCFmW(IH\+OL"/B2+h!1LWaH79Lh7gL\0ke_B7e`#qG_5gT>cROTHoZsAr;"5tYT!,7fV<QkW7%>X<3>N(:O'R9icrGC68&<`noojsK=e.(J:[H$.,PcI7;!I)MDmKYm2TI6N,^"S1@k&8\]c4t980IYpc#Wb%ptl$XnY-U,s46'LF8%Pc*dj"am\<28`/nKaaCiVVq)Qb.2qm)e%Ca'AdmYXY?G3WYEZfHU)uLRpuo#!6Ss[mG!@F>ba>98A"P5gA5A9:O]^CY-)f+(CRl&%/j"*-4Mcp?8H%.=M/P\7h7YYH\41DIE(s?#kOZRR2rcj)HaW1o^Yfj_W/6)hp"$\O]bu^i-&/)^0CU%H4\RY=X<f=^qTU>$g=)Fd%J?c*.q)CYm#aH6?Ufb0"2gV#%Upq$2:9We_iEI"d6=T/AK=g`7r%M<#>&4j3/:qa3pPZsBjt+BTA>s<Yja@&bR<#9gSTCZQ5bZJO%H)<,cO?pV-+"3Vo>;CI1>WC:aZN[&*^SO.I_mr@RLX6s:iTgsgQshD7fM_hk>igh"/jZ!Yk3)e;/&"rcTdrTCLcYJF$GLk-\1[ST%e0j\tg"<8DNXD*(c5R4hTOi0/;S;"QheZ'OH@DFQi,35]#Wbk'AX)F<:k2#b=#[*dW$UKN*e>nC;SjV3"(rb<)=tm;GJAVPIlQt,%RuQ>UQM/L1C*?HJZ=rtIEe`,;H&4n<98;+t'<G&&J'8a%^eL6F90OOR)ns_6le."tWI7ihfPW4[5fn*U:k1B[+QAE8IYc"&1@$e2%31pPa`Oh+V!2M"eLRP8QBi-Wk@(Fm-:=)Ip'7>s#=X2MBAoLLCHTc^l&-1Wc1\:Z47TabZa62S!3m0R'(MqGF6h)6=r\M:*JJ1A8%nGU:,38h0]oE67#$sYe$IcN=CE6R+>q^QGnR+""Z/L.#b':cZ2kq-@O5KrKKY>A6:KiW6T:PBQ9$nf=a(p561R/se]3?H(&5HlFi%(%-kpX<NEr*j3S6E8"?%[H=tcBhT%Y'*09']aQK%YTJ;V@4f60\<+@:QMh0FHF)Q\OdVMkWWht3cUWu)'H0IO\X*c=LC[%R8m[7N%jG)g(\1#'hD$/ujF$kZXB6bJ#6q$Yn`A@UPCLJW[omkK<)_C]6]</Da\CTSjVJNfu)!*:AnMtn,VK>>[03RL:I.VKl$]g"OoppVi%rP)Ma.W@3dh<@ZUQ99a=5\Kq#T=+o'c%i-NNm#U$j%T&ejL8P&C[A>n=*8&/;/$UF<S"c=OsT5b65u<+7NHT:@MGa^/h7bCDGUHl%"\_='a3#jBqPWH+@BtPB?Pu)X!;*^5CN?a(7jo_hB)u,N2t%'o4X1/6L$4b&M>MksrGtbHrt]$108JU,h$\;.9I:Vu$91d62mFE%%\0=;p3Ih,KBaG\4HuAID7WB,sapq&:Pb7f0#a=)JqMT%OeD*bQ*q[ZeBJi:4j&GX'Sll?mYQbLpWa>53.(W-@-GP*DdXu^cmh>5q%+2..gi$R`.aEeJ8EY(N5#3,jMK@?Jkl(O;?"KAq^r=dT+7)b1B=l>gJAj&Hk2#ru-L8d+!rDN1EqW;W7b6;Xm1e(-kn&t./@qmIu%]Y#$r5FW`qiR.^2DcOTq:jW76k4NW*H8m;uZad9f*2%$<<DSZ&Hb3>t!_alm2t'7N3!KgOFO\o@UCaLPYR,7`klf(H,EqcNfC"*A%\RRB1"\UE>>EeX<lYV'HCBY>)R'n""k>L!N&$S0/jK1)uhj8J`"RTF=JB^tS+'[5MAubl6F,b]q#YgJ=BEXq5_-a[P1M6%B5pk*-%/gDb=LjFueqpZFhi3B\OU4$0j4Sd/5+KP\!h51gFjWYG<gDPI@%5=*-e`484Z7Arp\5h&AVSfDdX^Q1gVXp#\*$ntJ.0G!_6WVUJ%[&U;c:7nf1[2bhA<I"0rXEhUHitJea)>j3i$2]<p>g@uMr18aLF%8DbaQE3]Pp8&qqC%O:]:GEddnq!S/i-+IJ9CY3*n+DJKQ$\o%dBPX`J7<Vm's(Oo<R0HnmUqbQX_$TiAkN[R?C*7H&chgbr0m`]8hqAa[,boF7>$--ZOOYf(N`e_.mY>e<UN3dg";Fjj&oduW^bN+%AYdgL#u3n\VG\5^G<2RT7W3hQ2d&$Ni[4c%14so3HJ7t8doi^`FVDL3[\*g//JB'%pLMsmBnm\^3IAL=Ad*pMX'@Dn,nu"eFdFGm%6faheVg?GISYjJhNmJr&*HTa*NHm;Qkj_FE&,`-mFEqqEIVX3Vbohg=92n4`6).^2fj]Uq32?XWbAX@cN]cHK^P\sSK!h^@2lW!]%O$^B'#X/:Fil>9HHm-kP7\f?lq]Ro=/'R]Jfg!5JI%ocDV3m9^7b#EMjcI`(;,u$IU.lP\T.ZA?k(G--ZFoiu62V%Wmh<5</(\:1%dA@'W%DAO4;L-b+AVa6-$(]<=$>ol22.GL\84bCg6gT$cbl/")MBtNcm$&C;1!1U_6RPkJOjlo8BX[<@aX2KeUtUdgIkYLJKq?;N%(n[V.Hj$a"TgX/ejIE:N#p,%':1-!#,d":PH"0i!@C;7F/ksgV&Y`_jBHYFPRZeOpSpLYr%gc[@*hkFJBE^]KDhMPeQJn9J$;30T%nVpG];b`4ePi2"1hcP[h0dU"Z=)h__*mT^8.&8MJ4icmL:DAD@)!5PXWjS'93&sEN8Z_[6Y0Q"a\WPA9e=O>p-.lD\NHejMQfF(@%3"cUV-j?P?i\@9Z1f>d`XP[BohP&!2.quNWS@HknG>;\?)b#hn8n?^@s%Ud.Z3_oE9\=It3%b0mZ:#nEdDOn\CsUHP3lEWpT+Npr%Q)@)sMkDfDbqIB!l8%2mVP?lalC0iDnhcX>h_Vs?,*bViV.1GJc)Y[X$9H)%W]^])8)gGY!)SnpeJ55VWD8'n"XI+%Ce_J7mi/Ra%J,r2%40^PEE53J/k$Q2'*\K=?`1B!uJ_i,(JuR7mbKo7mO)H\_9UT/bG6QZR9]::.W/rlYbKY:(i63e%MC"M#*5[EFpaCF0_i7o!%\&JfQ(,^6T.1r7chu<$EojVA'<IqHer66k1`N0$pD>5"1DqcIondfW_qR=LWYP5q4f5Hs[!NiDV-&U<U1APO4KdR:HoU&CCnXF+-%br3C3=3O%))hgb+pSoZOJ8/E%6+l@n<#EGapHZ:o#^j%dC5X36nCbY+oDR"+OVNJ7cG$/4rUjU)7OK.,Nu00Ds$b()]W*jNH#:tn%0O=')74[lGeYEgW32r/aR]?]!q=kU*q\5YJ3ss%(lM576F!CmGakVXFoC)GJad4!o"^KZ?pa*PB:l_$q&);9>d:%+nJZD+uqE*!>%HMoX:C&U[AEJ>LMJ&t_CL<*[6NI<DNWZ<\VrN+F!/qZEM(QU08o_2>e(t"<-]PNg%ElKS+^rm%n^k%lF@?u_Q1`3=dl6f=_jb.*e%>erpUDTPu7q,"EZUe"t<'mTD450O=6erCkrbL'7kccVX1D1h%@m&Xs_aEP<.TKZ'^Y<44<]g@b]Pn+?<?_dHX9,4)ZM,qtM1BN(e%ZueWe)UtM\*+YFIRRqOG9GH2d8+kUerJ::QlGfJ[pGtXk:o]!$+J,D,!b"n]9$S<]k:>[$E5-8lk]MMF@<XLqmiC"O?KnfN;e4]s%P,62Sg\=MInPT1[K*kaa8iD#iEU@rXch:d]2>qcUP\lnpIIqFRb$DScc4#UTWuU`aF_4HYFuEP*91R?1(2@is=o"RK<(!'b?/'q^%*Wg]XWq',NcePHsDC3CTA#9(W3P^Gsdqjm"md^K.gR3p43CL=Xp+?9f3o"DF2!`_YNPtt[_j\YQ@I:lSi#5$lW753X5q76InS`<5%8MFFr%9i]L]V:3TQrZF8q8`!I7E]%_pco[S(.EL^`l;cAPC7PF=>U7OCV!lt`FP./dLC,2%bjsXo.M7MKcU_VH*(<b#\8e'SFS*p%7%ac$YCB@0p)8Pg%,0$GDmZnb\;a9*T1NNM:,:kL<&nkr\hsWlFs*,1/:pu)d)P'ZV^9V_C"k8TVmJLV1IoE@pE/^Hb]0?^3jE3Y%-JK#Y&fWD(&H6brWJKks&Ud-]?EiJt0O&Qng)ds!.<dm%IPb6Nf/rg^$I/PJTaWlBlr39fo(A`uM^nQ,'2jAf13Q]-s-cbIGLgd#%+P]h8n`FabT58tsJ!][<,ASXSh4qrDf_hKZoh*a(lgNVebD==MaGet-c/lOWQlA#48!_)3b3.mYo\cS`#Y6n\34_0.[jpdEno$J.%J4jbd`nu2HAj#X2]/ejO>krHXmF7VkW0H2b,RP<9mc/I<*O(7Y72@bo8t?i\$&G$fNj,bC)_WMVid];:5!h6bBInY;<d2hHWZ5,#%j+B@p0?Xdjs2T0L.dNVpPVi^f<5KaUHa@25<*i*b7ql!-Vk@Z>-b04,<Pc6K8Jql;N\)bqd%NtWi'6=;QA_.Q?%KuA"0!1$md0kQ%/l/fK)*pQMePBmb6VZ;M[?r2JVR#au29DVt'2F%CG4'[Gs.F!tr+=K$_[&_>Ertu99CB]<DiGKFL(<.RX_4HiZ*<i6>P<K&n1H>%%g-.)MR[F/%RPlK^SHZg*^)D^/#aEcP:+7XT&_kS`pYioT1%+2'3BOCqWF:1p'-W+3G"4VqO)&j//.IPMKf'"mX3d9Ej^cU5T\dLg%E0Ig2KL3Y:K#&:G>mR-ZAj:.?7&o?[WPAI]?Xa,B1t<B)juQsl`bFVX,fD,\7V5@0oTUdQ4!sfEW8dOXPgaAHVa6&<Y?s"jQQZZp%Oi2Vb[T*-n:`DDp;X,cSY%'QXR=KRa>9\P1!K#d*cWUiK!Pup*c#ia]eAr#m])q$2Epe2@!$Oq&,^slJ6tZ:ON(Y[XDILnX+S]pN%j(/=erF&icg#:FH._[:7kK>+9T>+P]O!HMp$?jk?[uoXOCMuVWcmYP*A:p#*J#Yck5/>Lc\"6Q#_$bG'op5*amfS#qFldE%ET[@o%j<m+$37`QVNu%6&T)SA=-asf.RidZ-oU)q8J*MD^GsJL-`=E9->VpN'5RL)69T&8.>4f\[Dg5[O&M>(Ue736MJ=!<"dNa%a<F1hq%Lb$cTRenGR=OPQSXibdd!c!^^*5*U49!9s4)Y5J1:2J1n,oBO-.tuns`m6[rDqa!,7H<3%a.JfSBkJMML77!B%BX1.CeP!tEX%oT%4?^VX/Z%hP?;h_EgtQ^^Y8trnRH;0L4YSU%m1t'89Q\(_h?*G/il,nH_jf"gs(Pa;N5C#3U7D3,p\&L*eYW,X0]0mrLZKchb0+B2%Pq:nB/sO#Qm'N:aqO]?ULQOtZmg,O(^BCM!p6Kc8S<ChrRo3MB(ssagq/L%d\);_tK_ZL9#X:S=IC9nmp,NAR6]9DcZJu8$&3e(#%gSgUFeRXGf'Zce]K`d^d'9R<]34[(/77Kl,`RR59h/:+m$#qF>I(8]4<Q%p9UWU3Mn=StQ/96j>=_oP6>uiC,"S)Z&6$E*!Cl.7f%7$Q&4@\(t?KF(@MUqS6pGKN[Z`e5A41t082H/hO-US6SbdZ!b=:YWRtrT`hDrQjNPUK,sGm1o.,Vd5!p*O4=h7;(0'2Mj/1UO<Y=%kT"^dXd6uB[I^&,1P-[uiLOQqHQSIS0G%7F$k<R5PPrhJh*<QqR#U-d/3Z9C:0&BP'ZPAWf_#AE7I>)d00L*4DI:nKU@75$>V1\+%FfS[*fJLWo(n"F)MsM,K^tY7aif50;CPFLjHdG"@<9540)/N*Hq_s`m!3G.tJA2f=5FiZSH>Y>m%:pP3UG-"i3@ZbT`i'EGUZ4;=%"W()UqMdemWE#*mm[R,a?A+/*]%oRh2'12X@hB=56W1>)PN_$0N,:lhWR4?>(UWZLkZ7WKVa!F=Yga>E$k1&G;@NE6@S4Q*k$_^O%C&)]m#1KU21L>G!/OWVr!^`t2M5.`=#89[CED5g8=D9UaE21I39^:s]F43=;/?-`h!Z->qhgh-V-d=R4r9*Dl:ABW#*NHS*^Nt\b%jt9Yd5R*qB'9IRuI_%9DJGfb?A$5BqnFJ=i8`#Ou54eXb"Mmp[CF+dK@RtmtJko%!).)<AZWogg[Q+hBRmF-OBm[c<YM]%p4X$UI%ii*P&UapIC'fI<2*]jbJ%pK>+Lu0'Gpgr.8,ERM$V<tS`"MYT4<o'8HiguYI7/u55Kmr'qD/]"VgLJ_O.:SF.mEetg3oA0Sg?j>c%<)tH6Is+(,d@uO@9.9:X[+dHI\!O#t[GNRmY=<roD/hHrZ*$@q&P`L@+-a7@^BdG<Z][)8-tkJ;Z*N!9[f"Vdpq(`O'gS3rGP!>s%8nYW'W!i3[o*R$4+5,M5a3TQt6&X-sR_u>#'FoM6.j`3dE+4s)$Cn*,@qFjU/C;&*Y$oP"X$!*3CVT*rgSfP>*edBnRR1URlTPo:%JnS'/<>[fu,qTnC`i@"`(TiENp/[sF``&RE_$Jm\!YRtg4Zc%/9%^H/rF8)#RHQO[23'kA#??F8J:KfWp(4A0hQ?R;.QZB)VnGqK%52?kiRQ(s=*AO,;)/su02dRT-qP__h=TVCc!=bkj+fBLCbE-Kp8T[*T"p'_'HeqJ7:Z^5tPV5-/i'rn]=<7U/f9Yh1dAqMfHa!g#%flul,7)4AfeeoRR`=75#qRKf_Y18h$q"6(qJ&fO[r^3MdZDg`hBB8Aa&VUXVOt>!gCE'Dc#tS:9ZRHZh\O/\=02i0Y[4VRAAl/!(%D1qhg-.0DY141N0"pZr#n1Uob+S%gCmm6\+5>-QAJ@!Au3`epQW-.dF2#mDGh"9N_^fOt]F]&Un3Sf[\c@o.4>Rt0g*%KAYA6%]<%p%<&4/Y#[.=AUtB9=I&\COuGk1u5,*e!ua?if*I\Ph1*tT]AQj5>3jO]rHumKVEdFIrFMdN)Yn@dkl>G\Y>JI=("+O6b]'@o'B!\%"Oi055k@nh]+GS;8g$^mGMGSHj17nOnLPo[(Xe;l`%cXAGnbAD:=@@\M0*l\+!.G/pm^UgMp43sJ@rAP8p2@A;"9;=i9HHZ_mR"W%jC%W7,?WdSmk^8XPWkWq#P-(C]rs0./SUC9$7/''5>tA&ls6O"<\C&r2-D!5PNN!WntJZ?;b!rbnYYUg3?,5;btsr'+_YYUTC?X^%NEmD,6jnC4r3t$@&\m@Z#1I/E4ueL=GdT<R@HAoBCo/`4<4c-(:nbmTo3Y>-cdQ]$7W5;`_R-gr^N$EeG[#[g97B?maqOjG_B1b4%7Kmg<3kKWJBu^FROM%,P-G?9[WX:RYPV\^8\bfW[&RUI&`r!Go!0Qq?\gm9D$BBQakmst#&PB(+'+@B(GaOJ!WYB;c6@1RmgB%Xb%8$oI4L?.-kV$..Y;FkiEkW+6=Ff?p0^t@=^XHN\I'X=>EQsPB#M'fE15PYPDFP':qJ#c-!_k?8d>FRISCTco-@oMB8_n_n^?E4K`%[&W\:s".hWU_S4n$3j+pJ%CW0$&p)PN%tYBThd?+>7Be"+_g,g7LZ-QSsPe=^GQ,S6/j-\"#E6.AmF<3d=eBs6IV"3P\#:+q^o.]%c/H/O^G12B<"7^'>&2D:4BcXi_HR;uj%an==4,'ZNesBIC\+QHm=Mf$hU)i2N;G.+YasKu2oFqXBu@&5l,TPUM^,\,\nuffI4Q.7%gAjr%*:Sk,O6V"6<QDRM,HL06%=lLVou/LLa16r;:O?j&SOT[rcgqf(=u#$J6'&'0,>OaPg+QU&Si7#D-@Sfd6e%hISa1+P+A$f3%eu(fqn\pg9)1$;AE_[/q"`Et@>YYp)kJ[;NjpuLDM)HN?6f^lEL!J%J>rG[3W(#7eT,1B09R1QAUq"fF*pIr05nW)ba,L;i!2j?t%m2NW*/`ueF5R?,M/&QMLMsA>a=eH,bNg6E!Et^m-D9=\FK=ot%\dB4=kS=^h_u.[Q7bbN#pcm0\gA&W>qXft0oidsThBT[e&T:(f%PU]tbNinl%/r#"7R-\rHP-[qk_W\\jY!OBrqi42Z,0ng#ALUW>5?*'s1OPIq>rJWMG?SFd!_a34^J]!_P>2FI2S^tCeC,AI(A!FL%;FL5R^D@DJaOA?4;:YjEAUN/M4qU1s)DOPe%$7G)R9.e4o-hk*\Ct,E26VZ;iiH9Vp+2Sncf?R+>hc8fQMK@U,NVrNDIkfX/60;I%X=-1B@r,ZpZ+*a@R^)OAU7:GLWe/cT!V1]l?F()GpXW3mZNu^)J@BJcfF!ut+MY79A'tee6,Is.(:9`,l&.@-('lYZ6"XsHS7tCu%jdmfY<.s!l7s=qSRi6Ab78-WrbI[f,4=ku@62MNPr,jR,i`!aZN-9]2"qF.UlA.sZ0Xb0s%Z*Lb%QD]&I[5)qj\-6NOc+<TmRBdT%$j0qMDY@g(6<TF<?a5*&,a0e"P76j`:1,EFBcg>Z]K#Nu_BS9N]@f%V!?eR:O.-OH'GEHD"hhUYJE>E5`3@+T3Aj4bD-irX,/PKt%A2=@*W).XnT(5;],QtEp0N[k1a8tmo5)O'!R\dD)Q29<Pb4tZFgh1bFmlJ+@a-!66$B'H9Y?"u8[[#Bk!d'rCX8c^F_)_Upel%Gd%-qR!L/Y2lZqVt6=W22o62JE9@gJu3"e\`Li%F's!PS+?-)PPAiq!=rnkU[ea(e`hmV/14"_Di_AS-#?as(2Uc3<emZVOjd2UC8G&%%PJKLjW=\>&`*p^_^DqRCJ!M5a_r?pa9:^;##b8['B+iT9gJn/b:pcbcq.%cjBt6SV.._,pfp-?S(_fkgF0N+,!D<`[`7H_>L_g=%EVWntR^7O!L6PWd:Wl7kUM,u&,:8:CrDM!>EAj>$gG3+kCenPOQh>Q,)1`LeBu/fs=^6)_>X2ma+&PoKH0T0/.X`Sknc@ldS`9,+%j,4K/qSj]&]8&<dR38FnO'm"cIQ\PL^b'<PFtA+^XXcA/0#']MIR2-t;nBNe$kiTB(qV@DFjT#?DD$\(M\NuU(:9bsVXPA>6Dg:7%?&R)C#-Z]V1iubQoo5m=(*SW1Z[0m*Ce>"e]!_obn7h4ok;ka%IQU<\9(r$:.*M6eUGVe>pG1YcHl./f\UGc(n(2D0Z@MED5+YKN%X*e!4QTCC;bpDpl(b9J3c.#W$^t;ob$ed<J'PBJ*FA]q)jX7Hf$=LN8'cCJC<IA75Et3$e0iriHJi0%B6#08%_%eN0XigLi;(C\#%[Ce[`r(Y-A9B3%W6%NA6C'c#DZe!-(Q60tB$>lkQ3YUtS"f?K\1"U(5URAin"dV1BDe.Uq1A/!V/L6+N7gpJ25.aJM]IP0b>L_Tn%r8%LB8PY,LZ<!,s_&p];Lj>cJEY:=nj_>V2EEGgU6tFM!K^-B@1VMa^0*^WckoI"kcPb5D?M1K^Wak;Dfm]J?\'PQ1EdbS%gG"_n%WcpSK[:2-WTps\"lZ^<UmaYsb;,ui))f8PmKX5G+WF,$e)(lOi&k/kkE"IfQbpANM<F@Y/Y-(e<KP)O*#-"f\N%r_.RjFfU@'LFc%f\:u;-<FE+ZSK_4d"QcaC!g%]Y>(e`'^;h3+7u?n,1'f8_D][i`iF_pM=dJ]Kf)RSj7"W*J2IFG9`0/iqY!*J*cHa2QdU<LGrS:`%#VJC\liGlR(E)f?(G'MWg2qa=9a,=^TSr$EYp0if`K.?5MH^\gY!SArj<eGkA)V5$k)CW6$HrkKfWTJ.Bdms^:Pc__nFs?e9VGC;%O1Qlt4@L]Jo.?#hTm=oIn(4`/e]!+?;XBt@W\sT8RSiusEe`HJlH@Q*T,OO4l19*$`2N,//a1S1074s\n_EsqjQ!p2$<(_s@YdK*%KE4U<3@QqaSB:3-39(G^6W\E`9cuEmb+)3>_,YL*9VpG_40D1-VVh"EK:Ar@3m^n(C%EKGdY]R3h.2`8XP)c#<$eP->*StSr*4lB%._"jWH>6=>T&lN,eKdfm4N`k$k.rt0ER4uOK:h%-.O;$F*`9s+nG(22Hk]i0jG^ZojZZa%O/IRP8g^\*!ni@NC8%&_/3r\C/HQ@K%\>.-7r/D;9mVL&2\:%:<$,WL;PZ%#V3QcVC$AM_$)!n;gLHnG7T-ilPI6HtQ5sG!\NPZC(9[b^orMCpVi]R4Zm>2PB67?7L]hK\)%9[DX[@;%0Of/"YU<nq?kDiD1lSgM4sn>&[-O's4aOBBsXK!]eIQE2=1N\lq>FAQEp(Hb.\Eg(C7.LeAHX,$N'3]Bj2\$%S?=%!$%%lB9(p0#>cp%THeuS^$O:N6a-kg0@Fp(=Q@:VTC*&?`cO$!Y'N8;I"#f(#k'l`n+nSI;\OlOjh^A]GMDE_!-,91P\MO?>'Jf'-oP`%jY???4=7"qh[M)t099P&K\8&Ke!*D/O2$B(rN/e_c>Pp%gVq?d'Pb#FAT(.DT=F@5&C:(,7PR6DFNBX$\873PWG)*r&B,p`;Jjfn%Km5qBbFYM<;RUKbl[QGS@OEq]:aIWd>asnF.,*d`@CQi";o]W@LgdQ5FCn6i3^i#mnr&gQ.0::rY(Pes@BM=:9$!5+X_F5rj(T`e%[#)(aJ>Qi2X3Z3kpUL%798>39YC._N`-VH0&G2X9o5+EN*l2FAI0_L:;Y*(t)N-M%`50P'k4%&8SaO7j&"@45"DUa"03U!!T9Img%27D=o:!77u)Z)3A*p'b1[6N"0<_?JK*LQ)gKRs[Oj,rP>Wo9+tEk8?`i$r&'\e&oY]Cjr9#3Q)Rr'_>k(H[ACFpB*b=5AekBK[hK%-'"cOLj_`4e'E?,ohjnU7l5+^&m-+FLl2"2]cklqH;9T,*1$XpDLk1-!6fZlbu.u#m2?=t>JdkSkl1AN0IAs+YR-Ng1LU)%/+B=(%l5+.4W>H[f%%EuIY&1qhf-//A5*ZTCRVGF?Wr]f"&5G*_&4M?t?6BS;qXLrHZXd(UA'0t2^-!4@X)h-ji$J,"%p;s'>WbS'`)Gl6%>*Qo?d1>F[Pa^\cA-p`GU0>=l8]E@&BR3'0<&_/MMY.`R?WD`FCJ7ePB%J?craeY.KD[fHS)-6]-+E)si$'6MM_G"2p9Ukb/ca)%%[m$u)3ciB5^TR6/-(`EXo(Y_rY9(uL'O(=%*A'rXLqh<,7&j\l-rF6S[58U6<;9=2Vi^YIet>MXD*^5Kf'6T+eRt3+/rN=rnlj_B%>G:u<9CoJ!PnqNHZ@nf6>Akr7#%%APfGc^H4=Ui:qjqGdTsf=hLs\e&`V3dedZa<f?5,G<akuCZCmRNO%'J\"=Y49l%LNj-REZ,*%el%F'.GDFr*'Gt"6hU/@YI`%KmcURh'aGY.KTIEbo#:6$>85W%%><eu)N'A$CfYjY6pWT*KppIKeDq56ZQLLRJc,o,rLc"Al8\g^%SRb!O\VBO9%"`.*KBZP"I-#c-!80Z%+Y]!_o,;.(^8sjHC(^SR6>(mn"dMQ>5I?*#nt5K:(T6BUHE)PtVhnLAkMpKtrA'V$Zq*Mj%@Td;<R`/ok"^HR"9HP1CfY"l:p?SO6Fn&n9fCN^L`6+(437F;R6k).\e'd+=CMp_g#D6.8=BV3_6?MNt([F3^r^ldN)uO`Ch21-]%?^OH,BFRmm"*7dUq.hn1E5_(AmHWU92"Q!aa!?9UlYh23rS=oWQ>gHG9o5OJkr6QWE3$nHSNj#oHo6(BPbZ,g(h$)P$a8S\X*BrQ%:mRl9.i&-tB$`?0"Orj[KkU5l8-U)-2TjC[Cd[PnCnf-CJ0CfpXDXrNX$b:8N4dP7"Tb<#B#k:8HVt!\F&rc9L@+TK716:_V@&l)%]E*]qYe)p:N=;d)D+i\IO^o->%0rAj10^,VJ,M?Fh<j##'<f)7l_od\^-q,ME:g(`J!]e_g1.-*h$OZK=JOfQa"9<KA5UYG3hD7$%#)&&I`iu-V^Ysu9`LA:p9bSJf!:#;,n"K&,26)eCA0Xe(^M2Mdj/5c%R92h*a.sLnr/CORWj-UErO4Ym"<R:V[Lc)/!dT-$_^*,:%%]@2a/47$m60jMZ:^F/99JVET7XpWB<5-)d&,LPcYQTGMP71en\aq5)oj+!+G(#Y6Fs-,;Y%l@_`#=m">j0?Z5*D)!h:1bk"h]aO%%T=@q[k\6_W0ON4f9Surek9_8*B-kV^,D/R:&mgamO$E%]\uf)aFn$UhN%$3&c9XoMq"0M/M,)77R,'f_H?flNelY;$N&gDF4ImS%9&UBi=/f+R)[KWPF<n4?-Zj9RfZBLu1fP/7Q\%g6(^hrXHW;MW)aRpU%fr3'%#E&@i$\7cFi_6d\qk3KE1PsZ1-;'+%Y<]8-fAp`%?^"7m;loe]N^H%7It+9L!(RmkHq@E/E-pF8:F,#eNPQ`8<e\.Ybu%PuPtGqY4+1CgM"rO79biZ/_NTE(AeU$I!QMoO:pPB9e<'Hr%_'Q8KT\Tl&c0Dj>5h6QAZ[4Pr8t=Q.Z]n:JToPXLI)bI1Y:[5OGVXeXB=(O0WuS7l]F`4S?bg1gIs6J$oZ_Rk<J[o,j&@Vo.:B.2%&[c6Jc$cK/$0JARH3+[1e8@11UP2F(%(8mY6E95fg:l3CQ+H'Ba`"2YMFh<+onj0J&i^eQDlk4-D*GL&WI[3:f\fa=hYknMre$bi%R:SRe;84fYs/jb;LgDdV9hdrJ%.`3hl+4V+Z4=(`_HN!ToOBI(*PO8X)\R2lKl!2C\%86%2KW%Y.AFXT[M;LH?scV(>60Z6dh=WE%@42+CqInP)Io@:MLRtoha*32`HG/2iWV4YVYK$miG^\O^P0GcQf#qlt]AX12m\HZ#N)"&@FPu&km\C1O\DI1R$WUUK4e=a/=u/`H%p=DB_@X$t*+R#Q.C%\s,'3t%HSLqo<c(FgCO[:#Eh_0QYqs3JgeIMW!nfVno^L!jX3-@/_VppYoDjI+bK!/o,8WakZ[h>T*,uhAb%T:S`8jnisqL@GZm@1\qt`3_jJ=oPThWg.s/U3V&QaQS&uo6jFcetV3Z1rP9,&lu1@;(Mo"&ghT@;pdG]PA8=AkXk9]f6meXr>9KX%X3Q`sPtrSlX4UO&UT^@>[*cG;Dd-.Ecin\mDUa1I(Qi_4E@#M&&H=Npr0qEO_UjL>8V$d;Pt#WZQ&S>H:943$0.$ET/C5UDi4_%X%^TFR8r!(;I/u&#;Ig\UKWqZ@rWj)$aP5XkOh$]AAIkq[*VA8+HNVHM+7c(_h[BjDGCZV.fUP'%S#o^b?fP"F_PaXtSom4#6lk!_k%efoi.@&DaUS1,;8'PWglX!"gOdro"6ct>h#-9-KTKN"OpXlPi0gT)5-0sbR1HjI96TUp@?0kOWfDo+LYLK/9b^sk%TgK'>ET?hGQ%G>oH?hLMj-fjS";6D3Ik&5H+n*%cm&EH5,Kfn-79gVe&b7JZ1R;"P5iHNE<Z2Q61CKhc9N(n*=ZQ5gLOdQi*a%T&ccQ:RR:p[I$b%KF9`n9T;EYeY5Btdp6%^/eR.!4t"lue[8P^d=K),BA<7Q;>cma:\19Gp`A$PC[9]WLXD5Y3\*VINmETes$5*I#=6mYS`;I/Io]0@%i>JZp%CQ$DdY2,#"4M?$p,Y`4QMF8jf]SL!eca?cpN>a5TVjn4lDDY_@&5p`bnaY/9O5hg2Mkl<JPL,?(SbEmK&eX61b.tuX65.i%?*pghn#VC;(fS(M6,dTl;>D2V+[+n1nCkPU#m,CRpbpel'OMKe=h1p%V7R"dXhpbDF&0MdVfZV@fYOJ/0o\YVl+I)iBo)1mo+H&=%dMb(=m,<PlP+.e]IElPDk'F4joBTh^</mJl(c6;OinBiC'^G;C^,0-V&\kc&SMXAR6<%_Sq!H+]iATu2fY4_`M*S;Ck>SKt>0hHN%<csK`O#KpD0&J,Yoo2b_Amb;+U.sP@]K$09&pbH7L3Cl63qBO.OPmV2#:UHB,_+3pUJDg\&4@Gs,MMt((AdS@Y%*pWo($8tK=g9:%fT;dlC@?UQG`?_is5BS%!8[T[;]19rR#oI@H`m-+4/P#eCZn;B3V3H:%7>D"oj'e3j&=[$@>7:UYbVG61%C`InQmQkT:X?UD&'6-%.,q3OocpYT\mmNcTc)Kc<_QDD^pH2a.d??TG>qb,.i^;-F!H=bFr7*5QM4"fD#\+:5g"fhoXUIH?"=5k*7*A"*_^h0-;EN=;ah41%]2/bcE7*:1k^50$#BB=Gdnj7u-V798BU9XqBj*%4CJu91NJ8O!'anha*FXH;B5%)9*=>CMn\s8#NB\Ac]N.kab;A!/TZ3(>FO(Ol%s8<lsoW6F4i@B>e![g/OO26MiIjrA5do?><pG>*Xl@MB=B`ZQm&WXJTg#(<T.Q+>ob7:deRB3>MDdN0a97.0+hpUF%FY1.kL1<M'%AfY`JgOZ!"!e$o'>h,rqd1!9rb2IJK'h(Bq#+P7'SY./)cen0b^\doss6]jbp@,bhJCkL_0T]+#'[[4Q+X-ZY`>QSLm7:K!*mU;k%`$j^o9N.l!@0)qcrGFCBm2h\UiTRuK,aLH=P_[pF=2K'9K194Kf$4\\@c/UKPh?pgF&,X&:G%K$ld^s>*2VqAI-G`g3<rL6&/DeM%7ZMD^jh1FKU$tkf[\GLq%>-=F=84r/"cWb_LP%=6JO*W!nY^!VU4gbO];=;D?dL0=J%(n%/ZO5+(KFRcZQ`YpE!>nFp"@^&KgN-!%e0B*76fqkNi3#6n]p*loH=l6:abDr1puUf1YWaQcfuB!9X86MV+?+=;%?90;ncCNA)]f3^:X(fB%W9Y[CeKCgL_9A98i=<^O8nYj%s3&1Wa$9OGci<d,J,>l<rSRY,p]'ksqRcc#eBRU.qu$?[s7lWla1qYts83trs6dZ$fDkF5k?i`;huEBls'<D<qsXRJf.[0qfDc6]%&fd/sG?+e@Duej&1h^is%Y%^0<TFMLckj.fa0uT&#]bX>d-(Bb6tqggTY\9j>#ZC[7A&CgDZh/@gYdP-ai1$Xb[l%Y>]u<H$1<mR%]U0H>:5**2G.,T^jp\3+mWb.N(@@!s6AfuN(^ORmMWTq7mOR6*D<rifV?H^&qTdSTK7$5'R:K,o\MQ49',3FT[<QPtjB^K9H,.Xg%Y,g/pkFi?nRq8(%I8jTupT?8Ui:cm6T.QK;i*l91bU0or9Kfo,[aZKtapW;pFl6pq<Vkn`VWgCN)1WCp;6iss?V=i:f8P.M"$'oC%3;:80R/<?^B'QTqZZ9tGObdAe,TV-Y9S?)nSb9pe'B[.C.W!Yu!s-c2"eF'e->0:"Q0qCsGI[]-,OGV#-nYtH:^^l2oM@!8p>Q,5%X37^\^N'qI<noYg/ds1?A"+891fFOc$j$_a*DL9N<sdt:Y]QO1=3sp(ld<X;a[Fi>F\r5InZ8oCD$_-E7o)[/AZ_6,[,.o%Eio'Q%'_5$3Qb7!kC.Lm=VT>f1">i.*)ajt(<@*7pCUkD8m)b7S!.`1(@$l+=mM^Zg,>2ugcQr0]RRgf(+q#mMY`rsBTa3BP?r_q1&e<I^%rfbLMLh=m&@JC[*5Q59\X9`[E#Mk+/YpsB6L=&mN:%SIQNtP:[+PVF*j9=;&*1?&h]Y]Wn;S-\R]UYk9\>ta7433CClFN=EfYcTW%&s_&hX,$;L%kN)Yr[QA,'_BhGBC6?Nn.p%B\<0dZ!KXN%hhV:0.k)AepkpJ'WX#1jbVprN\P[!m6R-FM"TW9+P5^h`s85HVT*>W3%I_9D-0LbXRg[1^$`,l^se^Zh/I@pS8OE#M<W`Cep/I8MZb8<a6-64R,l"au%oubl&mI1RaPN&XO?'A"nU@":\NpmqV<Q>M#`&hG)%Qk('qi1)R5+JYG(4GV*qLI-k]filPk9!BaT9D/o1P6Gc-Q#2K0RnJ(2?6#'(AMh"nYp-liJ\fF0,qu5M;sOIG?A_$gOkf*UVo7J-%)gFC;J,T'OJ,NCqhgN$Jr8Q^0akgl)6I>S!Wir3,)>q_^5E=]=-gIQQYnj/r3Z7tVX!eIR[7CUCS,.<tA#k@9VSVY>3dgIk@g)JJ%RXMM%$8,JKlDW`>3KacF(KVKKPqLOK1&Zi@9)92,O'kaNLX8aUntauO&:6`E%X=d%/@s]S1KP1XkW7(F;Y_jdG?D$0ka"]19ihp:%]pS),F>Kp;&`QY(%T1`c3Z>6+hkK?hWk:1B1';r4$k;ZB-sq@Hobioe"3.Q>^eFRD5;6*5O]?HIf1Q;k=tc.&!s:Q,!A=N8-Bh2C%_Ig0"dr"Ms@55o!M\\nG6Ue'6RpA179JBZ[h8H*UUljoZZV1SaK&Ys".Sqa>f^GU'?QK/T5\^`7`Ec$fIPJJnYsmX8]!%baA\TL'%Ae952Bta9\k5gDU&"BQ[cV:iCn\,@,((*?C[J>H%h-i>-/SKY38g%?WQr+ru=b4/!YUWFo'@p&E+V6Y1.5_^`e9Ug"D"VtX+[_Ti%0#"$,I3A)&6J/)1EB)8?%f*/&4dUmud(qS#jAFX>`\udY?SOSe?.hnNFo`ZnV8gbO[PV(#p-DX9=FS9FN*d[jZqqI5r6%7P/Qe[2%1Zkk@;'i0^`t$SMJ2!t^im9i+8<h34EH3JMI=eR`?;_W_@/k&+k4GK2<Rls?NuOsa"G6=>&8_Tg*q1jd7L^Au6-7&E:4*1uX]99r%+Qa-m:_Lj\Q5GI%o"te<1:<Y0UcR,VbSc;K5tCg9AsU80!Lss[3C6Y0rgB\:Pg"Gjh]MN"hlp4uUT(3fX1N&tbYm$u4AKE(rF&cO%ctbNac-;I/:TUFcF6@sXl*Dmp:l?2<IUVP]Zr\`0h#U-/BK<)U8^Te#Pm4USZF"IAkF\a]U:j4GAV[i43Pp5N.-T1b$B(u,2G8B5%iQ1-59k$CO/@mWNl!hgsQ>)iX2!NPDm@M&C'g-_^91nu5<q;<S4;(B4X0UmH-QUL3$-Eb,>ue-,n.c]Q(t#Y>kQk6h630)mfM'(]%i'(;s@==WiEBodaKh@;$lVC;Ja?`NKB`H?)B6[?`HE:4_()79@Xq'#]]<9pB=cgSK!l^;$>k?`r0XsZN82RBd\Cr?:=*\;rQWL_L%>a3r9mq1;S)dQI]2GUVBWb.O`hW5oq+?c_+DJ<!aU3-D6>,GK9:gpk7ZD2^<g<mgb-]0@SPb:4D7br7f593s$Yfk,)/?!62]3?6.%)RUn6"="L\:Xs2<>7@d_Oo@6H<!]RJ[r*:cI[Mno5JNr3BUT[sfrDj@RUW9"7TlU'jsLP\KVG\G6en^-@Mb>!E&Gb0FJ75IN^9Sl%O_D&j^d:^>'\0R4WX"6"_i^$l_+_`Z7C1IU!\=W"0".g+p'3]PD5f`<90q8_4OO@ioiDqj%B@MS3)qLf>+>089p!P,5,\[P<(1;Q%>7)G`Dfh=)2*ntGjf;JsTLTW!,O\/7--4>sRsht,/#G")e5</cJ3f+<And%#.X"[=kgR>^=-$-'5@MtpIo<>CK)GfW;U$O>2IpPa%ADUMu:3>)e?^c\9d\<hg5:WSBY=(jS<NIXB246<0iOagR.#!.0iA5@'oE0^(7ts<(Ri$PZ>I8-WR\,NrjQiiL<!u@A7Kfmcek:fZ%8/+V^bL4Y8E+/@AW`k>/q%ht2Q.-=+mhXhfqnKkj[%I!fJ:F$rLI;q#SE0W%=?<V5@b?Dg+He?/Ao0N-'/h`MfrA>Wbt^?1aOV*7%M4@D=Y5aq^@,%>3W>a3jrJTek//rUpQ$T/GG?e*,e77^?D$XLkG'+qt*=Ftq<McT)EQld`eV#^ZLsW`PPH,bVre_IW^M^hWq8?`@%i&oUZb^E/\[+W/4d`LXk\\t;5%Z5G#A:oH5M*@WpUCM:<eM^]/q$2=2!2)9AM<bZ+,Vb$jqfd_9)Jr-(h]5W8aQ<R/UrM#1\F>%W%\3tI6;^hSi9*=u)IO-uahpY`6VYt;eHo>i?D&N'->93j1:"+KW,C+&[Es",*q@+rQS$!7rn`NdC4oj\[0sRa,A]K3;,fd%d`?_K?%@,t$Yeu,+%Ad+4>T2Cg;hs><D$-c]cj]+F/Ynab'U8%O;1V[C&>b:Ua0d@YU4[BIQJ*XH+3Eo(L;:gim$WR!J&DSj]d4E9,K7_T_%;mJ9;K;lP"U<n-5&-d[FVR4lbM@hY1PL?hdH>t=^^#Ee\@;K_@/'9c&("F:6H4$_0V](;]FXC>ZB@jnHQ5#Q`Q[h!'7cGP;e;?OL%J%VMD]'Lp?*2kc1mXe:[JrJb=&*Ook'osBM`i11URlY$!HJNAo!S,0QcDC,]fViBBjm6RdaF^pPCfI5oH@?<k(FQRBOq\h81P*l=%o5[4?dB>qhnF/5E<rR=EltPaJ(EFc^?`E$H.Bu&6<%U^0AO:c24X&8.5JUCoSIK*-QOTBI9h@WXI*7-V9S8YW8S"(:oE>hd+KIW<%o%Xi@n)$@bl_=gJ1Dh1%LRJ;t_.bUUl1^ao1^r#$gBs29,6SNtr_\?T@QK`h^'+jS]#U$*5^u1ib4Jk%Rh$<eA-"r*Bd^m&1.@39%f*HCndI>t-=l45hc)OdClG#HZ$=s&ZW+83P%<`BRj#m*egqRSKI^"9ZS<duVoa`SqJsP+r>C7,n*+sM1EKV*gXk;Bs_a,W#gYh>I%ch93ND78r_7T@p.g>.0ObGO0p$;Rb[k%OGe"5@M8:,38AlbLoUO!'UfkQ8=6g'P3Kbtr@tYNS].D0dF?itg5O48&o8Y.]Vh'*[c>%>#9"W1rmn6XmV0f.'M;H$/YB)k$H%t?MloKIdP-:CBSMCQ1Duo7\gLBj,1!/WC+C(h)>QY?W%s2%cI/YJ5DPA`#9%s%'Bo+$P.6W%YKlk:a8]b1^Q3ldcGn9s7H(?<%mDFs5<kM!''#)"X$]:U3`G$&.%gY^=%K7VJQ9C:bLZ"sa0C=;!_003cSBFI.CAWap.[7.'rI-k%Wt"&qs#6#8LYsZ>s688?^=!baWLh%aoVEcl:L'SjU/N;9bIr=)R"ir.Ei;U2MV5::X53G:6Y=:F!hA]q)amPCIAhd6clDVW^3r=/%+9kV<$gI?/RAM'Ki[,Bcg7iX]M\gtT=dH4tkMt0C[AtK^=e>WqKV'G#"HkUd'O&qmiGE4r/]5rDBhc5e>u(Pg"fBU9'Qs@)[LMVJ%P:I-?9e/O(aLKFLf=/Lc43\>YBf6lPZ-!j^'aWmOSDfh;]R:VI@frKX1GX]qVGWmVs2`lnbIl_^E:GaEF4K)jfIiV1Q*@JWZng:W%VpP+e)5&TJf#VlI0s^Y]>Nq`c4QQkk"6kkZVA'KH\mh_hnK,_EVM2*b<E@V_=\6(4Nu(5IADnrUW)BX[G+En4S2'ua[49$B'u@#U%3FA'>./jr4rf&ko[L@F5C'S1O`uVfBqGj$6Obum=aPqW@=s6N*'W\a(#b\[U9BjVSLr-/j8&1W&1>t=_pGL_G?n0;D[bAr/-jtF/%Z8Cjm$_lf@;][RnAke$q=UaX@]J2I5JLm`@F4M)n3iB0]7'!1bL!6UN!e=8M;-PmC/#L?M/Uhe$0BoGcm#C9HVaMG/F>,Sm\9KX]%/j2u$%1``HMXn^Uqr+cZViK1&ohh<j&2CQG/]UNZ9[d(/MbBi\eUg#-0p)X:n(2FP<Un[na;4qoZ<!G8n(/#3A5)5eWXDg%!*+Tt%CWdiW;MWGXrRG[YQmNj``Z=4F=iA+t5d/Au`gqRjB2jdOO"oIIc"kfdm_@$::2FcnEF[tZNaEO#)4h5ePBs\t=?sK#g_;=3$hmE3%iD6fKD&]O?Q'pMNh)Wg*S_A\LigFg3`/fo[A[:)'@<scJ4:/J3>XFhO&%[_h2$%nCRUfX,/f0*u2/IJkoGH;@\lrku7jlFqhSR,^%,hi$XM@FMRWg\393LYV9b;%%s/>pG5BaXOU1/%-W>K[a^mEpZC."TERYcp1HI'p01[a@t&U7V,/inq:XPL+ZodjT[$VVhWejOg2=%*RaUFGQ-?P;:NhDT2]RiZY1?sA>#6CQjaA"DUFMEr]WAJ?_WHb3T/(,NMHifHMT%>'cEa&BAJAfKO3p1`P3):8r83q;`EEQh2t9,%KmbJfZS1M;!e+j#Uk#pHF>&PBe+?fsBcibS9:O#Ja;pMAT<KHZhW./o'TFbb*Qr'k6O"T%>ICiaK+RIn>8B18(p\Ld%C-:nMl,o&%69dkp,b]Ieb`J0`'m(e2B\(-IcMNQ^TKktAQ=_!l`!G-,h+#TP>\B@5$ge?dY9$!GLZT9Y31n3YYIRa#]^Aei^0,"0T!IBS,m5Ul%+[`''\/+NMGJnFr[@"m04WMcNZ"bc;b0hgu-AFDp_!-AW\L`_iO-/>>j82AI1#XG'gs*AQ;cBPq=a6LoQq07t^imPa'Et)leZ0"I%IX8;f1`RR5Qr_ZMjrLq=q)%;/rN80T[cWe#"Vb8k!caalL=Mf6Ui[Y8kTrIXEc&o<p4bP,+4k`W@^<+Q4-Q#tL&,OgMrZK(/FeX9%fpk&.U<D%1=+4W2D8>0mjD.,eAL]rhdA[u_Iqr]'@p+g;k9n>paA"=+iUEIENZ'^(J,lC!p-Kp%BF2cH),tAskj<LW1QmMP,'#WC%Wj'/!O2"G6F7T]L]XF?[iC)s6-0m<tB(1CXaT>.s?KVTX2BQ9EB/`-"+/1hf[phNq]'4I9Z/$W_g(h)+4$^!`W&Db\4KX$ufRa-D%q%WUW<7qEK8=D-+F+Fr@`Z/tXekK,b'[#"EOuXH,,HBKL7<9Z!fP?4N5WfHT]XQ4>l>S-4mP&Sn_bjj_bB]'-5g%>"7`hJH8@`RE%%#F'O;X\0P]1]O)]mR&,Z;;)66<k=H49ES2dim+3.\:/>=liHk5eTidkU`,!7N/kK\r7hraX_=+e0Z]:Z1^b](jNY38IFh@+26re%*maI<4;TJJf>O!$CrMaH0U3A!)Tk`q]OVA*^<on+AOQg6#k]WQ>K8H%qmeFR(2Ts<]J2;_DQUDc3)@^eQ`uu18m'VMG4ZO6C6nhV%GD1q[qcQjX[I8uK9h"Y5P(3D&pQne[^R(7qUg)mE>%a:&e!860QR0$hKfsAn-o@"50hsP5nJ(4n=A1,:Sd>^m;49n9="k=7Xepsf%BgScsOE>tH-Gso^%(AtdC]VZ>WpAG:pfsU"d(LNX#!b[[AP!;agFMkg'mN.8+9I(H3$,'5Jt4BU6#^KuL^GN*k*5m^"q<k#Q="`u%]&/oHC:0.gA3##\VGj>4WqZ`iPF16-*G\XZ)#=>8,:b6\/+nSDY=6cN_h(b3V'O<)Eab]k)qEfh,)2E;3_LA5<_RUrAX.%6X9`>D%U3Wdr8@,[%T#$aKM[``&9jPSNjml#d^TOJG'"oUPe]aPG&0*`/Uk\:3[R:_])Tms,o<lNrhEI"-@sO1p',$/7:_80eYlnbW->PiY%.9<I]e=qg#"?4_HH@?Lo+eo4o,SiMZnrqa>&\mk,:j;TBZj^:$ZJqDjW,fc7C%D6*i12NA_fYt^[H""@Y7@?@J3\6!PnM,G:i#!Z%?J%&6%4RZ_$Bn5f6%i5D5;7#HY:A@2s$Xs0^.l67G_ODc%#Ds^2cP(!8]-'&?a<>5(i!/21m)NjUNB!5ZeA+5P3>ln7;56-n\Rk-%<(50koL:mD979\aCSLL)-%S,L[gN4YW%;Y37:6Yh%Jou0nKBtg5@PHC\fg__AMn8_BF^^N>^fn:aAJ"I-K[0jYt.I*7J4HbinQ"I%!q.;@'hEiBCmJ#%A'@ut*(UIb-SH-(f!'nmlQ+Q?3]h3'*5X>1WY:oPX=?lh>egZk$8Q1<M=%'7b7$)Ll/N>(jXXU"bS9HJ>%5m]%f-dRl0Y^Z0&]Ol>-R<L#&);SYpjca0s(=P`ri.$q9A;W\A\5H-9R0qhbK:FaJW#+%FN]hEf`noc(A",CW8Ka94=f4NfXiP?\]qo#%&UQ\pG?8C$s86$C_^R@WF.pba,`81Ep,Q$_E9I'KWE&JrB@7o\MtTO_cafN,qc?i$+toLF_IPc*#4L"'od2VpWnK^?JPW:<o[KY0%f/)jp=cl"Q'(45=/O3F*fpLk)[ShSu7@%XKAgN$slA-9\(=ILm>]+[b)reJYT/mc;ET2G'BFp!=Z"aKF!+SXpU4[M]*X+/_qL03S%ps<KRN]\Mk&ds;bb(oom[NiaOY9F4AH(T#<Q2NZ^fOYQUADN2g/+p6@BARfdjPd_t1"iB2-Ih[l1c^2gRIa\7orp,CnW6;ZDt:!L%5nt7CZ>nI9JKi,2FIuhYI*SO)B6iUVXP!E?4Ugh-\]RF_Q@sZgnu;i@nO454-8]..@pi.j,;Cj-p_gM.S'cN`<^X3k8qITt&N6O\%aBf$90Mf!0FE+".%h3rA\T%U3GMaC2l8'/GM3n\AMFW*t=asSS"ar\Y'Bb$V`6hX@Y,LqW1aqCVT<dQ5]DJ`l$0[pk6,61PR^l$N%r\j-V<@ga3W`]OXHtT:apgG&/'p)$<_3"*i@T7k^+un,j_OMtr%A)]=E8RR6DN\QmKpa`f`&MY@cmpCi1^NY%1LA0T_`"#q7Bm$O%;[OU+!ZaERm26L$8E(@m;20I&c&CtOK%66(Q5GAKP<B1AS9h2O%KKES:f,c]S';$]WB\-/B^QIa\tJB[;WQX/C1tc7(0XWej:VkI%.)m/A4MX.@U,-2\,D9*&V98hFAfV-N/FRABn]Qi0I?E_47l72fE1Y&r7keB;qf/#;O]fVdAk,NIb(K<j#@tD@obg/hju5n4ZuS\^%2_S[2`[)>inqqe1+0#_jRK"'mdng"06j#"QdQFMSA^,Mc(9@'Y*LL(fo<5`$+kiD?<lPV-(O(6Mj5YoiXQ3[&iD5?mWA/XD'sdtf%$[(a-[Ei)-\K&$;8]k/s>N>5HQ=gR/D2CnAOb>ao`:rc=)NPl=ZIZGC>Nf?]&\!:#`C$(oPBi"=jj#JS-pK_R>gZ:_1]+I+=^]"l%C"a;q-2#=ATl=-sr5d<ElG/:[a:GN`1.N-4Js/jSLr/@7g$.ZT<-^dm7t0eOqG/%==U3F\cfDuia&\kg:r65oJ`^CjR.a2LXQVT?%bY"jI1+*X>1T?-`\Vunb*G[G5ZBgeoSd4"scrS^MB.),$lreEkZl)(j^rX\M0uN$cE%'m.W[Fi.^WfQcS07@l]A?j\aW66O?#pHF%P1^mDTEWdjD%QPiW!+^38HIK%*@',Q_QN%60MQ3gKbVWsQdmjGU4nkRIo[!/W^n*ZMCe`BEa:DH\onqp;K!_2(I6tdWnc*OfZ6]5%Bi'6\:4Fd2Z3Ini[$*YPDg,lX6^gem;L[RtM[IK68\nr9Q;EZAZ;sZ>oiU3le#Q2:&m%e.h>=j:RHS!fO1)#Nd_+a5>]"4/c:i">%IWs;0K*dHOQ=;E@%^pC^QWb,]5#l["oXYsO_-/6Zb`gfS;Og`VH<t&n!RIN9^/C1m5#IN'?H`8"MVK7;M0VRR$_&C(q<=q=c!?Eu%-\atX3CY=Y"gAh/o#D5<P^41&F[g#9mA,%H'YBf0PM3FgS)?QbAa)P^BHL)^C)]F[Vo'q^Z[WXdT8jJ1daZU>pn^36jtkXX:bYOu%]FLpG-pG]aD:O[BTjT"rB2XQ3MK>_R];3J/#.h[MQdsu'+"J%-3-;5HT>Rk3\?^\F^K_JeM`IsRAI^Ji#@D=.s7lMHRjgY%:,ONl%:aHV//umDiLJd_3:e*>ZU-JN6&Zb)1Wqo/&MBrp*$9B]GbK;mj%]RfBp#uoR(6FDV<&$ABmLl6DXbo1UI;F!:2cK@hPocf@=>@s!%>o+YG5`P*8LcOc*WpJ+_=OU;1r1]FDjEYAhHEbUc)&PN8T]CQ%5q!s=Ld`RtkR1Se&-roW<B5u[!qO5r#=F5)P[4tgk$Yb!/#=-!%*r:F-a+)Y*7+SrDPl7tX\80ZK0KZZUls$enESKHIDrL?PgW23^d:l[N!E#h6.5N=C$&J`&d3"p8+)4-QL3\4t%e=7S+TP1p@H.X)%.#o1/IMjOUBFn#gU=6pbUsPW:C>!#LamGtI>C\[cM.AGUAe5B974W(ARR<3%H+8H!8OjBInuO[tb7)]\btSMu`hq*FN(:WV.Z.M)%p-Or4[H/-VDD&36=X]/,KX<Us%1OKg.R(HXdFBT(>`Y0dD>,6!!b,O6U+/l;4)Fg.C1eYsB.?Hb]It]e@KMnGeO^s,#V8LL^lkm!%mUDcthH:Q!0Jo\]O\1bLkQ_j\PtO%l5P3J;??$`.[0pV_bP$[<Xk7Sj"[j>'fqHNGP;UXaTE&'#PVBd]\H+bZ;W0Ge.imTu_4bJ=%QKTNMM+QD[cgYP:o`Sa)/*(9pf@ok-V<^VPl2iA&IF^K<mcp`e^q'^EB2i-RWn8#)Lugs"=9ngCa6*8P"I$A29QQ3%.\TpL1b<Lu%AkV4H7IQhW+%Q,E/!Mo^'P&B"o2@rV6318Q&p>\kq83QfT^YJ!T;qsj!RQ%Q^l4A!q@&F.C4?5O%Bl7_^I^/p)6=IK]*[^V9djs3%,1.Pa1fj!;,S%ZmTb&/?=e'#HS?h(FTIf+1NJ\7m8&;Q3XInaul]CtBn\`AG0MrgrO6")QFK+X(W"?,ke87N>Q0-1/R$$dZ7Xdu_%oBcSJ*!uD+P+EGZs$]p_B/nB.8h@q)'m#t_i_1eU#313Q>7%H6"de6$dFH(!do<?e2m9%6[-A3WRY0g)Z0HlZ-oDBbNnhghbtr-2%E*[gh&a)D$2>=TcjOE3`F)7PC7rdXa&!L@!i?K'CGL+m\?m*NKT7sG25E&,;IodWZ9f3"n`ar`C$USPXg'Nb!G[X<lho/I)LpFF^%8Bh:1>5#;lSPh:*<QA,bjai4E6<YP6bUP"]d]d3,%>?GR5+"q7EE^R('>FLq^H'D;$3h?.ib4q1V;trXLWqjc?24N3=i"9l=i)/<%=H=43jJ]a%/I6]@]:Up4QT%lDkrO_D._/CG*dLSgb/\I:l=I26mbdNFQ89;qr8SUl7qiQk-6_W5ll)Q^-PR)^j=''DblCUGS.%r6%!b.dQoth%f.%</haGh*#:>,he"[/i]'oeR&.%`NA(+Qnte2TYt0@B^PK3,LiOQ^mmmp@BKr:,F=j&I$nrJ#g2Tu*H94%KF^c8bdu%9naf[4#ZZ<&IeXgkL;heP^G7!UC)!@idoqMm.d_?n3jlT%ojp6's/-njgfIrpF/-GQm`X+AM<!?gAtT.pe>;cIg,VA-_P:]YRri8%jG[&p4c.U<)i99&dPB,b;l7TVZ;\QWH3>+c&,_/iTnE18e*p4WoS"7o"=j`sj$jZ^Ib>",'L?ceBKd0S3ClN&V+,Y<[b!8(C6njP%#e\;D].>NGjR]]QmILYsg$2&`2SoN2VX:t["d-5S5o_U6U5===C%KhSaSTn%JTM/p,n7P9'BMlo6mKi"06uAPgaMD/c\HNS2Be$^%r>loh?XGW?AY'o=EXb0odR'??!`I11%Xdj7Rnirn#Q&4-4V1TXj>Zb]mdBj,lu.K-\Dm:1'u[22S1TPLA@D4S;QKR*T:pDd$ZoA^%F>"T!.XW#&nsg:$C8S8LlPbI,E%NNK"?Vt3FAEXsdU]R';rrbbbRf-,@q'ljXm#mTP2e\7j_*+kEC8\[d7h=/d"E!$o$SN#WpC)e%n\Wqo^RIkYJMh'u7+YJ;?YtV_YR#g$2p71I7IE&UY$<0l_<^(5KQpT]<@#tSF_F_HP5UC3n+U`JZ3Kf5Y-4Oe/%OA^h0F,OO&jik%l8r=UC8Khd/&#cm733g9:>-"r+0FC\Yp>H+q:t_#qZ<3&Se.n=ar_ba,JF,r@&?^^cLZ#=*StbHNY^\`UtN&f;u(V(BYadRbpAQJ%I-n,1fn,TMB&!4.at8sk1"4O\SR"?s8;E3X/*kV(*2Eb7J!5C#NpUfdF"$i.6#49LS^8\%l$[&=%VC0f*\Ja1&+0%AHuBkI!7;VL%q6<-SR!Ud!-e`=>0;1Q'BR%\Xm!2;.JFh9:HC-PnGf-pMd)4_CU@fu/EcmXrQ1(?rY@D9>fXR#F$<<9lfodfieV1XVL^Ki0$2LkC%8BD,3n@7t55ah<.U\31=Wf098Y-ff.BafV>-*AU>L4gt<MhD+9W/iK[`l5-NgP4R&89ma<&Db_)LoGb@BI]MUT_W4&--/E`<"HsW%<]QSJ/:jPQ$l(D2;kkmd.(9bO-GVRa='X+A53nr1d(YH7+6r.SnO.nlI.\c8P'^74k3-r1-taZBZJarFP)31hl:#0+=,XX9I!r6n%<8Wh(/>g;u1m#dci[fbo+B#JANMHmfWGguppF.X(a7//SfY7L]BI,N?`3h`CE*uU'EDI?J\41q8:aAf#F40<ss':Dr&rs^s*ZcU@%3AubK%(l@`;\`)Yd'@\5<OTkm;t#%eCAUVGUj;d!o">\#lg>L*s1K2SeO3b0G]JRN?0IBMMV'9j0$4.m<gAZ5ZEm)I>6W+]d/oSZ%E;^''L,caR(,=Unb#;IJ97g`IqdH_q6%<+0pM>+m)p*FpMO%1&Terfo9aIDJ0V?I;/HY!9^ronTM+tnjV+AV*-g3@<$Ep47i^&#G%0#t7r</L0[Cr/Xq(MQ1UB""CAM/u65%IXGO&DO[M1dNd-f7GTS[AdJuV?Q>+XuZZ*6\p6FPgcitqES)r&oJO2rrSWnR7bukD'"N*%2XZP5l'PGj\WPjXQXb5VA?(HeaR@p*2K3SF$T^2O)k,?CDB'/`b>i>uBqr42Ent>t/(Pbgc2,:e+1n5[#cp5c![8npBs8<kK.K<"%nj(JEZ7W&d@9"n#-7:KI]1==*^O`Z:[3c(@)`SW8P.lqRKtI]BneZIhBWQ:,<8[c>lr;.A5a'l5o#HLQOgZD>C&#!VpfCN#")7Nq%\%36E;=P6mH`fUrXnRt[aWN"0D2kq*=T_<-+[pRgK'$/[H@B(m,#\_BrN7@.\5ap^U?+!ZV7.%R8-R+Dj-u1D__MZ[5f=d_s,E\p%C!poY7&miJ4F*7BBlVo=;p%1TN[@be3;ZUA$;L/]WM1`B[)Jc8"0"87s#-:VE81=!8siroiHhKo_8eFn=AE8p?an#So*&:!$I<M5%f.WenL;N!=Z[t_\]p?:,)lhD)S1WPBNcDG5I#00,/\Q_IV&+6t,Pb4.MhrjVWr#J&K`gUZ^TBr1+<?cP[&QSBlTnEgCEaf*<oSL@%?4NnMW5?ZPD[e3j7FF'fH;LN#n5p3=k^Gm(n`<DSgBfR2`Fe#:L?X,cpFXo]aGZS_2.!A%7?A)X9tEPhGub?c+;36$)oe,CGATmm%oTMYT+9MMXQX)*3_dK%:=s[Waid."lRp:b`.KG>.mWguq0aOe"]8,,d0=TQl7\0TsFUg?d773!^W4eg"OE0/-,[t,EaAC0^]f/`K%%D0f]icWC[U=lpN,`59W9(K'7r&R9,ajVW*CVArX(MM*P/iq1(4&HE-\@4PVX1oY/U^,_9h+ijTiRmNUE:7rX3d/+SR`DjZj)%*-%B-0V*HG+0OY4pg@E.-_#\o28CAZF#.T`"rGj1@s.lb%MIrZ.&dC0T:M8]S9FWfWEr7Au+\;l+j3[Le$sL@>XgT?2Zp;g:[QB;-><%2duPVG^-H:EqrCR_.bn)`6Tfa4RW3>?[31P"48gunTj2c`$PO^0cbo3L2;]LA7O</+O]m1?L>`\#*dQOWV:EBEf0-[pBN)6kXu7Q%WOF7nFsC3H(&Qgc9U*Q%-EG4L+!/n2`L^&nmJ3G>C3C1@Vdi-c7ms?Jr.a0V&L3o0r!f`1:So9TjKG7;^W=0Jp%GnWT\!.3&jf1"%!=ADC>-KqrD[6qc>K^+u/q:#2]MKXbFcssAa;("J;a%B2hc$]o$%o^SU_/6fP,hcIbA1ckeW9Ur0f=ItUeGONre:eRn*e(2^<S%r%5j!=f1h_p>`&U3m4NgMDieulOQCm/+[Su2"lid_gkEp]*$O94TaF4Kd3&hK)IL>V!PXmSN'r&aIPjWW[80oG1F>ta<g`uT:4"<.1%4":`]NX>eSS$a7O&ojm=K"%Ml,f-ba'[f[3j*"(OpQ]<@00dF)_qRu'B3e?0pLSnST)B]#;bVIi_bD;C%;A#L9jn6(h-LH9NM'G0%?4*?9s000N&dP(dQ^8n"lQmNW$KrC"eMt"(6M^_dLC\Wh-+3_0ZrUkf+lhOV'+&U0rX<6+oL<ZefL3[>,MYGk)-*&fi;[&T%q)pt%2KUV!2`.'?]!#o;fib"]LE$h;L#0"nA`9-)M-.ih5PlDoHodBMH$47W!T!/MFUiu+="(T,\31W"naNU5@j,Gap46_"/?GdZ;ct.L%%45-[oT>=LfQ+WW@`KJ!4Vme!g$T/!XHN-6+Mqj#D[<"Tpf\_s.#F"c*$,Kmgm%dr4VesmQn-WqnSstBJ"a%k,oDh]?L(:-="1-Q%^"q$Un2VTrHphgZWF#ZJnS%.I*Ulq[3r)l.i$0Qc3IZ>Q7TJYcL\YsUHR>us&]4P\g62WL[-P/RU>.=HhG9K&6p4mRTf14+V3?_0%V8=VXVjA'!`lj*E3JPLm0f#gnjSSXf]'.8bAsfHRhQEso=n^TUiAO^0(Z&*N5h8&Z1g5<].cd6aUnPa)328WB;uk.!@Q.RLq(sQG%7!i`Y70\j")rGo?eRj"!##s1tka'cENEL:)_Lk4.9!g,7$='*!fgiDAo3sb<8!_0[9RB2l73X1Ef92qs*\:Y"0VgiK>gS=/WBQ=6%m!>Zd>u%)UX?5sEUgPo@kpjMJJ:_NnoTPQS*:\NZa?/,V:J-RY&(]pJklO=)VlbA4HXoV4NXnB?9i(GI=UU?85R<NHQ7L47+KJnK%L>$)?=Z6_DE#/,@ag2l0mfs,(\tqAClD3N@G0cgLhIJ's)6)!,r\XLRT"aDMf3G5qA3#s0"hhUN'\thg6od@)2Zc,q`e?fp33'Ik%#@+;p<*?G'=5JfJ;XW^qT03acl832C*!`-oF7U:p,ilEoGtZ;:J0\[f8WerA!d7Y8"IC1sG^YV,U)*%m]"e,@6bMRUa%QXMqpR&`%aIe(,AJ7qfgC5USAX5=m\oc4,TscE?9Su+u?Re^M;AQ=7WgGG49!`>9'bi&V)o*@i0b%dkLfGmS'S*6$J5P#OZ@Dn/r"#EOH%VJ`%P0A*Q'cDQhPgl@O*&/1p6=hsL0$+QE0;;]n6]lEnGELW`>0C$iM/c71,#W#e502i[d"UDSGhXKHGGkK2M:U5ko5ccV?\.=_K@H:E%M[RPHmK*tIoL6pqX'.NZ,R9F,*3-<ZjT$p>hL1M/*1(\GP&,ju57pW>$.ZBCPo[;EjriJ72hP#.1?+5PFpZVfKD"hZ)["%`omZp1%6Toi6k77YPOW5US`,hn9CR"N^gjshdQ@&`ogn^**^`N7REj7PsJ?OeHZ0-&.9*TNr.T9#GLY*+E&XGKY;JhO"^"q%M/47#<!sH6@%.gNHFBi,VZT5C_:7j8B_R\C0oGXOBYeJ]"cLl&4D`%+&B<H@sOk4f"f#d[J=OSP@s#n8KD=X4<n$qhu&cl<Y(q@:s;3,8OEblp[d%W95Km!JbHlcCGLMii@Nl3<cH'!BZIAD6Wapq@Jb-;U>FsOg(h:-*^%>RGq#RWkuqk4M)WFBLaIF5quh,#uDP5]1upD3P/Dl<:-_I%.Wi#ZH7$:)A.,E12"B4q[<;<o6&IR']Vp2YI;>g$k[3?Rk]Ntb%&rH%nZZ`-8rpG)q<dO:BK<._73&`Q/;ZX<jsZ_Q\]S*h35@2_%4e#P7pM[>EK?Kp%Qb&0XTG`bLVBCcYP#]cpac_kh0\8SdZ25rTf#]JfM":,+hX/UM!f!#/,Rm_C/F0%X]U1$kJQNJX_]C9coP)c6%b].AZjVOiV$/)9jW@656Ve'rZR%%mnE:n0r/RqgYK^H.*8eV^ofAm.EdrIgbe+/%UZs<@]LWT5Qj1Mp/DkBVQqesZ*IH"[+h9`U"%1<7MgK>7q5X.Qaunb^q_ZcpYJBaG@JMpi<;TZOg9Q>tFlg1TCafQR:t6ZerW2`.(k^2ZlVjj1h7NMkma$^S\EWD=AC_tQ[XLAufU%+4J8]F82,Y8rs:%'42te26je6:D\+O?T5@%Y5fc[0(LMXXZA*ep+&r]Z>NBdNPnQ>dCE,c1?/eY*74+WPX]?M0;74V7#3::G7Q!u%0'[nl?ie7U),D;i/BUGcRg9B5&^=WUfE9d>]qD.BPe:&>$\WZ'`67Ba+HL9W@75m19"gBhGk#3n@^0>k6>T&DVL*?@&M)f%O)g'i%rQ;quh9\kYSX5lI!j`Bnkf!itat?n26ZeWqrjl4:YpsDR,Rm.Q)YNul)%!T/NR.?q#YNUoEq*T`3B;sDhJ]`nj!0X@\U+&OTo6Bn%Yu,d-Z#<esDpr@OB[U@@;YTr%/XDHri_HY*q)Bg`27Q:MYhN$V-(*WSjc-`26"V9q6f`unV?(I';gEGM_DGYC`7CG:`I(H&MJ.Dt%`7"Esrg'Y.*mZ<G;-k4d2md3e,Eu9E7.sS']-c/$f%FV[BOB>j-;@+G?Cs:Zog<8I+lO@3P=c=j(_!eM%4hkCL5s9jaD!](%BIOi%-:X^>%qHpVG7L2kG%i(Kdi>`6If4>R,<D4*9QIp9qPBW:X"Xp%1#f)!Fn.fKcs:Sa2)I8E#,ABX)_>\nh5gq17utFF:dO1V\qhs=%W6dAb>"2)Y*+(HcG&$E.Y9R=H,SCigTQ>JOVGb#`gRIIp2'6A6l7"k_K!YV*is+.Il?o3CC'nme@3qQE9lh$)X`YbeBiNTgIZ;R[%lI"9[;%h'uq\+UoHr00EHt%'49iJBs"\c2KI8S!O!?er*0Z?"8:;T"S5F1G"'U^MZ7o27Y-kc)o49t8n,YH;N(.;'5a;,"am\(>#%ZgiY.e_1\SX5P-0hjgL^OA7'(Wkarq%))"QF&fPkTN:J!E/4V[E<JfZIi:K5^i`iAVp%$oI1O?EWmOkgoA,5ejc.d&j&b:\5MPBF%Y@;PZ[1Xf!P4bUrU]6i]&!g8l7AM:R"C7&Jcf_ksY!jb2=Rk)VU^eK$R\79%+VHFOWL6AeljG#U.+?YZ1!`0u>,73cq:Kmq,Z=:<%L0m0.<V9;C^kK6PRS1c`%o&=*/a.T,B!.IN-#n<A9B*"0.TOq8q!fHK-a2W",idJ=FW7s('rkcV4?SLY2D?[Q+Obk?mN)9=LCt\H%_+"?ch"QT"b>i0^?fT[TA>V[Y0t_u^;=H(B)&eR&l?<#LKB&@i6R=2A5mX+tV^Nh-"6qWXGh`S$amp?='4[u>hBlD`g!/a_N1Eg1%4CF&W]L]V(och-C.Ip4ZqWO6+SbGD^;ouenEtLpX:I1BXdZ*B[[mDpR^LGRK/jCn"dtVfeC%.%q*aC`MZ-GPS<`ZJGM1sDtpchjV%6D[ZMZTBHolp>NRW<ppnW0TgABfS@bjUSbh1tsnb,XAM@EDaF<JN$dj)X23]KJp-I\"r%cQ`A%1h^CFmpRo2@WlS\aRC"C7;CZRZ%d'gmeT4Zo98YVhp&2?2kq8Q!s]9PK@>Q]gb)k"#7]DM@<REjLC/9e+(8l<'`p`c%j)SGtTb5PBiKg+;UcRn"5/eZJtU&OK%fG/[Z%l-nq)n./VNRX9+7\F1ZaNZTsTL-AGX.?ZVkd2]j%3+oQQT+\+FP$F@hYU\&+L[lh-3uK6+`q<`fLZU@;WA<4.-N+jhg'^t6K^5ER%<6ehoSJV@JkB#T8\[!;Tr:"BUOs_*XCg8cQ6cm@4,F/U,5N)P']ZB@Y@J1466^6Rr_(FgMi*=%h@T==P.b;Z:YRuAnnue$\Z-'@S%AZ76b(Kb*$U%^:!#7X&0e[m>\I%Jm_nMA6JPFMPGqThB['uZk*p3'nCIgd![fA9V]Sj<ag,"k$TWVGK.W)XQT_%hg`P9`HhY3R?H%%[L,Y-(uXI^EpF_#WJ#f,Nc%^'TQP6SQN5Li!Y:?]9UJNTDMQ<('g#6`\8l:Rh)^foad<qMN^Ji5m9"l6m1oG))o?Bqc,#`.s/(9%o6DLaJBP.S4bUgJlZ&8FWsBm<^Y25trlJ8PftVR44ZmI==S6qoQjcUoNo3qLM'U94BnIUf]-X)<<c"]ODUHZhU^^dBDn6Ya=.:n1%p#_Ejip&2%k7Q#"+kV:V0b>'%J%3@('LE6q28%ae5beR6@oDtH!e*L+M[j1_7&IoB9T'KP:!]eI]WnKDrh0Q,*:FEFX@o%dO>Ln)%<D8ZN.&_;@7&)/bagYZRYZO&J6Unuiie>$p40b%45.Fhd.uZi<EXU<0(u[.#A];SXQ0q@CG;n2sWmdt-/t>V=4(No&3H,&dcpsLN%"lh3+kB!92?Qln+3082J/aR'>"?FlmBRX.4jV9!c?L!MaU5*Gg\Ir3eek_JUAVCi&NeG592.H>Gk/!Dm<YGZ)dkZ&B8TT',_]F\"%?a2I&o.2_B%n4n3CR[[G9QfsnM:=k!K_oc6BrXG2"P.)U85tkN%ERng,4%S83*["p8BOUFn=B+BlVP;:O)`f8%/2i(P.?GVrr.p@%%/8?p_skJ8O=Mj_YG2Z&h\^6%KQeUYpGbH=$"rISd!GA1V<Hk3llkJ5_C_^Q`NpYlN&_Gf`"dN_D"P[8?"!.<R.ZuMAFnncI2Z$L%#DI%oW(9q7k:r3m<.(.%nEtB^Y/jdMaSQc@A'6cn$DJ1E;E.*F,aA.VIs>IA#:<BjbkE'?XLq3S#H\^rcdPRR.!*m''@>JfW9/E0%$mga.<e#eg!TB],::ZL2opUp-)genDq3XhB]M\eRH0u#,*I2o]j4(L]@3LfhI>Y\u[o;Ii42b+TIj8cn<e]i(oD5;rX!/#p4\oY>%meeIS>hNe&=p6gFXIrFTs+D\&NgBY!rZ;Uo[CP;h*gf0!0G!b6X"2AZg62R),pKSfKTZ9jVO)"ndamHKHT3K`inX-H,ARoRK>H3/%lYe/jeeGjU2rD7!IYD9mgFp,s_Yl39L"`03OS<ZHf\1YP]HZC&fNJC!.]BJ@:Z1;=kKLdQWYB]kb'[3mJ`J>7\LsoA]Q,At5Bc&r%ghYi"N\tcA7)ar8QoiWr=<S;A^M+(5@r08,:DEN^"=o!5GqMR!^TYsH(;U+E./NJQa?$D2S7+JQXaBtn_=jn^MZgE$LA'9dOFG(B%Nfn.V*h-`_%kHmMQ:J)NDYP,.:<Y(Up7?,c<YJ>L,:E[h[HNSj6U8V:o;e-'NUWl1GkOaY`Djk(+*:t_=umcX9a`t>R+0Qim`>"+%=,KTqV9M^LTdPrbCPQEHiRC;(iuHVt[YO?k4fi"!CKR@0eR!uQ;aIKF\YOIE#VPu8CYK3eN=m9r(/3uaSr3:9._>G8<60E3?>#4j%[#0,^X=D;Y^0@5$FW4qOC'3I1Vg.(9E^.8Skm*OZ5R?rR+Ce3<c3O7Uq&ZTZKZ)K9I:IU42Mi!Rf5[3`e4KQ'("*K@,h)8Z48Ch@%'s'%iN";%UKMZ<(BX4MbWcMf4Y=25]NGXdC$E'<iBj)P.S$[OsdD\>8c;<Qe[f(f[DXZpX4W`G9]>G3SRbEn9/o*J:kn4V]0$!f^%)Fgk'$GQPS=0i&NX4`*u_.!^lhZjN8F4fj9-OX5n3obXoGTqu,dA+h7k8moX@(Uatb)%4+U4MQP5\+8a,E(HPTob2,E6@dSlE"/R%QigX[_Ng6SQ<\G$O=%.[*=*gclWS>_`eI+)=G0ne+moPGTIYB/?DLJ_Y<&m+h8NmT(]omjSRe)K:<+DaMcBgKY4al339r\gB^[a>%g#UT!&g5&o):qP(R>B#/De3`p.f,S+X/M^2g/LdJX40+qNUDH8@YSrn:3<;.XRgEur]I9ks'56::+Pr!JVE$^?r"uZ0D#FkG+*;B%9%Q6'=&79t]="uh9Z!je;%S@LedpfRf."Ec.e5r6/2$HZ.(1leSMp`RYQXtU;;:SH-ALddBe6Zs`WU"_[K*'YU0Vg;0ECo2nn&@6%n8m(">^u`N"A=%2.2DC$?k[lK0nK]`]OKl^Hrl0pX3N$KC&VOeIkdI_m1#=]T.Yto_RW&,7h0lMh,Ep'V*6/UHs#L%N&n0a=(3d/%%k1)Oe#7P/UW\.>[!e=>b\Ggfk5%q]Ph<*U7+Dk"i1-/KoXaJIaTQVa,u$OKeglGM]VQ)%:);/4N\i4-QeU?5TDRRLgQnL+Fs'/?%"[?q(8S-C?>UNK>aVr<h&-kSW9N`j\Ra64fY?eD5o#_B#;+6@u0#@LJ$?E@Q0F>80P'K<.Fc8(q_Y=kSX>_ncE]\\2P3e`TX\T^1%m&f=0A>(QLi3h)_$g"sAYH0ojgrOoL\?YpAEF@8Gi4Gn1HR&Fu0qUW;]kN;3?UGo6&"Dh_inFN]_</1QGNou@;oS#\[IUieoW0HT%(cREi7&LPWT.C0M1FD+oV1N,qr/-7$NN2c8Qb9V1IZrGB;L,<LUhcNInRGh\Y#?-6@3aii3I>U/a'd[>4X5.%V6HXT:EmA`bfTHq%FR^$N6[qqncW]u>31#4f%/V$%#I_YnAZW)*Itd9p8FdN!N8k5Gnh&ZF$&R/=nN9>B8Ln6l,sX)YV>!jH7dd%iNNmmAf4VcO'mk![%>O%Oqb#*hu94!=_I2;.#';VeiYe*o<4N?Ucc;FsI4kL]uQ[X/EfD-XkI82R$g:L91?P].fEJd0VlEs5.2cdX&Np0@+mDS.UqLT<m%]Oi>l_0etgR@-p"N)i@PCNq0>MEL.!IYd_IS?jiJ+AR0LFXOVqfPkuY?X_C`FueQRcR6M=lg9(XbJd.]hDJCbC49!'!T?03r+MIK%2mR;Y)cKUj\;I.%_a,'86EeP&lnc?3@5q;rcL`_cI%TWq/\&9NolbcR\Y.j4Sh\0:'i?qF`+SCUC+#(?OH%H>6;kMS@J*j;k2IdK%)(@RF&C#0K[9JO'QnllE_?)jt<Z?ZkSlZEQ%$6g@2,nA^kR5K6Y,X!1@p[;MjrIO%%/2uq\RP,)SP!8B?Wfac@l9ZW$)MZ&KMWhO%!a:T,f_+g5*3(pQJUKLf.Z>5H$Y"*#mZcmL>PcPp8Zi_F;Ls)[kr5l*bopc_P+1-EO6QgN"$!!iT?9YTenL-RV1S2Zh7H<Y12p3C%cKbs+I:j4Y53t^=`C^GWHVI(DQqEFo;j7o.]7+T)dI,7#0'?ff8$U[!cR[&,Fi@CEib>p[CW1.q*pX'm8Zt+/kXG=3(Tb2sfuB7t%-^KAp7Fdf*c)4mB5h?o4WFd+E8aJ/\aO/^P.>lWi&N"i$W:N&[kU_IVSX2_]&c3p#;&\N$kc1K=gpV4u9H.W$?##hjUEMf[c,W4'%QkIpr-o,U'?_KSeM1T1mAKKoc77doqfrk\[74V.q&3[&TP?k(8C-9G#9F-,OMbQ_i($%X$](*/@0h.rTNi[hN*o.k"&;9M"9br^\%eA:Y"e&`^J&@XtI,YTsqL=](p\L&ZE12\jnB4Ad6-4kGU>4qTm81j(I+%\$=b/5'EbZ!b2EMiAc%Qe/IMPpNG<rqD.D1jr2/jt+t%dd6^NREAP=Sr!,s9TUB022n,)G-4rPY6/X_U:9F/IPFld?@Z.>fc;T7W,.PlVai3r\Z2s@4eV)]g*bd0Cpo>9/,ubn'K^c//;Ngn%eQj5_oCP*U]'q.<*HT>EH7iRi3sMuR:X?u[H7%WWTcM4dZ4^oW7<ec(WTW'YoR@U<FJK?1iuWEp7g*=?#Ng"(Qrln@LJA8Ub0XtK%;S!$o@`*ipQ-'D<is]GIPVS6)dc[kQ@6RTGlk=]jS8u($6=rOt)sI7$UbkQs4/bW@\hD_;QtM[cAc)9D>PI(::um="`On+E4r7JS%AOFsU%8IMJbV#,q_HDqsKJ_1%arDk1(FD4@;UGW]8+b)jYY6o*Xr64ldoN:L<gnd&r"TfB)k:25mgYB0(tV#Edj_<hPICYBQJfr^%?a&CT6k6NX)P1EiS59X3g=tD.PTZ,jXE(LRUo@]!7\$Iq_Gssp^B7u6r:,'o4>TJe&l8C+[d26QMe6\J[":@80<j4!]s2/C,#UCH%\F!T=U<,'sUa4F;3%RgiNuEeM9&`/c+&8:Q[`j:H'o29OCtZKJco(3<!a_CC*dK1ibW:6FMcE#YP').uVLDX1$[J;IDre?R2g.94%Df!CuI!;nfVVTEWi$:DO?55YnYu"Z=HqcVk&,.FnL@9\1,Bl**f@W8NmLHe"YW?WHmI.3kIJ\6gY6_p,7TT$B7b4j@r>\Cu2L(2)%0<jJ-^9N)QV+1)^"gcXKa][mb5hQ%4<OLQ#dAS<T.4i0I\T6nJjeYrfCq!ePl,<3ECq$E">MAlQQKre*LJYpQeT^cu<:[Tl_`agL%l6@A<ToC&[ToC)\Tc8(*ikG3qCtu45LHkKZXr,:[P!,<.k8s6f`7E`!c1_T^bu`HfmOqA/*(qaD9Aic`o0qh$e+5`Kc`,2bS"kcm%^;BWjX5KmdK_tf+rmS?kr6p-Js8ASir]f7gs*oOrq07;ab?t87msk5p^]"!*s8)9+TATYAO5Ku`+5_SJqqnA\n]/C-s5j.8rqtdu%s8-1'r8[Z=ro_&q?]aFslfWcnb<Q#nJ,/g<!I]U-l2~>%AI9_PrivateDataEnd